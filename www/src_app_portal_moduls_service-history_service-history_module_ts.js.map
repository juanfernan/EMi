{"version":3,"file":"src_app_portal_moduls_service-history_service-history_module_ts.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnDA;AAoDA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlEA;AAoEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,2BAAN,CAAkC;EAC9BtE,WAAW,CAACiC,OAAD,EAAUsC,iBAAV,EAA6B;IACpC,KAAKtC,OAAL,GAAeA,OAAf;IACA,KAAKsC,iBAAL,GAAyBA,iBAAzB;IACA,KAAKC,OAAL,GAAe,CAAf;IACA,KAAKC,UAAL,GAAkB,IAAIrF,uDAAJ,EAAlB;IACA,KAAKsF,oBAAL,GAA4B,IAAItF,uDAAJ,EAA5B;IACA,KAAKuF,KAAL,GAAa,EAAb;IACA,KAAKC,SAAL,GAAiB,KAAK3C,OAAL,CAAahC,MAAb,CACZ4E,SADY,CACFtE,EAAE,IAAI;MACjB,IAAI,KAAKA,EAAL,KAAYA,EAAhB,EAAoB;QAChB,KAAKuE,eAAL;QACA,KAAKP,iBAAL,CAAuBQ,YAAvB;QACA,KAAKR,iBAAL,CAAuBS,aAAvB;MACH;IACJ,CAPgB,CAAjB;EAQH;;EACDC,QAAQ,GAAG;IACP,IAAI,KAAK1E,EAAL,KAAY2E,SAAhB,EAA2B;MACvB,KAAK3E,EAAL,GAA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","sources":["./src/app/portal/moduls/service-history/configs/searchButtonConfig.ts","./src/app/portal/moduls/service-history/models/list-file.model.ts","./src/app/portal/moduls/service-history/models/service-history-type.ts","./src/app/portal/moduls/service-history/models/serviceHistory.ts","./src/app/portal/moduls/service-history/models/serviceHistoryRequest.ts","./src/app/portal/moduls/service-history/service-history-routing.module.ts","./src/app/portal/moduls/service-history/service-history.module.ts","./src/app/portal/moduls/service-history/service-history.page.ts","./src/app/portal/moduls/service-history/services/service-history.service.ts","./src/app/shared/file-list-modal/file-list-modal.page.ts","./node_modules/ngx-pagination/fesm2015/ngx-pagination.mjs"],"sourcesContent":["import { ButtonType } from \"src/app/shared/enums/enumerations\";\nimport { ButtonConfiguration } from \"src/app/shared/models/button-configuration\";\n\nconst searchButtonConfig = new ButtonConfiguration();\n\nsearchButtonConfig.buttonType = ButtonType.Primary;\nsearchButtonConfig.text = 'Buscar';\nsearchButtonConfig.width = \"100px\";\nsearchButtonConfig.height = \"40px\";\n\nexport const searchButtonConfigExport = searchButtonConfig;\n","export class ListFileModel {\n    NameFile: string; \n    Link: string;\n}","export enum ServiceHistoryType {\n    Prescription = 1,\n    Inability = 2,\n}","export class ServiceHistory {\n    ServicesTypeId: string;\n    DoctorId: string;\n    SpecialtyId: string;\n    CityId: string;\n    StartDate: string | null;\n    EndDate: string | null;\n    DocumentType: string | null;\n    Document: string | null;\n    Patient: string;\n  }\n  ","export class ServiceHistoryRequest {\n    Code: string;\n  }\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HaveBeLoggedInGuard } from 'src/app/core/guard/have-be-logged-in.guard';\n\nimport { ServiceHistoryPage } from './service-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [HaveBeLoggedInGuard],\n    component: ServiceHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServiceHistoryPageRoutingModule {}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ServiceHistoryPageRoutingModule } from './service-history-routing.module';\nimport { ServiceHistoryPage } from './service-history.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ReactiveFormsModule,\n    ServiceHistoryPageRoutingModule,\n    NgxPaginationModule\n  ],\n  declarations: [\n    ServiceHistoryPage\n  ],\n  providers: [\n    DatePipe\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class ServiceHistoryPageModule {}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { FileListModalPage } from 'src/app/shared/file-list-modal/file-list-modal.page';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { environment } from 'src/environments/environment';\nimport { searchButtonConfigExport } from './configs/searchButtonConfig';\nimport { ListFileModel } from './models/list-file.model';\nimport { ServiceHistoryType } from './models/service-history-type';\nimport { ServiceHistory } from './models/serviceHistory';\nimport { ServiceHistoryRequest } from './models/serviceHistoryRequest';\nimport { ServiceHistoryService } from './services/service-history.service';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-service-history',\n  templateUrl: './service-history.page.html',\n  styleUrls: ['./service-history.page.scss'],\n})\nexport class ServiceHistoryPage implements OnInit {\n\n  translate: TranslateService;\n  servicesHistory: any;\n  doctors: any;\n  servicesType: any;\n  specialities: any;\n  specialitiesFilter: any;\n  cities: any;\n  serviceHistory = new ServiceHistory();\n  tmpStartDate: any = '';\n  tmpEndDate: any = '';\n  p: number = 1;\n  country: string;\n  hiddenResult: boolean = true;\n  email: string | null;\n  showPagination: boolean = false;\n  detectMinor: any;\n  imgRoute: string;\n  dataEmpty: boolean;\n  isLoading: boolean;\n  isColombia: boolean = false;\n  specialty: any = [];\n  specialtySelected: string;\n  bsModalRef: BsModalRef;\n  searchButtonConfig = searchButtonConfigExport;\n  environment: any;\n\n  private static readonly colsMd4: string = 'col-md-4';\n  private static readonly colsMd3: string = 'col-md-3';\n  colsMd: string = ServiceHistoryPage.colsMd4;\n  inputMinorAuthorizedShow: boolean;\n  optionMinorAuthorizedShow: boolean;\n  minorAuthorizations: any = [];\n  userLogin = new UserLogin();\n  showIcon = false;\n  form: FormGroup;\n\n  dateFrom: Date = new Date();\n  dateUntil: Date = new Date();\n\n  constructor(\n    translate: TranslateService,\n    private serviceHistoryService: ServiceHistoryService,\n    private datePipe: DatePipe,\n    private route: ActivatedRoute,\n    private bsModalService: BsModalService,\n    private fb: FormBuilder\n  ) {\n    this.environment = environment;\n    this.imgRoute = environment.imagesRoute;\n    this.country = environment.country;\n    this.translate = translate;\n    this.specialtySelected = '';\n    translate.setDefaultLang(environment.country);\n    this.isColombia = environment.country === 'co';\n\n    this.form = this.fb.group({\n      from: [{ value: '', }],\n      until: [{ value: '', }],\n      status: [{ value: '' }],\n    })\n  }\n\n  ngOnInit() {\n    this.dataEmpty = false;\n    //$(window).scrollTop(0); TODO\n\n    this.serviceHistory.ServicesTypeId = '';\n    this.serviceHistory.CityId = '';\n    this.serviceHistory.SpecialtyId = '';\n    this.serviceHistory.DoctorId = '';\n    this.serviceHistory.StartDate = '';\n    this.serviceHistory.EndDate = '';\n    this.serviceHistory.DocumentType = localStorage.getItem('documentType');\n    this.serviceHistory.Document = localStorage.getItem('document');\n    this.email = localStorage.getItem('userName');\n\n    //Datos del paciente logueado\n    let lastNameOne = localStorage.getItem('LastNameOne');\n    let lastNameTwo = localStorage.getItem('LastNameTwo');\n    let nameOne = localStorage.getItem('NameOne');\n    let nameTwo = localStorage.getItem('NameTwo');\n    this.userLogin.nameUser =\n      nameOne + ' ' + nameTwo + ' ' + lastNameOne + ' ' + lastNameTwo;\n    this.getServicesHistory();\n    this.getServicesHistoryLists();\n    this.getPatiens();\n  }\n\n  ngAfterViewInit() {\n    let chatData = this.route.snapshot.data;\n    // let scriptChatLoaded = localStorage.getItem(\"scriptChatLoaded\");\n    // if(scriptChatLoaded === \"true\"){\n    /* TODO\n    if (zopimComponent) {\n      zopimComponent.settings(null, chatData['chatVisible'], chatData['chatWidget'], chatData['chatDepartment'], '', '');\n    }*/\n  }\n\n  setDateFrom(val) {\n    this.form.controls.from.setValue(val);\n    const valueFrom = (<HTMLInputElement>document.getElementById(\"dateFrom\")).value;\n  }\n\n  setDateUntil(val) {\n    this.form.controls.until.setValue(val);\n    const valueUntil = (<HTMLInputElement>document.getElementById(\"dateUntil\")).value;\n  }\n\n  obtainDate(d: any) {\n    const date = new Date(d);\n    if (date && (d.value != '')) {\n      return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    }\n    return \"--/--/----\";\n  }\n\n  getServicesHistory() {\n    this.isLoading = true;\n    this.serviceHistory.SpecialtyId = '';\n    if (\n      this.specialtySelected &&\n      this.specialtySelected != '' &&\n      this.specialtySelected != 'Seleccione'\n    )\n      this.serviceHistory.SpecialtyId = this.specialtySelected;\n      this.serviceHistoryService\n      .getServicesHistory(this.serviceHistory)\n      .subscribe(\n        (result: any) => {\n          if (result.StatusCode === 0) {\n            this.servicesHistory = [];\n            this.servicesHistory = result.ServiceHistory;\n            if (this.servicesHistory.length > 0) {\n              if (\n                !this.specialtySelected ||\n                this.specialtySelected === '' ||\n                this.specialtySelected === 'Seleccione'\n              )\n                this.setSpecialty(this.servicesHistory);\n                this.showPagination = true;\n                this.hiddenResult = true;\n            } else {\n              this.showPagination = false;\n              this.hiddenResult = false;\n            }\n          } else {\n            this.dataEmpty = true;\n            this.bsModalRef = this.generateInformativeModal(\n              result.Title,\n              result.Message,\n              true,\n              false\n            );\n          }\n          this.isLoading = false;\n        },\n        (error) => this.ErrorRegister(error)\n      );\n  }\n\n  setSpecialty(servicesHistory: any) {\n    this.specialty = [];\n    let repeat: boolean;\n    servicesHistory.forEach((element: any) => {\n      repeat = false;\n      if (this.specialty.length == 0 && element.SpecialityName != '')\n        this.specialty.push(element.SpecialityName);\n      else {\n        this.specialty.forEach((elementSpecialty: any) => {\n          if (element.SpecialityName == elementSpecialty) repeat = true;\n        });\n        if (!repeat && element.SpecialityName != '')\n          this.specialty.push(element.SpecialityName);\n      }\n    });\n    this.specialty.unshift('Seleccione');\n  }\n\n  // Extrayendo servicios y datos del paciente, en los otros inputs\n  getServicesHistoryLists() {\n    this.isLoading = true;\n    this.serviceHistoryService\n      .getServicesHistoryLists(this.serviceHistory)\n      .subscribe(\n        (result: any) => {\n          if (result.StatusCode === 0) {\n            this.doctors = result.ServicesHistoryLists.Doctors;\n            this.specialities = result.ServicesHistoryLists.Specialities;\n            this.servicesType = result.ServicesHistoryLists.ServicesType;\n            this.cities = result.ServicesHistoryLists.Cities;\n          } else {\n            this.bsModalRef = this.generateInformativeModal(\n              result.Title,\n              result.Message,\n              true,\n              false\n            );\n          }\n          this.isLoading = false;\n        },\n        (error) => this.ErrorRegister(error)\n      );\n  }\n\n  // AAE: obteniendo menores autorizados para un usurio\n  getPatiens() {\n    this.isLoading = true;\n    this.serviceHistoryService.getPatiens(this.serviceHistory).subscribe(\n      (result: any) => {\n        if (result.StatusCode === 0) {\n          // Filtrando los menores: los menores que se mostrarán son los que tienen un estado = 1, es decir los autorizados\n          let filteredMinorAuthorizations = result.AuthorizedMinors.filter(\n            function (filtered: any) {\n              return filtered.ESTADO != '0';\n            }\n          );\n          this.minorAuthorizations = filteredMinorAuthorizations;\n          this.addUserAcountLikePatient();\n          this.colsMd = ServiceHistoryPage.colsMd4;\n          // Si no tiene menores esconde el combo dropdown que los lista.\n          if (this.minorAuthorizations == '') {\n            this.inputMinorAuthorizedShow = false;\n          } else {\n            this.inputMinorAuthorizedShow = true;\n          }\n        } else {\n          this.bsModalRef = this.generateInformativeModal(\n            'Error al traer menores autorizados',\n            'En estos momentos, no se pueden obtener los menores con autorización aprobada, intentelo más tarde o contacte con soporte',\n            true,\n            false\n          );\n        }\n        this.isLoading = false;\n      },\n      (error) => this.ErrorRegister(error)\n    );\n  }\n\n  addUserAcountLikePatient() {\n    let lastNameOne = localStorage.getItem('LastNameOne');\n    let lastNameTwo = localStorage.getItem('LastNameTwo');\n    let nameOne = localStorage.getItem('NameOne');\n    let nameTwo = localStorage.getItem('NameTwo');\n\n    let userAcount = {\n      DOCUMENTO: this.serviceHistory.Document,\n      TIPODOC: this.serviceHistory.DocumentType,\n      NOMBRE_1: nameOne,\n      NOMBRE_2: nameTwo,\n      APELLIDO_1: lastNameOne,\n      APELLIDO_2: lastNameTwo,\n    };\n    this.minorAuthorizations.unshift(userAcount);\n  }\n\n  // AAE: Se le envian los parametros del (change) en el html y al selecciona una opción, envia eso al actualizar el input\n  changeDropDown(event: any) {\n    const value = event.target.value;\n    // El documento enviado como parámetro se decie según selección de usuario, por defecto el de usuario logueado o menor.\n    this.serviceHistory.Document = value;\n    // extrayendo tipo documento, si el documento del objeto es igual al seleccionado\n    this.serviceHistory.DocumentType = this.minorAuthorizations.filter(\n      (n: any) => n.DOCUMENTO == value\n    )[0].TIPODOC;\n\n    // Refrescando datos selectos al escojer un paciente.\n    this.serviceHistory.ServicesTypeId = '';\n    this.serviceHistory.CityId = '';\n    this.serviceHistory.SpecialtyId = '';\n    this.serviceHistory.DoctorId = '';\n    this.tmpStartDate = '';\n    this.tmpEndDate = '';\n    // Recargando datos del paciente en los otros inputs\n    this.getServicesHistoryLists();\n    this.detectMinor = true;\n\n    if (this.serviceHistory.Document === '') {\n      this.serviceHistory.DocumentType = localStorage.getItem('documentType');\n      this.serviceHistory.Document = localStorage.getItem('document');\n      this.detectMinor = false;\n      // Recargando datos del paciente en los otros inputs\n      this.getServicesHistoryLists();\n    }\n  }\n\n  onChangeServicesTypes(serviceTypeId: string) {\n    if (serviceTypeId != null && serviceTypeId != '') {\n      if (this.specialities.length > 0) {\n        this.specialitiesFilter = this.specialities.filter(\n          (obj: any) => obj.Category === serviceTypeId\n        );\n      } else {\n        this.specialities = [];\n      }\n    }\n  }\n\n  onChangePatienteId(serviceTypeId: string) {\n    if (serviceTypeId != null && serviceTypeId != '') {\n      if (this.specialities.length > 0) {\n        this.specialitiesFilter = this.specialities.filter(\n          (obj: any) => obj.Category === serviceTypeId\n        );\n      } else {\n        this.specialities = [];\n      }\n    }\n  }\n\n  search() {\n    let tmpStartDateNew: any;\n    let tmpEndDateNew: any;\n    if (this.tmpStartDate != '' && this.tmpStartDate != null) {\n      this.serviceHistory.StartDate = this.datePipe.transform(\n        this.tmpStartDate,\n        'yyyyMMdd'\n      );\n    } else {\n      this.serviceHistory.StartDate = '';\n    }\n    if (this.tmpEndDate != '' && this.tmpEndDate != null) {\n      this.serviceHistory.EndDate = this.datePipe.transform(\n        this.tmpEndDate,\n        'yyyyMMdd'\n      );\n    } else {\n      this.serviceHistory.EndDate = '';\n    }\n\n    if (\n      this.serviceHistory.StartDate != '' &&\n      this.serviceHistory.EndDate != ''\n    ) {\n      if (tmpEndDateNew < tmpStartDateNew) {\n        this.bsModalRef = this.generateInformativeModal(\n          'Validación de información',\n          'La fecha final debe ser mayor a la inicial.',\n          true,\n          false\n        );\n        return;\n      }\n    }\n    this.getServicesHistory();\n  }\n\n  openServiceHistoryPrescription(object: any) {\n    this.openFileLinkByDocumentCode(\n      object.FileCode,\n      ServiceHistoryType.Prescription\n    );\n  }\n\n  openServiceHistoryInability(object: any) {\n    this.openFileLinkByDocumentCode(\n      object.FileCode,\n      ServiceHistoryType.Inability\n    );\n  }\n\n  openFileLinkByDocumentCode(\n    code: string,\n    serviceHistoryType: ServiceHistoryType\n  ) {\n    let serviceHistoryRequest = new ServiceHistoryRequest();\n    serviceHistoryRequest.Code = code;\n    switch (serviceHistoryType) {\n      case ServiceHistoryType.Prescription:\n        this.serviceHistoryService\n          .GetServicesHistoryPrescriptions(serviceHistoryRequest)\n          .subscribe((resp: any) => {\n            if (resp.ServiceHistoryPrescription.length == 1) {\n              try {\n                window.open(resp.ServiceHistoryPrescription[0].Link);\n              } catch (e) {\n                this.bsModalRef = this.generateInformativeModal(\n                  'Atención',\n                  'No se puede abrir el archivo seleccionado.',\n                  true,\n                  false\n                );\n              }\n            } else if (resp.ServiceHistoryPrescription.length > 1) {\n              let listFileModel: any[] = [];\n              let index = 1;\n\n              resp.ServiceHistoryPrescription.forEach((element: any) => {\n                let fileModel = new ListFileModel();\n                fileModel.Link = element.Link;\n                fileModel.NameFile = 'Formula_Medica_' + index;\n                index++;\n                listFileModel.push(fileModel);\n              });\n              this.bsModalRef = this.generateModalFile(listFileModel);\n              /* TODO create new modal\n            this.dialogService.addDialog(ModalListFilesComponent, {\n              listFiles: listFileModel\n            }); */\n            } else {\n              this.bsModalRef = this.generateInformativeModal(\n                'Atención',\n                resp.Message,\n                true,\n                false\n              );\n            }\n          });\n        break;\n      case ServiceHistoryType.Inability:\n        this.serviceHistoryService\n          .GetServicesHistoryInability(serviceHistoryRequest)\n          .subscribe((resp: any) => {\n            if (resp.ServiceHistoryPrescription.length == 1) {\n              try {\n                window.open(resp.ServiceHistoryPrescription[0].Link);\n              } catch (e) {\n                this.bsModalRef = this.generateInformativeModal(\n                  'Atención',\n                  'No se puede abrir el archivo seleccionado.',\n                  true,\n                  false\n                );\n              }\n            } else if (resp.ServiceHistoryPrescription.length > 1) {\n              let listFileModel: any[] = [];\n              let index = 1;\n\n              resp.ServiceHistoryPrescription.forEach((element: any) => {\n                let fileModel = new ListFileModel();\n                fileModel.Link = element.Link;\n                fileModel.NameFile = 'Certificado_Incapacidad_' + index;\n                index++;\n                listFileModel.push(fileModel);\n              });\n              /*\n            this.dialogService.addDialog(ModalListFilesComponent, {\n              listFiles: listFileModel\n            });*/\n            } else {\n              this.bsModalRef = this.generateInformativeModal(\n                'Atención',\n                resp.Message,\n                true,\n                false\n              );\n            }\n          });\n        break;\n    }\n  }\n\n  getServiceFile(obj: any) {\n    this.isLoading = true;\n    this.serviceHistoryService\n      .getServiceFile(this.email, obj.FileCode)\n      .subscribe(\n        (result: any) => {\n          if (result.StatusCode === 0) {\n            let pdfCode = result.Value;\n            fetch('data:application/pdf;base64,' + pdfCode)\n              .then(function (resp) {\n                return resp.blob();\n              })\n              .then(function (blob) {\n                let name = 'RegistroClínico';\n                saveAs(blob, name);\n              });\n          } else {\n            this.bsModalRef = this.generateInformativeModal(\n              result.Title,\n              result.Message,\n              true,\n              false\n            );\n          }\n          this.isLoading = false;\n        },\n        (error) => this.ErrorRegister(error)\n      );\n  }\n\n  pageChanged(event: any) {\n    this.p = event;\n    //Mover scroll\n    //$(window).scrollTop(0);\n  }\n\n  private ErrorRegister(error: any) {\n    this.isLoading = false;\n    this.bsModalRef = this.generateInformativeModal(\n      'Inconvenientes con el portal',\n      'En este momento no podemos procesar tu solicitud. Por favor inténtalo mas tarde.',\n      true,\n      false\n    );\n  }\n\n  generateModalFile(listFileModel: ListFileModel[]) {\n    return this.bsModalService.show(FileListModalPage, {\n      initialState: {\n        listFiles: listFileModel,\n      },\n      class: 'modal-lg',\n    });\n  }\n\n  generateInformativeModal(\n    subTitle: string,\n    description: string,\n    isError: boolean,\n    twoButtons: boolean\n  ) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: isError ? 'alert-circle.svg' : 'alert-check.svg',\n        subTitle: subTitle,\n        description: description,\n        onlyButtonConfirm: !twoButtons,\n        textButton: 'Aceptar',\n        textButton1: 'Cancelar',\n        textButton2: 'Aceptar',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true,\n    };\n    return this.bsModalService.show(InformativeModalComponent, initialState);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { environment } from 'src/environments/environment';\nimport { ServiceHistory } from '../models/serviceHistory';\nimport { ServiceHistoryRequest } from '../models/serviceHistoryRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceHistoryService {\n  constructor(private http: HttpClient,\n  ) {\n  }\n\n  getServicesHistoryLists(serviceHistory: ServiceHistory) {\n    let url = environment.API_URL + 'Services/GetServicesHistoryLists';\n    let params = {\n      DocumentType: serviceHistory.DocumentType,\n      Document: serviceHistory.Document\n    }\n    return this.http.post(url, params)\n  }\n\n  getServicesHistory(serviceHistory: ServiceHistory) {\n    let url = environment.API_URL + 'Services/GetServicesHistory';\n    let params = {\n      // AAE: Envía documento dependiendo usuarios seleccionados, menores o logueado\n      DocumentType: serviceHistory.DocumentType,\n      Document: serviceHistory.Document,\n      ServiceType: serviceHistory.ServicesTypeId,\n      Speciality: serviceHistory.SpecialtyId,\n      Doctor: serviceHistory.DoctorId,\n      City: serviceHistory.CityId,\n      InitDate: serviceHistory.StartDate,\n      EndDate: serviceHistory.EndDate\n    }\n    return this.http.post(url, params)\n  }\n\n  async sendServiceFile(user: string, code: string) {\n    let url = environment.API_URL + 'Services/SendServiceFile';\n    let params = {\n      User: user,\n      Code: code\n    }\n    return this.http.post(url, params)\n  }\n\n  async sendServiceFileByEmail(email: string, user: string, code: string) {\n    let url = environment.API_URL + 'Services/SendServiceFileByEmail';\n    let params = {\n      Email: email,\n      User: user,\n      Code: code\n    }\n    return this.http.post(url, params)\n  }\n\n  getServiceFile(user: string | null, code: string) {\n    let url = environment.API_URL + 'Services/GetServiceFile';\n    let params = {\n      User: user,\n      Code: code\n    }\n    return this.http.post(url, params)\n  }\n\n  getPatiens(serviceHistory: ServiceHistory) {\n    let url = environment.API_URL + 'Family/GetMinorAuthorizations';\n    let params = {\n      // Este es el real\n      DocumentType: serviceHistory.DocumentType,\n      Document: serviceHistory.Document\n      // Temporales para probar Test\n      // DocumentType : \"1\",\n      // Document : \"38944826\"\n    }\n    return this.http.post(url, params)\n  }\n\n  getPatients(userLogin: UserLogin) {\n    let url = environment.API_URL + 'Affiliate/GetPersons';\n    let params = {\n      IdReference: userLogin.idReference,\n      DocumentType: userLogin.documentType,\n      Document: userLogin.document,\n    }\n    return this.http.post(url, params)\n  }\n\n  GetServicesHistoryPrescriptions(request: ServiceHistoryRequest) {\n    // let params = new HttpParams();\n    // params = params.set('Code', request.Code);\n    return this.http.post(`${environment.API_URL}Services/GetServicesHistoryPrescriptions`, request)\n  }\n\n  GetServicesHistoryInability(request: ServiceHistoryRequest) {\n    return this.http\n      .post(`${environment.API_URL}Services/GetServicesHistoryInability`, request)\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { environment } from 'src/environments/environment';\n\nexport class ListFileModel {\n  NameFile: string;\n  Link: string;\n}\nexport interface FileListModel {\n  listFiles: ListFileModel[];\n}\n\n@Component({\n  selector: 'app-file-list-modal',\n  templateUrl: './file-list-modal.page.html',\n  styleUrls: ['./file-list-modal.page.scss']\n})\n\nexport class FileListModalPage {\n\n  listFiles: ListFileModel[];\n  imgRoute: string\n  environment: any;\n  onClose = new Subject<boolean>();\n\n  constructor(\n      private router: Router, \n      private modalService: BsModalService, \n      private bsModalRef: BsModalRef\n      ) {\n        this.environment = environment;\n        this.imgRoute = environment.imagesRoute;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n  openFile(listFileModel: ListFileModel) {\n    try {\n      window.open(listFileModel.Link);\n    }\n    catch (e) {\n      this.onClose.next(true);\n    }\n  }\n\n}\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Pipe, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass PaginationService {\r\n    constructor() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    defaultId() { return this.DEFAULT_ID; }\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    register(instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    }\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    updateInstance(instance) {\r\n        let changed = false;\r\n        for (let prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    getCurrentPage(id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n        return 1;\r\n    }\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    setCurrentPage(id, page) {\r\n        if (this.instances[id]) {\r\n            let instance = this.instances[id];\r\n            let maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    setTotalItems(id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    setItemsPerPage(id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    getInstance(id = this.DEFAULT_ID) {\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    }\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    clone(obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\n\nconst LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nclass PaginatePipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    transform(collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            let _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        let serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        let instance = this.createInstance(collection, args);\r\n        let id = instance.id;\r\n        let start, end;\r\n        let perPage = instance.itemsPerPage;\r\n        let emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            let isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                let slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    }\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    createInstance(collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    }\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    checkConfig(config) {\r\n        const required = ['itemsPerPage', 'currentPage'];\r\n        const missing = required.filter(prop => !(prop in config));\r\n        if (0 < missing.length) {\r\n            throw new Error(`PaginatePipe: Argument is missing the following required properties: ${missing.join(', ')}`);\r\n        }\r\n    }\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    saveState(id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection,\r\n            size: collection.length,\r\n            slice,\r\n            start,\r\n            end\r\n        };\r\n    }\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    stateIsIdentical(id, collection, start, end) {\r\n        let state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        let isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every((element, index) => element === collection[start + index]);\r\n    }\r\n}\r\nPaginatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, deps: [{ token: PaginationService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nPaginatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, name: \"paginate\", pure: false });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }]; } });\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nconst DEFAULT_TEMPLATE = `\r\n    <pagination-template  #p=\"paginationApi\"\r\n                         [id]=\"id\"\r\n                         [maxSize]=\"maxSize\"\r\n                         (pageChange)=\"pageChange.emit($event)\"\r\n                         (pageBoundsCorrection)=\"pageBoundsCorrection.emit($event)\">\r\n    <nav role=\"navigation\" [attr.aria-label]=\"screenReaderPaginationLabel\">\r\n    <ul class=\"ngx-pagination\" \r\n        [class.responsive]=\"responsive\"\r\n        *ngIf=\"!(autoHide && p.pages.length <= 1)\">\r\n\r\n        <li class=\"pagination-previous\" [class.disabled]=\"p.isFirstPage()\" *ngIf=\"directionLinks\"> \r\n            <a tabindex=\"0\" *ngIf=\"1 < p.getCurrent()\" (keyup.enter)=\"p.previous()\" (click)=\"p.previous()\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isFirstPage()\" aria-disabled=\"true\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li> \r\n\r\n        <li class=\"small-screen\">\r\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\r\n        </li>\r\n\r\n        <li [class.current]=\"p.getCurrent() === page.value\" \r\n            [class.ellipsis]=\"page.label === '...'\"\r\n            *ngFor=\"let page of p.pages; trackBy: trackByIndex\">\r\n            <a tabindex=\"0\" (keyup.enter)=\"p.setCurrent(page.value)\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\r\n                <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\r\n            </a>\r\n            <ng-container *ngIf=\"p.getCurrent() === page.value\">\r\n              <span aria-live=\"polite\">\r\n                <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \r\n              </span>\r\n            </ng-container>\r\n        </li>\r\n\r\n        <li class=\"pagination-next\" [class.disabled]=\"p.isLastPage()\" *ngIf=\"directionLinks\">\r\n            <a tabindex=\"0\" *ngIf=\"!p.isLastPage()\" (keyup.enter)=\"p.next()\" (click)=\"p.next()\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isLastPage()\" aria-disabled=\"true\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li>\r\n\r\n    </ul>\r\n    </nav>\r\n    </pagination-template>\r\n    `;\r\nconst DEFAULT_STYLES = `\r\n.ngx-pagination {\r\n  margin-left: 0;\r\n  margin-bottom: 1rem; }\r\n  .ngx-pagination::before, .ngx-pagination::after {\r\n    content: ' ';\r\n    display: table; }\r\n  .ngx-pagination::after {\r\n    clear: both; }\r\n  .ngx-pagination li {\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    margin-right: 0.0625rem;\r\n    border-radius: 0; }\r\n  .ngx-pagination li {\r\n    display: inline-block; }\r\n  .ngx-pagination a,\r\n  .ngx-pagination button {\r\n    color: #0a0a0a; \r\n    display: block;\r\n    padding: 0.1875rem 0.625rem;\r\n    border-radius: 0; }\r\n    .ngx-pagination a:hover,\r\n    .ngx-pagination button:hover {\r\n      background: #e6e6e6; }\r\n  .ngx-pagination .current {\r\n    padding: 0.1875rem 0.625rem;\r\n    background: #2199e8;\r\n    color: #fefefe;\r\n    cursor: default; }\r\n  .ngx-pagination .disabled {\r\n    padding: 0.1875rem 0.625rem;\r\n    color: #cacaca;\r\n    cursor: default; } \r\n    .ngx-pagination .disabled:hover {\r\n      background: transparent; }\r\n  .ngx-pagination a, .ngx-pagination button {\r\n    cursor: pointer; }\r\n\r\n.ngx-pagination .pagination-previous a::before,\r\n.ngx-pagination .pagination-previous.disabled::before { \r\n  content: '«';\r\n  display: inline-block;\r\n  margin-right: 0.5rem; }\r\n\r\n.ngx-pagination .pagination-next a::after,\r\n.ngx-pagination .pagination-next.disabled::after {\r\n  content: '»';\r\n  display: inline-block;\r\n  margin-left: 0.5rem; }\r\n\r\n.ngx-pagination .show-for-sr {\r\n  position: absolute !important;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0); }\r\n.ngx-pagination .small-screen {\r\n  display: none; }\r\n@media screen and (max-width: 601px) {\r\n  .ngx-pagination.responsive .small-screen {\r\n    display: inline-block; } \r\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\r\n    display: none; }\r\n}\r\n  `;\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nclass PaginationControlsDirective {\r\n    constructor(service, changeDetectorRef) {\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(id => {\r\n            if (this.id === id) {\r\n                this.updatePageLinks();\r\n                this.changeDetectorRef.markForCheck();\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnDestroy() {\r\n        this.changeSub.unsubscribe();\r\n    }\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    previous() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    }\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    next() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    }\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    isFirstPage() {\r\n        return this.getCurrent() === 1;\r\n    }\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    isLastPage() {\r\n        return this.getLastPage() === this.getCurrent();\r\n    }\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    setCurrent(page) {\r\n        this.pageChange.emit(page);\r\n    }\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    getCurrent() {\r\n        return this.service.getCurrentPage(this.id);\r\n    }\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    getLastPage() {\r\n        let inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    }\r\n    getTotalItems() {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    }\r\n    checkValidId() {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(`PaginationControlsDirective: the specified id \"${this.id}\" does not match any registered PaginationInstance`);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    updatePageLinks() {\r\n        let inst = this.service.getInstance(this.id);\r\n        const correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(() => {\r\n                this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    }\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    outOfBoundCorrection(instance) {\r\n        const totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    }\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    createPageArray(currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        let pages = [];\r\n        // Return 1 as default page number\r\n        // Make sense to show 1 instead of empty when there are no items\r\n        const totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\r\n        const halfWay = Math.ceil(paginationRange / 2);\r\n        const isStart = currentPage <= halfWay;\r\n        const isEnd = totalPages - halfWay < currentPage;\r\n        const isMiddle = !isStart && !isEnd;\r\n        let ellipsesNeeded = paginationRange < totalPages;\r\n        let i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            let label;\r\n            let pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            let openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            let closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    }\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    calculatePageNumber(i, currentPage, paginationRange, totalPages) {\r\n        let halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    }\r\n}\r\nPaginationControlsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, deps: [{ token: PaginationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nPaginationControlsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: { id: \"id\", maxSize: \"maxSize\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, exportAs: [\"paginationApi\"], usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nclass PaginationControlsComponent {\r\n    constructor() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = `You're on page`;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    get directionLinks() {\r\n        return this._directionLinks;\r\n    }\r\n    set directionLinks(value) {\r\n        this._directionLinks = coerceToBoolean(value);\r\n    }\r\n    get autoHide() {\r\n        return this._autoHide;\r\n    }\r\n    set autoHide(value) {\r\n        this._autoHide = coerceToBoolean(value);\r\n    }\r\n    get responsive() {\r\n        return this._responsive;\r\n    }\r\n    set responsive(value) {\r\n        this._responsive = coerceToBoolean(value);\r\n    }\r\n    trackByIndex(index) {\r\n        return index;\r\n    }\r\n}\r\nPaginationControlsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nPaginationControlsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsComponent, selector: \"pagination-controls\", inputs: { id: \"id\", maxSize: \"maxSize\", directionLinks: \"directionLinks\", autoHide: \"autoHide\", responsive: \"responsive\", previousLabel: \"previousLabel\", nextLabel: \"nextLabel\", screenReaderPaginationLabel: \"screenReaderPaginationLabel\", screenReaderPageLabel: \"screenReaderPageLabel\", screenReaderCurrentLabel: \"screenReaderCurrentLabel\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, ngImport: i0, template: \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <nav role=\\\"navigation\\\" [attr.aria-label]=\\\"screenReaderPaginationLabel\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\" aria-disabled=\\\"true\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n              <span aria-live=\\\"polite\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n              </span>\\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\" aria-disabled=\\\"true\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </nav>\\n    </pagination-template>\\n    \", isInline: true, styles: [\".ngx-pagination{margin-left:0;margin-bottom:1rem}.ngx-pagination:before,.ngx-pagination:after{content:\\\" \\\";display:table}.ngx-pagination:after{clear:both}.ngx-pagination li{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;margin-right:.0625rem;border-radius:0}.ngx-pagination li{display:inline-block}.ngx-pagination a,.ngx-pagination button{color:#0a0a0a;display:block;padding:.1875rem .625rem;border-radius:0}.ngx-pagination a:hover,.ngx-pagination button:hover{background:#e6e6e6}.ngx-pagination .current{padding:.1875rem .625rem;background:#2199e8;color:#fefefe;cursor:default}.ngx-pagination .disabled{padding:.1875rem .625rem;color:#cacaca;cursor:default}.ngx-pagination .disabled:hover{background:transparent}.ngx-pagination a,.ngx-pagination button{cursor:pointer}.ngx-pagination .pagination-previous a:before,.ngx-pagination .pagination-previous.disabled:before{content:\\\"\\\\ab\\\";display:inline-block;margin-right:.5rem}.ngx-pagination .pagination-next a:after,.ngx-pagination .pagination-next.disabled:after{content:\\\"\\\\bb\\\";display:inline-block;margin-left:.5rem}.ngx-pagination .show-for-sr{position:absolute!important;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0)}.ngx-pagination .small-screen{display:none}@media screen and (max-width: 601px){.ngx-pagination.responsive .small-screen{display:inline-block}.ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next){display:none}}\\n\"], directives: [{ type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: [\"id\", \"maxSize\"], outputs: [\"pageChange\", \"pageBoundsCorrection\"], exportAs: [\"paginationApi\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"number\": i2.DecimalPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                }]\r\n        }], propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], directionLinks: [{\r\n                type: Input\r\n            }], autoHide: [{\r\n                type: Input\r\n            }], responsive: [{\r\n                type: Input\r\n            }], previousLabel: [{\r\n                type: Input\r\n            }], nextLabel: [{\r\n                type: Input\r\n            }], screenReaderPaginationLabel: [{\r\n                type: Input\r\n            }], screenReaderPageLabel: [{\r\n                type: Input\r\n            }], screenReaderCurrentLabel: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nclass NgxPaginationModule {\r\n}\r\nNgxPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, declarations: [PaginatePipe,\r\n        PaginationControlsComponent,\r\n        PaginationControlsDirective], imports: [CommonModule], exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective] });\r\nNgxPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, providers: [PaginationService], imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-pagination\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxPaginationModule, PaginatePipe, PaginationControlsComponent, PaginationControlsDirective, PaginationService };\n"],"names":["i0","EventEmitter","Pipe","Directive","Input","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","i2","CommonModule","PaginationService","constructor","change","instances","DEFAULT_ID","defaultId","register","instance","id","updateInstance","changed","prop","getCurrentPage","currentPage","setCurrentPage","page","maxPage","Math","ceil","totalItems","itemsPerPage","emit","setTotalItems","setItemsPerPage","getInstance","clone","obj","target","i","hasOwnProperty","LARGE_NUMBER","Number","MAX_SAFE_INTEGER","PaginatePipe","service","state","transform","collection","args","Array","_id","slice","serverSideMode","length","createInstance","start","end","perPage","emitChange","isIdentical","stateIsIdentical","saveState","config","checkConfig","required","missing","filter","Error","join","size","isMetaDataIdentical","every","element","index","ɵfac","ɵpipe","type","name","pure","DEFAULT_TEMPLATE","DEFAULT_STYLES","PaginationControlsDirective","changeDetectorRef","maxSize","pageChange","pageBoundsCorrection","pages","changeSub","subscribe","updatePageLinks","markForCheck","detectChanges","ngOnInit","undefined","ngOnChanges","changes","ngOnDestroy","unsubscribe","previous","checkValidId","setCurrent","getCurrent","next","isFirstPage","isLastPage","getLastPage","inst","getTotalItems","console","warn","correctedCurrentPage","outOfBoundCorrection","setTimeout","createPageArray","totalPages","paginationRange","max","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","label","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","push","value","ChangeDetectorRef","ɵdir","selector","exportAs","coerceToBoolean","input","PaginationControlsComponent","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","_directionLinks","_autoHide","_responsive","directionLinks","autoHide","responsive","trackByIndex","ɵcmp","NgIf","NgForOf","DecimalPipe","template","styles","changeDetection","OnPush","encapsulation","None","NgxPaginationModule","ɵmod","ɵinj","imports","declarations","providers","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[10]}