{"version":3,"file":"src_app_portal_moduls_expired-medical-services_expired-medical-services_module_ts.js","mappings":"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","sources":["./src/app/portal/moduls/expired-medical-services/configs/filterRestoreButtonConfig.ts","./src/app/portal/moduls/expired-medical-services/expired-medical-services-routing.module.ts","./src/app/portal/moduls/expired-medical-services/expired-medical-services.module.ts","./src/app/portal/moduls/expired-medical-services/expired-medical-services.page.ts","./src/app/portal/moduls/expired-medical-services/services/expired-medical-services.service.ts"],"sourcesContent":["import { ButtonType } from \"src/app/shared/enums/enumerations\";\nimport { ButtonConfiguration } from \"src/app/shared/models/button-configuration\";\n\nconst restoreButtonConfig = new ButtonConfiguration();\n\nrestoreButtonConfig.buttonType = ButtonType.Primary;\nrestoreButtonConfig.text = 'Restaurar filtros';\nrestoreButtonConfig.width = \"180px\";\n\nexport const restoreButtonConfigExport = restoreButtonConfig;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HaveBeLoggedInGuard } from 'src/app/core/guard/have-be-logged-in.guard';\nimport { ExpiredMedicalServicesPage } from './expired-medical-services.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [HaveBeLoggedInGuard],\n    component: ExpiredMedicalServicesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpiredMedicalServicesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ExpiredMedicalServicesPageRoutingModule } from './expired-medical-services-routing.module';\nimport { ExpiredMedicalServicesPage } from './expired-medical-services.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ExpiredMedicalServicesPageRoutingModule\n  ],\n  declarations: [ExpiredMedicalServicesPage]\n})\nexport class ExpiredMedicalServicesPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { environment } from 'src/environments/environment';\nimport { restoreButtonConfigExport } from './configs/filterRestoreButtonConfig';\nimport { ExpiredMedicalServicesService } from './services/expired-medical-services.service';\n\n@Component({\n  selector: 'app-expired-medical-services',\n  templateUrl: './expired-medical-services.page.html',\n  styleUrls: ['./expired-medical-services.page.scss'],\n})\nexport class ExpiredMedicalServicesPage implements OnInit {\n\n  translate: TranslateService;\n  patient: string;\n  status: string;\n  affiliateType: string | null;\n  userLogin = new UserLogin();\n  toShowFilterPatient: boolean = true;\n  p: number = 1;\n  hiddenResult: boolean = true;\n  disabledStateFilter: boolean = true;\n  showPagination: boolean = false;\n  expiredProducts: any;\n  expiredProductsFilter: any;\n  resultBeneficiaries: any;\n  isLoading: boolean = false;\n  restoreButtonConfig = restoreButtonConfigExport;\n  bsModalRef: BsModalRef;\n  searchForm: FormGroup;\n  imgRoute: string;\n\n  constructor(\n    private expiredMedicalServicesService: ExpiredMedicalServicesService,\n    private router: Router,\n    translate: TranslateService,\n    private bsModalService: BsModalService\n  ) {\n    this.translate = translate;\n    translate.setDefaultLang(environment.country);\n    this.affiliateType = localStorage.getItem(\"affiliateType\");\n    this.userLogin.documentType = localStorage.getItem(\"documentType\");\n    this.userLogin.document = localStorage.getItem(\"document\");\n\n    this.imgRoute = environment.imagesRoute;\n  }\n\n  ngOnInit() {\n    this.resetForm();\n    this.validateAffiliateType();\n  }\n\n  resetForm() {\n    this.patient = '';\n    this.status = '';\n    this.hiddenResult = true;\n    this.disabledStateFilter = true;\n  }\n\n  pageChanged(event: any) {\n    this.p = event;\n    //$(window).scrollTop(0);\n  }\n\n  validateAffiliateType() {\n    //AfiliateTypes: 1: Responsable de pago, 2: Beneficiario\n    if (this.affiliateType == '1') {\n      this.toShowFilterPatient = true;\n      this.getBeneficiaries();\n    } else if (this.affiliateType == '2') {\n      this.toShowFilterPatient = false;\n      this.getExpiredProducts(this.userLogin.documentType, this.userLogin.document);\n    }\n  }\n\n  getBeneficiaries() {\n    this.isLoading = true;\n    this.expiredMedicalServicesService\n      .getBeneficiaries(this.userLogin)\n      .subscribe(\n        (result: any) => {\n          this.isLoading = false;\n          if (result.Beneficiaries.length > 0) {\n            this.resultBeneficiaries = result.Beneficiaries;\n          } else {\n            this.bsModalRef = this.generateInformativeModal('Beneficiarios', 'No se encontraron beneficiarios', true, true);\n            this.bsModalRef.content.onClose.subscribe((result: boolean) => {\n              this.router.navigate(['/portal/home'], { replaceUrl: true })\n            })\n          }\n        },\n        (error: any) => this.ErrorRegister(error));\n  }\n\n  filterBy(type: any, eventFull: any) {\n    const event = eventFull.target.value;\n    if (event) {\n      if (type == 'patient') {\n        this.status = '';\n        let beneficiary = this.resultBeneficiaries.filter((result: any) => result.Document == event)[0];\n        this.getExpiredProducts(beneficiary.DocumentType, beneficiary.Document);\n      } else {\n        this.expiredProductsFilter = this.expiredProducts.filter((product: any) => product.Status == event);\n      }\n    }\n  }\n\n  getExpiredProducts(DocumentType: any, Document: any) {\n    this.isLoading = true;\n    this.expiredMedicalServicesService\n      .getExpiredProducts(DocumentType, Document)\n      .subscribe(\n        (result: any) => {\n          this.isLoading = false;\n          if (result.StatusCode === 0) {\n            if (result.ExpiredProducts.Products) {\n              this.expiredProducts = result.ExpiredProducts.Products;\n              this.expiredProductsFilter = this.expiredProducts;\n              this.showPagination = true;\n              this.hiddenResult = true;\n              this.disabledStateFilter = false;\n            } else {\n              this.expiredProducts = [];\n              this.expiredProductsFilter = [];\n              this.showPagination = false;\n              this.hiddenResult = false;\n              this.disabledStateFilter = true;\n            }\n          } else {\n            this.showPagination = false;\n            this.bsModalRef = this.generateInformativeModal(result.Title, result.Message, true, true);\n          }\n        },\n        (error: any) => this.ErrorRegister(error));\n  }\n\n  restoreData() {\n    this.resetForm();\n    if (this.affiliateType == '1') {\n      this.expiredProductsFilter = [];\n    } else if (this.affiliateType == '2') {\n      this.expiredProductsFilter = this.expiredProducts;\n    }\n  }\n\n  generateInformativeModal(subTitle: string, description: string, isError: boolean, onlyButtonConfirm: boolean = true) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: isError ? 'alert-circle.svg' : 'alert-check.svg',\n        subTitle: subTitle,\n        description: description,\n        onlyButtonConfirm: onlyButtonConfirm,\n        textButton: 'Aceptar',\n        textButton1: 'Cancelar',\n        textButton2: 'Aceptar',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.bsModalService.show(InformativeModalComponent, initialState);\n  }\n\n  coordinateEvent(event: any, Document: any, CellPhone: any, Email: any) {\n    let document = btoa(Document);\n    let cellPhone = btoa(CellPhone);\n    let email = btoa(Email);\n    var paramsUrl = { document: document, cellPhone: cellPhone, email: email }\n    if (event == \"1\") {\n      this.router.navigate(['/portal/admin/coordinations'], { queryParams: paramsUrl });\n    } else {\n      this.bsModalRef = this.generateInformativeModal('Información', 'Concurre al Centro Médico de tu preferencia en el horario estipulado. O comunícate con nuestro chat de Servicio al Cliente', false, true);\n      /* TODO integrar la apertura del chat en este modal\n      this.dialogService.addDialog(ModalComponent, {\n        title: 'Información',\n        message: `Concurre al Centro Médico de tu preferencia en el horario estipulado. O comunícate con nuestro chat de Servicio al Cliente`,\n        openChatCustomerServiceMsg: \"aquí.\",\n        imageUrl: this.config.info.checkImage,\n        buttonConfirmText: \"Cerrar\"\n      }, { closeByClickingOutside: true });*/\n    }\n  }\n\n  private ErrorRegister(error: any) {\n    this.isLoading = false;\n    this.bsModalRef = this.generateInformativeModal('Inconvenientes con el portal', 'En este momento no podemos procesar tu solicitud. Por favor inténtalo mas tarde.', true, true);\n    /* TODO\n    agregar Sentry */\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpiredMedicalServicesService {\n\n  constructor(private http: HttpClient) { }\n\n  getExpiredProducts(documentType: any, document: any) {\n    let params = {\n      DocumentType: documentType,\n      Document: document,\n      Type: 1 //Todos los resultados.\n    }\n    return this.http.post(environment.API_URL + 'expiredmedicalservices/GetExpiredProducts', params);\n  }\n\n  public getBeneficiaries(payload: any) {\n    return this.http.post(environment.API_URL + 'Affiliate/GetBeneficiaries', payload);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}