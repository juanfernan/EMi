{"version":3,"file":"src_app_portal_moduls_service-solicitud_service-solicitud_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyD;AAChB;AACsC;AACqC;AAC1C;AACf;AACC;AACH;AACI;AAEY;AACA;AACA;AACyB;AAO3F,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAa9B,YACU,mBAAuC,EACvC,cAA8B,EAC9B,kBAAsC,EACtC,MAAc,EACd,YAA4B;QAJ5B,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAgB;QATtC,mBAAc,GAAG,IAAI,iEAAa,EAAE,CAAC;QACrC,0BAAqB,GAAW,aAAa,CAAC;QAU5C,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,6EAAmB,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,iFAAuB,CAAC;IACzC,CAAC;IAEF,QAAQ;IAER,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACzB,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI;oBACP,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,MAAM;aACT;SACF;IACH,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACtG,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;oBAC1C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC/C,IAAI,CAAC,iCAAiC,EAAE,CAAC;oBACzC,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;qBACI;oBACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;aACF;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAmB,EAAE,CAAC;QACpD,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;gBAClD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACnE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACrE,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,4EAA4E,CAAC,CAAC;YAC1H,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IAED,iCAAiC;QAC/B,IAAI,eAAe,GAAG,IAAI,kEAAgB,EAAE,CAAC;QAC7C,IAAI,WAAW,GAAG,IAAI,8DAAc,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,eAAe,CAAC,QAAQ,GAAG,YAAY,CAAC;YACxC,eAAe,CAAC,MAAM,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC;YACxB,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1C;aACI;YACH,eAAe,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtC,eAAe,CAAC,MAAM,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,GAAG,GAAG,YAAY,CAAC;YAC/B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAED,qBAAqB;QACnB,MAAM,YAAY,GAAiB;YACjC,YAAY,EAAE;gBACZ,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;aACxC;YACD,KAAK,EAAE,qCAAqC;YAC5C,EAAE,EAAE,yBAAyB;YAC7B,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2GAA0B,EAAE,YAAY,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC;QAC1F,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;QAClF,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC;QACpF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,iBAAiB,CAAC,cAAmB;QACnC,IAAI,CAAC,kBAAkB;aACpB,oBAAoB,CAAC,cAAc,CAAC;aACpC,SAAS,CACR,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC3B,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,EAAE;oBAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;oBAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBACpF;aACF;iBAAM;gBACL,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aAC7D;QACH,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEO,aAAa,CAAC,KAAU;QAC9B,IAAI,CAAC,wBAAwB,CAAC,8BAA8B,EAAE,kFAAkF,CAAC,CAAC;IACpJ,CAAC;IAED,wBAAwB,CAAC,QAAgB,EAAE,WAAmB;QAC5D,MAAM,YAAY,GAAiB;YACjC,YAAY,EAAE;gBACZ,UAAU,EAAE,kBAAkB;gBAC9B,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,WAAW;gBACxB,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,WAAW;gBACvB,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,EAAE;gBACf,kBAAkB,EAAE,KAAK;aAC1B;YACD,KAAK,EAAE,qCAAqC;YAC5C,EAAE,EAAE,yBAAyB;YAC7B,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8HAAyB,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;;;;;;;;;;sBAxKA,iDAAK;4BACL,iDAAK;;AAHK,mBAAmB;IAL/B,yDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8EAA4C;;KAE7C,CAAC;GACW,mBAAmB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpBkB;AACe;AAClC;AAC4B;AAQpD,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAQrC,YACU,YAA4B,EAC5B,UAAsB;QADtB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,eAAU,GAAV,UAAU,CAAY;QAE5B,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,iFAAuB,CAAC;IAC5C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,yCAAO,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;;;;;;AAlCU,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,qFAAmD;;KAEpD,CAAC;GACW,0BAA0B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACe;AAClC;AAC4B;AAOpD,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAKrC,YAAoB,YAA4B,EAAU,UAAsB;QAA5D,iBAAY,GAAZ,YAAY,CAAgB;QAAU,eAAU,GAAV,UAAU,CAAY;QAHhF,eAAU,GAAW,GAAG,iFAAuB,gBAAgB;IAK/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,yCAAO,EAAE,CAAC;IAC/B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;;;;;;AA3BU,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,qFAAmD;;KAEpD,CAAC;GACW,0BAA0B;AAAA;;;;;;;;;;;;;;;ACVhC,MAAM,aAAa;IA+DxB;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IAEvB,CAAC;;;;;;;;;;;;;;;;ACpFI,MAAM,cAAc;;;;;;;;;;;;;;;;ACApB,MAAM,OAAO;;;;;;;;;;;;;;;;ACEb,MAAM,gBAAgB;;;;;;;;;;;;;;;;ACFtB,MAAM,mBAAmB;;;;;;;;;;;;;;;;;;;ACAoB;AAK7C,IAAM,YAAY,GAAlB,MAAM,YAAY;IACvB,SAAS,CAAC,KAAa;QACrB,+GAA+G;QAC/G,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAElD,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QAChE,MAAM,KAAK,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEjE,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YACvD,IAAI,GAAG,GAAG,CAAC;gBACT,OAAO,IAAI,GAAG,CAAC,CAAC;;gBAEhB,OAAO,IAAI,CAAC;SACf;aACI,IAAI,KAAK,GAAG,CAAC,EAAE;YAClB,OAAO,IAAI,GAAG,CAAC,CAAC;SACjB;;YAEC,OAAO,IAAI,CAAC;IAChB,CAAC;;AAzBU,YAAY;IAHxB,mDAAI,CAAC;QACJ,IAAI,EAAE,UAAU;KACjB,CAAC;GACW,YAAY;AAAA;;;;;;;;;;;;;;;;;;;;ACLgB;AACc;AAES;AAEhE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAoB;KAChC;CACF,CAAC;AAMK,IAAM,iCAAiC,GAAvC,MAAM,iCAAiC;;AAAjC,iCAAiC;IAJ7C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,iCAAiC;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACmB;AAErB;AAE0C;AAEvB;AACH;AACuB;AACwB;AACvD;AAC0E;AAmBxH,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;;AAA1B,0BAA0B;IAjBtC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,+DAAY;YACZ,wDAAW;YACX,wDAAW;YACX,gEAAmB;YACnB,gGAAiC;SAClC;QACD,YAAY,EAAE;YACZ,yEAAoB;YACpB,6FAAmB;YACnB,qHAA0B;YAC1B,8DAAY;YACZ,uIAA0B;SAC3B;KACF,CAAC;GACW,0BAA0B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCW;AACM;AACf;AACc;AACwB;AACqC;AACrD;AACkB;AACA;AACpB;AACa;AACf;AACoE;AACnF;AACU;AACiB;AACM;AACR;AAEb;AACa;AACA;AACZ;AACJ;AACuD;AAOrG,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAyC/B,YACU,aAAkC,EAClC,YAA4B,EAC5B,SAA2B,EAC3B,EAAe,EACf,MAAc,EACd,mBAAgC,EAChC,mBAAuC,EACvC,cAA8B,EAC9B,kBAAsC;QARtC,kBAAa,GAAb,aAAa,CAAqB;QAClC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,cAAS,GAAT,SAAS,CAAkB;QAC3B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAa;QAChC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAhDhD,UAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,eAAU,GAAG,CAAC,CAAC;QACf,oBAAe,GAAG,IAAI,2FAAmB,EAAE,CAAC;QACpC,mBAAc,GAAW,EAAE,CAAC;QACpC,cAAS,GAAG,IAAI,uEAAS,EAAE,CAAC;QAK5B,0BAAqB,GAAG,IAAI,CAAC;QAC7B,qBAAgB,GAAG,EAAE,CAAC;QACtB,4BAAuB,GAAG,KAAK,CAAC;QAChC,kCAA6B,GAAG,KAAK,CAAC;QAatC,mBAAc,GAAG,IAAI,2FAAmB,EAAE,CAAC;QAS3C,mBAAc,GAAG,IAAI,kEAAa,EAAE,CAAC;QACrC,0BAAqB,GAAW,aAAa,CAAC;QAe5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,iFAAuB,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,gFAAsB,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,6EAAmB,CAAC;QAEnC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,iFAAkB,CAAC;QACrD,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,WAAW,CAAC;QAExC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,2FAA6B,CAAC,CAAC;YAClG,gBAAgB,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC,2FAA6B,CAAC,CAAC;SAC1G,CAAC,CAAC;IAEL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,aAAa;IAEb,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACjC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,QAAQ,IAAI,CAAC,UAAU,EAAE;gBACvB,KAAK,CAAC;oBACJ,MAAM;gBACR,KAAK,CAAC;oBACJ,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAC5B,MAAM;gBACR,KAAK,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAC5B,MAAM;gBACR,KAAK,CAAC;oBACJ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACvB;SACF;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,cAAc;IAEd,WAAW;QACT,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACzD,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,qEAAqE;IACrE,kBAAkB;QAChB,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE;gBAClF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;aACrC;SACF;aAAM;YACL,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE;gBAChG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBACnE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;SACF;IAEH,CAAC;IAED,0DAA0D;IAC1D,kBAAkB;QAChB,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACzD,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACvF,IAAI,CAAC,kBAAkB,EAAE;SAC1B;aACI;YACH,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACxD,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;YACnG,IAAI,CAAC,kBAAkB,EAAE;SAC1B;IACH,CAAC;IAED,aAAa,CAAC,MAAc;QAC1B,OAAO,+GAA8C,CAAC,MAAM,CAAC,CAAC;IAChE,CAAC;IAED,UAAU,CAAC,KAAU;QACnB,OAAO,kGAAiC,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAGD,aAAa;IAEb,oBAAoB;QAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa;aACf,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACnC,MAAM,CAAC,EAAE;YACP,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;gBACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aAC7D;QACH,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,eAAe,CAAC,OAAY;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC;SACtC;aACI;YACH,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC;SACtC;IACH,CAAC;IAED,YAAY,CAAC,MAAW;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,mBAAmB;aACrB,kBAAkB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;aACrF,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;gBAC9I,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC;oBAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACtC;oBACH,MAAM,QAAQ,GAAG,UAAU;oBAC3B,MAAM,WAAW,GAAG,wEAAwE;oBAC5F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBACvE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;wBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACzC,CAAC,CAAC;iBACH;aACF;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aAC/E;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB,CAAC,WAAgB;QAC/B,WAAW,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;YACnC,QAAQ,OAAO,CAAC,IAAI,EAAE;gBACpB,KAAK,IAAI;oBACP,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC;oBACrC,MAAM;gBACR,KAAK,IAAI;oBACP,OAAO,CAAC,OAAO,GAAG,qBAAqB,CAAC;oBACxC,MAAM;gBACR,KAAK,IAAI;oBACP,OAAO,CAAC,OAAO,GAAG,sBAAsB,CAAC;oBACzC,MAAM;gBACR,KAAK,IAAI;oBACP,OAAO,CAAC,OAAO,GAAG,sBAAsB,CAAC;oBACzC,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,aAAa,CAAC,KAAU;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,8BAA8B,EAAE,kFAAkF,CAAC,CAAC;QACpK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAC3E,MAAM,YAAY,GAAiB;gBACjC,YAAY,EAAE;oBACZ,KAAK,EAAE,OAAO;iBACf;gBACD,KAAK,EAAE,qCAAqC;gBAC5C,EAAE,EAAE,kBAAkB;aACvB,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uIAA0B,EAAE,YAAY,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAClF,MAAM,YAAY,GAAiB;gBACjC,YAAY,EAAE;oBACZ,KAAK,EAAE,OAAO;iBACf;gBACD,KAAK,EAAE,qCAAqC;gBAC5C,EAAE,EAAE,kBAAkB;aACvB,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uIAA0B,EAAE,YAAY,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,QAAgB,EAAE,WAAmB;QAC5D,MAAM,YAAY,GAAiB;YACjC,YAAY,EAAE;gBACZ,UAAU,EAAE,kBAAkB;gBAC9B,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,WAAW;gBACxB,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,SAAS;gBACrB,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,EAAE;gBACf,kBAAkB,EAAE,KAAK;aAC1B;YACD,KAAK,EAAE,qCAAqC;YAC5C,EAAE,EAAE,yBAAyB;YAC7B,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8HAAyB,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,MAAM,YAAY,GAAiB;gBACjC,YAAY,EAAE;oBACZ,UAAU,EAAE,kBAAkB;oBAC9B,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,yFAAyF;oBACtG,iBAAiB,EAAE,IAAI;oBACvB,UAAU,EAAE,SAAS;oBACrB,WAAW,EAAE,EAAE;oBACf,WAAW,EAAE,EAAE;oBACf,kBAAkB,EAAE,KAAK;iBAC1B;gBACD,KAAK,EAAE,qCAAqC;gBAC5C,EAAE,EAAE,yBAAyB;gBAC7B,QAAQ,EAAE,IAAI;gBACd,mBAAmB,EAAE,IAAI;aAC1B,CAAC;YACF,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8HAAyB,EAAE,YAAY,CAAC,CAAC;SACxE;IACH,CAAC;IAED,kBAAkB;IAElB,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACzB,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI;oBACP,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,MAAM;aACT;SACF;IACH,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACtG,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;oBAC1C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC/C,IAAI,CAAC,iCAAiC,EAAE,CAAC;oBACzC,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;qBACI;oBACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;aACF;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,kBAAkB,GAAG,IAAI,+EAAmB,EAAE,CAAC;QACpD,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;gBAClD,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACnE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACrE,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACnC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,4EAA4E,CAAC,CAAC;YAC1H,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IAED,iCAAiC;QAC/B,IAAI,eAAe,GAAG,IAAI,mEAAgB,EAAE,CAAC;QAC7C,IAAI,WAAW,GAAG,IAAI,+DAAc,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,eAAe,CAAC,QAAQ,GAAG,YAAY,CAAC;YACxC,eAAe,CAAC,MAAM,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,GAAG,GAAG,KAAK,CAAC;YACxB,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1C;aACI;YACH,eAAe,CAAC,QAAQ,GAAG,UAAU,CAAC;YACtC,eAAe,CAAC,MAAM,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,GAAG,GAAG,YAAY,CAAC;YAC/B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAED,qBAAqB;QACnB,MAAM,YAAY,GAAiB;YACjC,YAAY,EAAE;gBACZ,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;aACxC;YACD,KAAK,EAAE,qCAAqC;YAC5C,EAAE,EAAE,yBAAyB;YAC7B,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sHAA0B,EAAE,YAAY,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC;QAC1F,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;QAClF,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC;QACpF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,iBAAiB,CAAC,cAAmB;QACnC,IAAI,CAAC,kBAAkB;aACpB,oBAAoB,CAAC,cAAc,CAAC;aACpC,SAAS,CACR,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC3B,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,EAAE;oBAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;oBAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBACpF;aACF;iBAAM;gBACL,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aAC7D;QACH,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;;;;;;;;;;;;;AAlcU,oBAAoB;IALhC,yDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,8EAA4C;;KAE7C,CAAC;GACW,oBAAoB;AAAA;;;;;;;;;;;;;;;;;;;;AC/BiB;AACP;AACgB;AAMpD,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,yBAAyB,CAAC,mBAAwC;QAChE,IAAI,GAAG,GAAG,6EAAmB,GAAG,oCAAoC,CAAC;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,mBAAmB,CAAC;IACjD,CAAC;;;;;AAVU,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB;AAAA;;;;;;;;;;;;;;;;;;;;ACRmB;AACP;AAEgB;AAKpD,IAAM,WAAW,GAAjB,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,kBAAkB,CAAC,YAAoB,EAAE,QAAgB,EAAE,QAAgB,EAAE,SAAiB;QAC5F,IAAI,GAAG,GAAG,6EAAmB,GAAG,6BAA6B,CAAC;QAC9D,IAAI,MAAM,GAAG;YACX,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;YAClB,IAAI,EAAE,6EAAmB;YACzB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;SACrB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;;;;;AAjBU,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;ACR0B;AACP;AAEgB;AAKpD,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAI7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,6EAAmB,CAAC;IAI1B,CAAC;IAGL,oBAAoB,CAAC,cAAmB;QACtC,IAAI,GAAG,GAAG,6EAAmB,GAAG,oBAAoB,CAAC;QACrD,IAAI,MAAM,GAAG;YACX,IAAI,EAAE,cAAc,CAAC,WAAW;YAChC,QAAQ,EAAE,cAAc,CAAC,eAAe;YACxC,YAAY,EAAE,cAAc,CAAC,mBAAmB;YAChD,OAAO,EAAE,cAAc,CAAC,OAAO;YAC/B,UAAU,EAAE,cAAc,CAAC,YAAY;YACvC,IAAI,EAAE,cAAc,CAAC,MAAM;YAC3B,YAAY,EAAE,cAAc,CAAC,cAAc;YAC3C,MAAM,EAAE,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM;YAC/E,2CAA2C;YAC3C,YAAY,EAAE,EAAE;YAChB,GAAG,EAAE,cAAc,CAAC,GAAG;YACvB,IAAI,EAAE,cAAc,CAAC,SAAS;YAC9B,iCAAiC;YACjC,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,GAAG,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,cAAc,EAAE;YACzE,QAAQ,EAAE,cAAc,CAAC,QAAQ;YACjC,SAAS,EAAE,cAAc,CAAC,SAAS;YACnC,SAAS,EAAE,cAAc,CAAC,eAAe,KAAK,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC,cAAc,CAAC,gBAAgB;YACxH,YAAY,EAAE,cAAc,CAAC,QAAQ;SACtC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;;;;;AAlCU,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB;AAAA","sources":["./src/app/portal/moduls/service-solicitud/components/card-type/card-type-service.page.ts","./src/app/portal/moduls/service-solicitud/components/modal-phones-center/modal-phones-center.component.ts","./src/app/portal/moduls/service-solicitud/components/service-terms-modal/service-terms-modal.component.ts","./src/app/portal/moduls/service-solicitud/models/address-detail.ts","./src/app/portal/moduls/service-solicitud/models/card-phone.ts","./src/app/portal/moduls/service-solicitud/models/pantient.ts","./src/app/portal/moduls/service-solicitud/models/phone-number.ts","./src/app/portal/moduls/service-solicitud/models/request-phone-numbers.ts","./src/app/portal/moduls/service-solicitud/pipes/birthday.pipe.ts","./src/app/portal/moduls/service-solicitud/service-solicitud-routing.module.ts","./src/app/portal/moduls/service-solicitud/service-solicitud.module.ts","./src/app/portal/moduls/service-solicitud/service-solicitud.page.ts","./src/app/portal/moduls/service-solicitud/services/phone-number.service.ts","./src/app/portal/moduls/service-solicitud/services/plan.service.ts","./src/app/portal/moduls/service-solicitud/services/show-details.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\nimport { AddressDetail } from '../../models/address-detail';\nimport { CardPhoneModel } from '../../models/card-phone';\nimport { PhoneNumberModel } from '../../models/phone-number';\nimport { PhonesNumbersModel } from '../../models/phone-numbers';\nimport { RequestPhoneNumbers } from '../../models/request-phone-numbers';\nimport { PhoneNumberService } from '../../services/phone-number.service';\nimport { ShowDetailsService } from '../../services/show-details.service';\nimport { ModalPhonesCenterComponent } from '../modal-phones-center/modal-phones-center.component';\n\n@Component({\n  selector: 'app-card-type',\n  templateUrl: './card-type-service.page.html',\n  styleUrls: ['./card-type-service.page.scss'],\n})\nexport class CardTypeServicePage implements OnInit {\n\n  @Input() service;\n  @Input() acceptConsent: boolean;\n  imgRoute: string;\n  country: string;\n  environment: any;\n  requestPhoneNumber: RequestPhoneNumbers;\n  listNumberPhones: PhonesNumbersModel;\n  _addressDetail = new AddressDetail();\n  informativeTitleModal: string = \"Información\";\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private phoneNumberServices: PhoneNumberService,\n    private urlDataService: UrlDataService,\n    private showDetailsService: ShowDetailsService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {\n    this.environment = environment;\n    this.country = environment.country;\n    this.imgRoute = environment.imagesRoute;\n   }\n\n  ngOnInit() {\n\n  }\n\n  loadService() {\n    if (!this.acceptConsent) {\n      switch (this.service.Code) {\n        case \"02\":\n        case \"07\":\n        case \"09\":\n        case \"10\":\n          this.loadVideoCall();\n          break;\n      }\n    }\n  }\n\n  loadPhoneExperienceCenter() {\n    this.phoneNumberServices.getPhonesExperienceCenter(this.requestPhoneNumber).subscribe((response: any) => {\n      if (response) {\n        response.UPhoneses.forEach((element: any) => {\n          this.listNumberPhones = response;\n        });\n        if (this.listNumberPhones.UPhoneses.length == 0) {\n          this.loadPhoneEperienceCenterByDefault();\n          this.loadModalPhoneNumbers();\n        }\n        else {\n          this.loadModalPhoneNumbers();\n        }\n      }\n\n    });\n  }\n\n  getUserLocation() {\n    this.requestPhoneNumber = new RequestPhoneNumbers();\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.requestPhoneNumber.Latitud = String(position.coords.latitude);\n        this.requestPhoneNumber.Longitud = String(position.coords.longitude);\n        this.loadPhoneExperienceCenter();\n      }, error => {\n        this.generateInformativeModal(\"Atención\", \"En este momento no es posible obtener tu ubicación. Verifica los permisos.\");\n      });\n    } else {\n      this.requestPhoneNumber.Latitud = \"\";\n      this.requestPhoneNumber.Longitud = \"\";\n      this.loadPhoneExperienceCenter();\n    }\n  }\n\n  loadPhoneEperienceCenterByDefault() {\n    let listNumberPhone = new PhoneNumberModel();\n    let numberPhone = new CardPhoneModel();\n\n    if (this.country == 'co') {\n      listNumberPhone.CityName = \"Montevideo\";\n      listNumberPhone.Phones = [];\n      numberPhone.Tel = \"147\";\n      listNumberPhone.Phones.push(numberPhone);\n    }\n    else {\n      listNumberPhone.CityName = \"Medellín\";\n      listNumberPhone.Phones = [];\n      numberPhone.Tel = \"6044441330\";\n      listNumberPhone.Phones.push(numberPhone);\n    }\n\n    this.listNumberPhones.UPhoneses.push(listNumberPhone);\n  }\n\n  loadModalPhoneNumbers() {\n    const initialState: ModalOptions = {\n      initialState: {\n        listPhoneNumbers: this.listNumberPhones,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.modalService.show(ModalPhonesCenterComponent, initialState);\n  }\n\n  loadVideoCall() {\n    this._addressDetail.ServiceType = this.service.ServiceType;\n    this._addressDetail.PatientDocumentType = this.urlDataService.SelectedPerson.DocumentType;\n    this._addressDetail.PatientDocument = this.urlDataService.SelectedPerson.Document;\n    this._addressDetail.Country = \"\";\n    this._addressDetail.DepartmentId = \"\";\n    this._addressDetail.CityId = \"\";\n    this._addressDetail.NeighborhoodId = \"008\";\n    this._addressDetail.Street = \"\";\n    this._addressDetail.Bis = \"\";\n    this._addressDetail.Apartment = \"\";\n    this._addressDetail.AddressDetails = \"\";\n    this._addressDetail.Latitude = null;\n    this._addressDetail.Longitude = null;\n    this._addressDetail.PatientCellPhone = this.urlDataService.SelectedPerson.CellPhone;\n    this._addressDetail.Coverage = true;\n    this.videoCallPetition(this._addressDetail);\n  }\n\n  videoCallPetition(_addressDetail: any) {\n    this.showDetailsService\n      .getVideoCallPetition(_addressDetail)\n      .subscribe(\n        (result) => {\n          if (result.StatusCode === 0) {\n            if (result.Petition.Cod == '1') {\n              this.urlDataService.UrlService = result.Petition.Return.Url;\n              this.router.navigate(['/videochat']);\n            } else {\n              this.generateInformativeModal(this.informativeTitleModal, result.Petition.Message);\n            }\n          } else {\n            this.generateInformativeModal(result.Title, result.Message);\n          }\n        },\n        error => this.ErrorRegister(error));\n  }\n\n  private ErrorRegister(error: any) {\n    this.generateInformativeModal('Inconvenientes con el portal', 'En este momento no podemos procesar tu solicitud. Por favor inténtalo mas tarde.');\n  }\n\n  generateInformativeModal(subTitle: string, description: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: subTitle,\n        description: description,\n        onlyButtonConfirm: true,\n        textButton: 'Continuar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.modalService.show(InformativeModalComponent, initialState);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { RequestPhoneNumbers } from '../../models/request-phone-numbers';\n\n@Component({\n  selector: 'app-modal-phones-center',\n  templateUrl: './modal-phones-center.component.html',\n  styleUrls: ['./modal-phones-center.component.scss'],\n})\nexport class ModalPhonesCenterComponent implements OnInit {\n  \n  listPhoneNumbers: any;\n  imgRoute: string;\n  environment: any;\n  requestPhoneNumber: RequestPhoneNumbers;\n  public onClose: Subject<boolean>;\n\n  constructor(\n    private modalService: BsModalService, \n    private bsModalRef: BsModalRef\n    ) {\n      this.environment = environment;\n      this.imgRoute = environment.imagesRoute;\n  }\n\n  ngOnInit(): void {\n    this.onClose = new Subject();\n  }\n\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n  confirm() {\n    this.onClose.next(true);\n    this.onClose.complete();\n    this.bsModalRef.hide();\n  }\n\n  cancel() {\n    this.onClose.next(false);\n    this.onClose.complete();\n    this.bsModalRef.hide();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-service-terms-modal',\n  templateUrl: './service-terms-modal.component.html',\n  styleUrls: ['./service-terms-modal.component.scss'],\n})\nexport class ServiceTermsModalComponent implements OnInit {\n  public onClose: Subject<boolean>;\n  imageRoute: string = `${environment.imagesRoute}logo-modal.png`\n  texto: string;\n\n  constructor(private modalService: BsModalService, private bsModalRef: BsModalRef) {\n\n  }\n\n  ngOnInit(): void {\n    this.onClose = new Subject();\n  }\n\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n  confirm() {\n    this.onClose.next(true);\n    this.onClose.complete();\n    this.bsModalRef.hide();\n  }\n\n  cancel() {\n    this.onClose.next(false);\n    this.onClose.complete();\n    this.bsModalRef.hide();\n  }\n\n}\n","export class AddressDetail {\n  Id: string;\n  ServiceType: string;\n  AppliantDocumentType: string;\n  AppliantDocument: string;\n  PatientDocumentType: string;\n  PatientDocumentTypeShort: string;\n  PatientDocument: string;\n  PatientCellPhone: string;\n  PatientPhone: string;\n  PatientEmail: string;\n  PatientFullNames: string;\n  ApplicantCellPhone: string;\n  AppliantName: string;\n  Country: string;\n  CountryId: string;\n  DisabledCountry: boolean;\n  Department: string;\n  DepartmentId: string;\n  DisabledDepartment: boolean;\n  City: string;\n  CityId: string;\n  DisabledCity: boolean;\n  Neighborhood: string;\n  NeighborhoodId: string;\n  DisabledNeighborhood: boolean;\n  Address: string;\n\n  DisabledTypeMainRoad: boolean;\n  typeMainRoad: string;\n\n  mainRoadNumber: string;\n  DisabledMainRoadNumber: boolean;\n\n  numberGeneratingNomenclature: string;\n  DisabledNumberGeneratingNomenclature: boolean;\n\n  portNumber: string;\n  DisabledPortNumber: boolean;\n\n  Street: string;\n  DisabledStreet: boolean;\n  DoorNumber: string;\n  DisabledDoorNumber: boolean;\n  Bis: string;\n  DisabledBis: boolean;\n  Apartment: string;\n  DisabledApartment: boolean;\n  Corner: string;\n  DisabledCorner: boolean;\n  AddressDetails: string;\n  DisabledAddressDetails: boolean;\n  IsContactNumber: boolean;\n  Inside: string;\n  Latitude: number | null;\n  Longitude: number | null;\n  StandardizedAddress: string;\n  StandardizedAddressCoverage: string;\n  IsNewAddress: boolean;\n  StandardizedMessage: any;\n  Coverage: boolean;\n  StreetSO: string;\n\n  public constructor() {\n    this.CountryId = \"\";\n    this.DepartmentId = \"\";\n    this.CityId = \"\";\n    this.typeMainRoad = \"\";\n    this.mainRoadNumber = \"\";\n    this.NeighborhoodId = \"\";\n    this.Address = \"\";\n    this.Corner = \"\";\n    this.DoorNumber = \"\";\n    this.IsNewAddress = true;\n    this.StandardizedAddress = \"\";\n    this.Street = \"\";\n    this.Bis = \"\";\n    this.Apartment = \"\";\n    this.AddressDetails = \"\";\n    this.Coverage = false;\n    this.StandardizedAddressCoverage = \"\";\n    this.numberGeneratingNomenclature = \"\";\n    this.portNumber = \"\";\n\n  }\n}\n","export class CardPhoneModel {\n  Id: string;\n  Tel: string;\n  Image: string;\n  numberPhones: Array<string>;\n}\n","export class Patient {\n  BirthDate: string;\n  CellPhone: string;\n  Document: string;\n  DocumentType: string;\n  DocumentTypeShort: string;\n  Email: string;\n  FullNameTitular: string;\n  FullNames: string;\n  IsTitular: boolean;\n  Life: string;\n}\n","import { CardPhoneModel } from \"./card-phone\";\n\nexport class PhoneNumberModel {\n  ObjectConverter: boolean;\n  CityCode: string;\n  CityName: string;\n  Phones: Array<CardPhoneModel>\n}\n","export class RequestPhoneNumbers {\n  Latitud: string;\n  Longitud: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'birthday'\n})\nexport class BirthdayPipe implements PipeTransform {\n  transform(value: string): number {\n    // metodo realizado para recibir string como formato = \"19901105\" caso contrario agregar otra logica diferente.\n    const _year = Number(value.substring(0, 4));\n    const _mont = Number(value.substring(4, 6));\n    const _day = Number(value.substring(6, 8));\n\n    const dateNow = new Date();\n    const dateBirthday = new Date(_year, _mont, _day);\n\n    const year = dateNow.getFullYear() - dateBirthday.getFullYear();\n    const month = (dateBirthday.getMonth() - 1) - dateNow.getMonth();\n\n    if (month == 0) {\n      const day = dateBirthday.getDate() - dateNow.getDate();\n      if (day > 0)\n        return year - 1;\n      else\n        return year;\n    }\n    else if (month > 0) {\n      return year - 1;\n    }\n    else\n      return year;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServiceSolicitudPage } from './service-solicitud.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServiceSolicitudPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServiceSolicitudPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServiceSolicitudPageRoutingModule } from './service-solicitud-routing.module';\n\nimport { ServiceSolicitudPage } from './service-solicitud.page';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { CardTypeServicePage } from './components/card-type/card-type-service.page';\nimport { ModalPhonesCenterComponent } from './components/modal-phones-center/modal-phones-center.component';\nimport { BirthdayPipe } from './pipes/birthday.pipe';\nimport { ServiceTermsModalComponent } from '../service-solicitud/components/service-terms-modal/service-terms-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ServiceSolicitudPageRoutingModule\n  ],\n  declarations: [\n    ServiceSolicitudPage,\n    CardTypeServicePage,\n    ModalPhonesCenterComponent,\n    BirthdayPipe,\n    ServiceTermsModalComponent\n  ]\n})\nexport class ServiceSolicitudPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ValidatorStartCellPhoneNumber } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\nimport { ServiceTermsModalComponent } from '../service-solicitud/components/service-terms-modal/service-terms-modal.component';\nimport { Patient } from './models/pantient';\nimport { PlanService } from './services/plan.service';\nimport { PortalCommonService } from './services/portal-common.service';\nimport { PortalValidatorService } from './services/portal-validator.service';\nimport { RequestPhoneNumbers } from './models/request-phone-numbers';\nimport { PhonesNumbersModel } from './models/phone-numbers';\nimport { AddressDetail } from './models/address-detail';\nimport { PhoneNumberService } from './services/phone-number.service';\nimport { ShowDetailsService } from './services/show-details.service';\nimport { PhoneNumberModel } from './models/phone-number';\nimport { CardPhoneModel } from './models/card-phone';\nimport { ModalPhonesCenterComponent } from './components/modal-phones-center/modal-phones-center.component';\n\n@Component({\n  selector: 'app-service-solicitud',\n  templateUrl: './service-solicitud.page.html',\n  styleUrls: ['./service-solicitud.page.scss'],\n})\nexport class ServiceSolicitudPage implements OnInit {\n\n  steps = [1, 2, 3];\n  actualStep = 1;\n  continuarButton = new ButtonConfiguration();\n  private documentPerson: string = \"\";\n  userLogin = new UserLogin();\n  persons: any;\n  patient: Patient;\n  form: FormGroup;\n  continueText: string;\n  dontShowPatientNumber = true;\n  cellPhonePatient = \"\";\n  validateCellNumberError = false;\n  validateCellPhonePatientError = false;\n  maxLength: string;\n  imgRoute: string;\n  buttonContinuarDisabled: boolean;\n  bsModalRef?: BsModalRef;\n  isLoading: boolean;\n\n  planServices: any;\n  environment: any;\n  latitud: string;\n  longitud: string;\n  checkTerminos: boolean;\n  checkConsentimientos: boolean;\n  cancelarButton = new ButtonConfiguration();\n\n  canContinue: boolean;\n  canNotContinue: boolean;\n  selectedPerson: any;\n  country: string;\n\n  requestPhoneNumber: RequestPhoneNumbers;\n  listNumberPhones: PhonesNumbersModel;\n  _addressDetail = new AddressDetail();\n  informativeTitleModal: string = \"Información\";\n\n  service: any;\n\n  constructor(\n    private commonService: PortalCommonService,\n    private modalService: BsModalService,\n    private translate: TranslateService,\n    private fb: FormBuilder,\n    private router: Router,\n    private planServicesService: PlanService,\n    private phoneNumberServices: PhoneNumberService,\n    private urlDataService: UrlDataService,\n    private showDetailsService: ShowDetailsService,\n  ) {\n    this.isLoading = true;\n    this.environment = environment;\n    this.imgRoute = environment.imagesRoute;\n    this.maxLength = environment.lengthCell;\n    this.country = environment.country;\n\n    this.buttonContinuarDisabled = true;\n    this.continuarButton.buttonType = ButtonType.Primary;\n    this.continuarButton.text = \"Continuar\";\n\n    this.form = this.fb.group({\n      cellPhone: [{ value: '', disabled: !this.dontShowPatientNumber }, [ValidatorStartCellPhoneNumber]],\n      cellPhonePatient: [{ value: '', disabled: !this.dontShowPatientNumber }, [ValidatorStartCellPhoneNumber]],\n    });\n\n  }\n\n  ngOnInit() {\n    this.loadDataPerson();\n    this.checkConsentimientos = false;\n  }\n\n  // first step\n\n  setNextStep() {\n    if (!this.buttonContinuarDisabled) {\n      this.actualStep++;\n      switch (this.actualStep) {\n        case 1:\n          break;\n        case 2:\n          this.activateValidation();\n          this.SetInitialCheckFalse();\n          break;\n        case 3:\n          this.loadCoordenadas();\n          this.loadServices(this.patient);\n          this.SetInitialCheckFalse();\n          break;\n        case 4:\n          this.actualStep = 1;\n      }\n    }\n  }\n\n  setLastStep() {\n    this.actualStep--;\n  }\n\n  loadDataPerson() {\n    this.isLoading = true;\n    this.userLogin.documentType = localStorage.getItem(\"documentType\");\n    this.userLogin.document = localStorage.getItem(\"document\");\n    this.userLogin.idReference = localStorage.getItem(\"registerId\");\n    this.getPersons();\n  }\n\n\n  // second step\n\n  changeSwich() {\n    this.dontShowPatientNumber = !this.dontShowPatientNumber;\n    !this.dontShowPatientNumber ?\n      this.form.controls.cellPhone.disable() :\n      this.form.controls.cellPhone.enable();\n    this.activateValidation();\n  }\n\n  //activamos el proceso para emitir la respuesta a la pagina principal\n  activateValidation() {\n    if (this.dontShowPatientNumber) {\n      if (this.form.controls.cellPhone.value != \"\" && this.form.controls.cellPhone.valid) {\n        this.patient.CellPhone = this.form.controls.cellPhone.value;\n        this.canContinue = true;\n        this.buttonContinuarDisabled = false;\n      } else {\n        this.canNotContinue = false;\n        this.buttonContinuarDisabled = true;\n      }\n    } else {\n      if (this.form.controls.cellPhonePatient.value != \"\" && this.form.controls.cellPhonePatient.valid) {\n        this.patient.CellPhone = this.form.controls.cellPhonePatient.value;\n        this.canContinue = true;\n        this.buttonContinuarDisabled = false;\n      } else {\n        this.canNotContinue = false;\n      }\n    }\n\n  }\n\n  //validamos si el numero de telefono ingresado es correcto\n  validateCellNumber() {\n    if (this.dontShowPatientNumber) {\n      let isValid = this.numberIsValid(this.patient.CellPhone);\n      (isValid) ? this.validateCellNumberError = false : this.validateCellNumberError = true;\n      this.activateValidation()\n    }\n    else {\n      let isValid = this.numberIsValid(this.cellPhonePatient);\n      (isValid) ? this.validateCellPhonePatientError = false : this.validateCellPhonePatientError = true;\n      this.activateValidation()\n    }\n  }\n\n  numberIsValid(number: string): boolean {\n    return PortalValidatorService.validateNumberCellPhone(number);\n  }\n\n  numberOnly(event: any): boolean {\n    return PortalValidatorService.numberOnly(event);\n  }\n\n\n  // third step\n\n  SetInitialCheckFalse() {\n    this.checkTerminos = false;\n    this.checkConsentimientos = false;\n  }\n\n  getPersons() {\n    this.commonService\n      .getPersons(this.userLogin).subscribe(\n        result => {\n          if (result.StatusCode === 0) {\n            this.persons = result.Beneficiaries;\n            this.isLoading = false;\n          } else {\n            this.generateInformativeModal(result.Title, result.Message);\n          }\n        },\n        error => this.ErrorRegister(error));\n  }\n\n  selectionPerson(persona: any) {\n    this.patient = new Patient();\n    this.patient.BirthDate = persona.BirthDate;\n    this.patient.CellPhone = persona.CellPhone;\n    this.patient.Document = persona.Document;\n    this.patient.DocumentType = persona.DocumentType;\n    this.patient.DocumentTypeShort = persona.DocumentTypeShort;\n    this.patient.Email = persona.Email;\n    this.patient.FullNameTitular = persona.FullNameTitular;\n    this.patient.FullNames = persona.FullNames;\n    this.patient.IsTitular = persona.IsTitular;\n    this.patient.Life = persona.Life;\n    this.form.controls.cellPhone.setValue(persona.CellPhone);\n    this.buttonContinuarDisabled = false;\n    this.setNextStep();\n  }\n\n  loadCoordenadas() {\n    if (this.country == 'co') {\n      this.latitud = \"6.215367329734754\";\n      this.longitud = \"-75.57630227350138\";\n    }\n    else {\n      this.latitud = \"-34.89083518038249\";\n      this.longitud = \"-56.14904493065947\";\n    }\n  }\n\n  loadServices(person: any) {\n    this.isLoading = true;\n    this.planServicesService\n      .getEnabledServices(person.DocumentType, person.Document, this.latitud, this.longitud)\n      .subscribe((result) => {\n        if (result.StatusCode === 0) {\n          this.planServices = result.EnabledServices.filter((obj: any) => obj.Code == \"02\" || obj.Code == \"07\" || obj.Code == \"09\" || obj.Code == \"10\");\n          if (this.planServices.length > 0)\n            this.validateResponse(this.planServices);\n          else {\n            const subTitle = 'Atención'\n            const description = 'No se encontraron servicios habilitados para el paciente seleccionado.'\n            this.bsModalRef = this.generateInformativeModal(subTitle, description);\n            this.bsModalRef.content.onClose.subscribe((result: any) => {\n              this.router.navigate(['/portal/home']);\n            })\n          }\n        } else {\n          this.bsModalRef = this.generateInformativeModal(result.Title, result.Message);\n        }\n        this.isLoading = false;\n      }, error => this.ErrorRegister(error))\n  }\n\n  validateResponse(listService: any) {\n    listService.forEach((service: any) => {\n      switch (service.Code) {\n        case \"02\":\n          service.IconApp = \"call-outline.svg\";\n          break;\n        case \"07\":\n          service.IconApp = \"chatbox-outline.svg\";\n          break;\n        case \"09\":\n          service.IconApp = \"videocam-outline.svg\";\n          break;\n        case \"10\":\n          service.IconApp = \"videocam-outline.svg\";\n          break;\n      }\n    });\n  }\n\n  private ErrorRegister(error: any) {\n    this.bsModalRef = this.generateInformativeModal('Inconvenientes con el portal', 'En este momento no podemos procesar su solicitud. Por favor inténtalo mas tarde.');\n    this.router.navigate(['/portal/home'], { replaceUrl: true });\n  }\n\n  openTerminos() {\n    this.translate.get(\"PORTAL.SERVICE-SOLICITUDE.Terminos\").subscribe(message => {\n      const initialState: ModalOptions = {\n        initialState: {\n          texto: message,\n        },\n        class: 'modal-dialog-centered modal-rounded',\n        id: 'modal-activation',\n      };\n      this.bsModalRef = this.modalService.show(ServiceTermsModalComponent, initialState);\n    });\n  }\n\n  openConsentimientos() {\n    this.translate.get(\"PORTAL.SERVICE-SOLICITUDE.Consentimientos\").subscribe(message => {\n      const initialState: ModalOptions = {\n        initialState: {\n          texto: message,\n        },\n        class: 'modal-dialog-centered modal-rounded',\n        id: 'modal-activation',\n      };\n      this.bsModalRef = this.modalService.show(ServiceTermsModalComponent, initialState);\n    });\n  }\n\n  generateInformativeModal(subTitle: string, description: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: subTitle,\n        description: description,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.modalService.show(InformativeModalComponent, initialState);\n  }\n\n  checkConsentimiento() {\n    if (!this.checkConsentimientos) {\n      const initialState: ModalOptions = {\n        initialState: {\n          iconHeader: 'alert-circle.svg',\n          subTitle: 'Atención',\n          description: 'Para poder solicitar una atención, debe aceptar la casilla de consentimiento informado.',\n          onlyButtonConfirm: true,\n          textButton: 'Aceptar',\n          textButton1: '',\n          textButton2: '',\n          visibleButtonClose: false,\n        },\n        class: 'modal-dialog-centered modal-rounded',\n        id: 'modal-error-no-services',\n        backdrop: true,\n        ignoreBackdropClick: true\n      };\n      return this.modalService.show(InformativeModalComponent, initialState);\n    }\n  }\n\n  // seccion service\n\n  loadService() {\n    if (!this.checkTerminos) {\n      switch (this.service.Code) {\n        case \"02\":\n        case \"07\":\n        case \"09\":\n        case \"10\":\n          this.loadVideoCall();\n          break;\n      }\n    }\n  }\n\n  loadPhoneExperienceCenter() {\n    this.phoneNumberServices.getPhonesExperienceCenter(this.requestPhoneNumber).subscribe((response: any) => {\n      if (response) {\n        response.UPhoneses.forEach((element: any) => {\n          this.listNumberPhones = response;\n        });\n        if (this.listNumberPhones.UPhoneses.length == 0) {\n          this.loadPhoneEperienceCenterByDefault();\n          this.loadModalPhoneNumbers();\n        }\n        else {\n          this.loadModalPhoneNumbers();\n        }\n      }\n\n    });\n  }\n\n  getUserLocation() {\n    this.requestPhoneNumber = new RequestPhoneNumbers();\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.requestPhoneNumber.Latitud = String(position.coords.latitude);\n        this.requestPhoneNumber.Longitud = String(position.coords.longitude);\n        this.loadPhoneExperienceCenter();\n      }, error => {\n        this.generateInformativeModal(\"Atención\", \"En este momento no es posible obtener tu ubicación. Verifica los permisos.\");\n      });\n    } else {\n      this.requestPhoneNumber.Latitud = \"\";\n      this.requestPhoneNumber.Longitud = \"\";\n      this.loadPhoneExperienceCenter();\n    }\n  }\n\n  loadPhoneEperienceCenterByDefault() {\n    let listNumberPhone = new PhoneNumberModel();\n    let numberPhone = new CardPhoneModel();\n\n    if (this.country == 'co') {\n      listNumberPhone.CityName = \"Montevideo\";\n      listNumberPhone.Phones = [];\n      numberPhone.Tel = \"147\";\n      listNumberPhone.Phones.push(numberPhone);\n    }\n    else {\n      listNumberPhone.CityName = \"Medellín\";\n      listNumberPhone.Phones = [];\n      numberPhone.Tel = \"6044441330\";\n      listNumberPhone.Phones.push(numberPhone);\n    }\n\n    this.listNumberPhones.UPhoneses.push(listNumberPhone);\n  }\n\n  loadModalPhoneNumbers() {\n    const initialState: ModalOptions = {\n      initialState: {\n        listPhoneNumbers: this.listNumberPhones,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.modalService.show(ModalPhonesCenterComponent, initialState);\n  }\n\n  loadVideoCall() {\n    this._addressDetail.ServiceType = this.service.ServiceType;\n    this._addressDetail.PatientDocumentType = this.urlDataService.SelectedPerson.DocumentType;\n    this._addressDetail.PatientDocument = this.urlDataService.SelectedPerson.Document;\n    this._addressDetail.Country = \"\";\n    this._addressDetail.DepartmentId = \"\";\n    this._addressDetail.CityId = \"\";\n    this._addressDetail.NeighborhoodId = \"008\";\n    this._addressDetail.Street = \"\";\n    this._addressDetail.Bis = \"\";\n    this._addressDetail.Apartment = \"\";\n    this._addressDetail.AddressDetails = \"\";\n    this._addressDetail.Latitude = null;\n    this._addressDetail.Longitude = null;\n    this._addressDetail.PatientCellPhone = this.urlDataService.SelectedPerson.CellPhone;\n    this._addressDetail.Coverage = true;\n    this.videoCallPetition(this._addressDetail);\n  }\n\n  videoCallPetition(_addressDetail: any) {\n    this.showDetailsService\n      .getVideoCallPetition(_addressDetail)\n      .subscribe(\n        (result) => {\n          if (result.StatusCode === 0) {\n            if (result.Petition.Cod == '1') {\n              this.urlDataService.UrlService = result.Petition.Return.Url;\n              this.router.navigate(['/videochat']);\n            } else {\n              this.generateInformativeModal(this.informativeTitleModal, result.Petition.Message);\n            }\n          } else {\n            this.generateInformativeModal(result.Title, result.Message);\n          }\n        },\n        error => this.ErrorRegister(error));\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { RequestPhoneNumbers } from '../models/request-phone-numbers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhoneNumberService {\n\n\n  constructor(private http: HttpClient\n  ) {\n  }\n\n  getPhonesExperienceCenter(requestPhoneNumbers: RequestPhoneNumbers): any {\n    let url = environment.API_URL + \"DataLists/GetPhoneExperienceCenter\";\n    return this.http.post(url, requestPhoneNumbers)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanService {\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getEnabledServices(documentType: string, document: string, latitude: string, longitude: string): Observable<any> {\n    let url = environment.API_URL + 'Services/GetEnabledServices';\n    let params = {\n      DocumentType: documentType,\n      Document: document,\n      Code: environment.mapCode,\n      Latitude: latitude,\n      Longitude: longitude\n    }\n\n    return this.http.post(url, params);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowDetailsService {\n  headers: Headers;\n  country = environment.country;\n\n  constructor(private http: HttpClient,\n\n  ) { }\n\n\n  getVideoCallPetition(_addressDetail: any): Observable<any> {\n    let url = environment.API_URL + 'VideoCall/Petition';\n    let params = {\n      Type: _addressDetail.ServiceType,\n      Document: _addressDetail.PatientDocument,\n      DocumentType: _addressDetail.PatientDocumentType,\n      Country: _addressDetail.Country,\n      Department: _addressDetail.DepartmentId,\n      City: _addressDetail.CityId,\n      Neighborhood: _addressDetail.NeighborhoodId,\n      Street: this.country === \"co\" ? _addressDetail.StreetSO : _addressDetail.Street,\n      // NumberStreet: _addressDetail.DoorNumber,\n      NumberStreet: \"\",\n      Bis: _addressDetail.Bis,\n      Apto: _addressDetail.Apartment,\n      // Corner: _addressDetail.Corner,\n      Corner: \"\",\n      Reference: `${_addressDetail.Apartment} ${_addressDetail.AddressDetails}`,\n      Latitude: _addressDetail.Latitude,\n      longitude: _addressDetail.Longitude,\n      Cellphone: _addressDetail.IsContactNumber === true ? _addressDetail.ApplicantCellPhone : _addressDetail.PatientCellPhone,\n      CoverageZona: _addressDetail.Coverage\n    }\n\n    return this.http.post(url, params);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}