{"version":3,"file":"src_app_public_public_module_ts.js","mappings":"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","sources":["./src/app/public/components/onboarding-carousel/onboarding-carousel.component.ts","./src/app/public/components/onboarding-header/onboarding-header.component.ts","./src/app/public/models/entities/answer.ts","./src/app/public/models/entities/setPassword.ts","./src/app/public/models/enums/answer-type.ts","./src/app/public/models/enums/status-code-register.ts","./src/app/public/models/requests/data-life-account-verification.ts","./src/app/public/models/requests/new-forgot-password.ts","./src/app/public/models/requests/pre-register-request.ts","./src/app/public/models/requests/security-question-request.ts","./src/app/public/models/requests/usefulphones-request.ts","./src/app/public/models/requests/verify-code-request.ts","./src/app/public/public-routing.module.ts","./src/app/public/public.module.ts","./src/app/public/sections/account-create/account-create.page.ts","./src/app/public/sections/account-create/account-verification/account-verification.page.ts","./src/app/public/sections/account-create/account-verification/components/security-question/security-question.page.ts","./src/app/public/sections/account-create/data-complete/data-complete.page.ts","./src/app/public/sections/account-create/register-password/register-password.page.ts","./src/app/public/sections/login/ini-sesion/ini-sesion.page.ts","./src/app/public/sections/onboarding/onboarding.page.ts","./src/app/public/sections/password/recover-password-mail-phone/recover-password-mail-phone.page.ts","./src/app/public/sections/password/recover-password-mail/recover-password-mail.page.ts","./src/app/public/sections/password/recover-password-phone/recover-password-phone.page.ts","./src/app/public/sections/password/remember-password-code/remember-password-code.page.ts","./src/app/public/sections/password/remember-password/remember-password.page.ts","./src/app/public/sections/terms/terms.page.ts","./src/app/public/sections/useful-phones/list-phones/list-phones.component.ts","./src/app/public/sections/useful-phones/option-city/option-city.component.ts","./src/app/public/sections/welcome/welcome.page.ts","./src/app/public/services/fake-answer.service.ts","./src/app/public/services/login.service.ts","./src/app/public/services/new-forgot-password.service.ts","./src/app/public/services/register.service.ts","./src/app/public/services/security-question.service.ts","./src/app/public/services/useful-phones.services.ts","./node_modules/angular-code-input/__ivy_ngcc__/fesm2015/angular-code-input.js"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IonSlides } from '@ionic/angular';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-onboarding-carousel',\n  templateUrl: './onboarding-carousel.component.html',\n  styleUrls: ['./onboarding-carousel.component.scss'],\n})\nexport class OnboardingCarouselComponent implements OnInit {\n  slides: any = []\n  imgRoute: string;\n  environment: any;\n  indexSlide: number;\n  @ViewChild('slide') mySlide: IonSlides;\n\n  slideOpts = {\n    allowTouchMove: false,\n    initialSlide: 0,\n    speed: 400\n  };\n\n  constructor(\n    private router: Router\n    ) {\n      this.environment = environment;\n      this.imgRoute = environment.imagesRoute;\n    }\n\n  ngOnInit() {\n    this.indexSlide = 0;\n    environment.country === 'co' ? this.slides = this.co : this.slides = this.uy;\n  }\n\n  moveSlide(position: number) {\n    this.mySlide.getActiveIndex().then(index => {\n      if (position > 0 && index+1 != this.slides.length || position < 0) {\n        if (position > 0) {\n          this.indexSlide = index+1\n          this.mySlide.slideNext()\n        }\n        else{\n          this.indexSlide = index-1;\n          this.mySlide.slidePrev();\n        }\n      }\n    });\n  }\n\n  co = [\n    {\n      title: 'Solicita servicio médico',\n      description: 'Pide atención médica en tu domicilio cuando lo necesites.',\n      image: `${environment.imagesRoute}onboarding-1.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-1.svg`\n    },\n    {\n      title: 'Videoconsulta',\n      description: 'Haz una videoconsulta o chatea con tu médico para resolver inquietudes y solicitar la lectura de tus exámenes de laboratorio.',\n      image: `${environment.imagesRoute}onboarding-2.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-2.svg`\n    },\n    {\n      title: 'Accede a tu historia clínica',\n      description: 'Conoce tu historial de servicios médicos con nosotros y descarga fácilmente tu historia clínica.',\n      image: `${environment.imagesRoute}onboarding-3.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-3.svg`\n    },\n    {\n      title: 'Emi especialistas',\n      description: 'Agenda en tiempo real citas con los especialistas de nuestra red de aliados.',\n      image: `${environment.imagesRoute}onboarding-4.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-4.svg`\n    }\n  ]\n  uy = [\n    {\n      title: 'Solicita servicio médico',\n      description: 'Pide atención médica en tu domicilio cuando lo necesites.',\n      image: `${environment.imagesRoute}onboarding-1.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-1.svg`\n    },\n    {\n      title: 'Videoconsulta',\n      description: 'Haz una videoconsulta o chatea con tu médico para resolver inquietudes y solicitar la lectura de tus exámenes de laboratorio.',\n      image: `${environment.imagesRoute}onboarding-2.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-2.svg`\n    },\n    {\n      title: 'Accede a tu historia clínica',\n      description: 'Conoce tu historial de servicios médicos con nosotros y descarga fácilmente tu historia clínica.',\n      image: `${environment.imagesRoute}onboarding-3.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-3.svg`\n    },\n    {\n      title: 'Centros Médicos ucm',\n      description: 'Agenda en tiempo real citas con especialistas en nuestros Centros Médicos y Clínicas.',\n      image: `${environment.imagesRoute}onboarding-4.png`,\n      icon: `${environment.imagesRoute}icons/icon-onboarding-4.svg`\n    }\n  ];\n\n  navigate() {\n    this.router.navigate(['onboarding/welcome']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-onboarding-header',\n  templateUrl: './onboarding-header.component.html',\n  styleUrls: ['./onboarding-header.component.scss'],\n})\nexport class OnboardingHeaderComponent implements OnInit {\n  imgRoute: string;\n\n  constructor(private router: Router) {\n    this.imgRoute = environment.imagesRoute;\n  }\n\n  ngOnInit() { }\n\n  navigate() {\n    this.router.navigate(['onboarding/welcome']);\n  }\n}\n","export class Answer {\n    Answer: string;\n    IsSelected: boolean;\n    GroupName: any;\n}","export class SetPassword {\n    Email : string;\n    Code: string;\n    NewPassword: string;\n    ConfirmPassword: string;\n  }\n  ","export enum AnswerType {\n    Date = 1,\n    Name = 2,\n    Address = 3,\n    Phone = 4,\n    Email= 5\n}","export enum StatusCodeRegister {\n    InvalidEmail = 14,\n    SuccessfulLoad = 0,\n    NotAffiliated = 6,\n    ExistingUser = 11,\n    InactiveUser = 7,\n  }\n  ","export class DataLifeAccountVerificationRequest {\n    DocumentType: string;\n    Document: string;\n    Email: string;\n    PhoneNumber: string;\n  }","export class NewForgotPassword {\n    User: string;\n   }\n   ","export class PreRegisterRequest {\n    DocumentType: string;\n    Document: string;\n    Email: string;\n    ConfirmEmail: string;\n    TermsAndConditions: boolean\n}","export class SecurityQuestionRequest {\n    DocumentType : string;\n    Document: string;\n}","export class UserFulPhonesRequest{\n    Latitude: string;\n    Longitude: string;\n}","export class VerifyCodeRequest {\n    user: string;\n    Code: string;\n   }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IniSesionPage } from './sections/login/ini-sesion/ini-sesion.page';\nimport { OnboardingPage } from './sections/onboarding/onboarding.page';\nimport { WelcomePage } from './sections/welcome/welcome.page';\nimport { RememberPasswordPage } from './sections/password/remember-password/remember-password.page';\nimport { RememberPasswordCodePage } from './sections/password/remember-password-code/remember-password-code.page';\nimport { RecoverPasswordMailPage } from './sections/password/recover-password-mail/recover-password-mail.page';\nimport { RecoverPasswordMailPhonePage } from './sections/password/recover-password-mail-phone/recover-password-mail-phone.page';\nimport { RecoverPasswordPhonePage } from './sections/password/recover-password-phone/recover-password-phone.page';\nimport { HaveBeLoggedInGuard } from '../core/guard/have-be-logged-in.guard';\nimport { AccountCreatePage } from './sections/account-create/account-create.page';\nimport { RegisterPasswordPage } from './sections/account-create/register-password/register-password.page';\nimport { DataCompletePage } from './sections/account-create/data-complete/data-complete.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [HaveBeLoggedInGuard],\n    component: OnboardingPage\n  },\n  {\n    path: 'welcome',\n    component: WelcomePage\n  },\n  {\n    path: 'ini-sesion',\n    component: IniSesionPage\n  },\n  {\n    path: 'remember-password',\n    component: RememberPasswordPage\n  },\n  {\n    path: 'remember-password-code',\n    component: RememberPasswordCodePage\n  },\n  {\n    path: 'recover-password-mail',\n    component: RecoverPasswordMailPage\n  },\n  {\n    path: 'recover-password-mail-phone',\n    component: RecoverPasswordMailPhonePage\n  },\n  {\n    path: 'recover-password-phone',\n    component: RecoverPasswordPhonePage\n  },\n  {\n    path: 'account-create',\n    component: AccountCreatePage\n  },\n  {\n    path: 'register-password',\n    component: RegisterPasswordPage\n  },\n  {\n    path: 'data-complete',\n    component: DataCompletePage\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PublicRoutingModule { }\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PublicRoutingModule } from './public-routing.module';\nimport { OnboardingPage } from './sections/onboarding/onboarding.page';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../shared/shared.module';\nimport { OnboardingHeaderComponent } from './components/onboarding-header/onboarding-header.component';\nimport { OnboardingCarouselComponent } from './components/onboarding-carousel/onboarding-carousel.component';\nimport { WelcomePage } from './sections/welcome/welcome.page';\nimport { IniSesionPage } from './sections/login/ini-sesion/ini-sesion.page';\nimport { RememberPasswordPage } from './sections/password/remember-password/remember-password.page';\nimport { RememberPasswordCodePage } from './sections/password/remember-password-code/remember-password-code.page';\nimport { RecoverPasswordMailPage } from './sections/password/recover-password-mail/recover-password-mail.page';\nimport { RecoverPasswordMailPhonePage } from './sections/password/recover-password-mail-phone/recover-password-mail-phone.page';\nimport { RecoverPasswordPhonePage } from './sections/password/recover-password-phone/recover-password-phone.page';\nimport { OptionCityComponent } from './sections/useful-phones/option-city/option-city.component';\nimport { ListPhonesComponent } from './sections/useful-phones/list-phones/list-phones.component';\nimport { CodeInputModule } from 'angular-code-input';\nimport { RouterModule } from '@angular/router';\nimport { AccountCreatePage } from './sections/account-create/account-create.page';\nimport { AccountVerificationPage } from './sections/account-create/account-verification/account-verification.page';\nimport { DataCompletePage } from './sections/account-create/data-complete/data-complete.page';\nimport { RegisterPasswordPage } from './sections/account-create/register-password/register-password.page';\nimport { TermsPage } from './sections/terms/terms.page';\nimport { SecurityQuestionPage } from './sections/account-create/account-verification/components/security-question/security-question.page';\n\n@NgModule({\n  declarations: [\n    OnboardingPage,\n    OnboardingCarouselComponent,\n    OnboardingHeaderComponent,\n    WelcomePage,\n    IniSesionPage,\n    RememberPasswordPage,\n    RememberPasswordCodePage,\n    RecoverPasswordMailPage,\n    RecoverPasswordMailPhonePage,\n    RecoverPasswordPhonePage,\n    OptionCityComponent,\n    ListPhonesComponent,\n    AccountCreatePage,\n    AccountVerificationPage,\n    DataCompletePage,\n    RegisterPasswordPage,\n    TermsPage,\n    SecurityQuestionPage\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    PublicRoutingModule,\n    SharedModule,\n    CodeInputModule,\n    RouterModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class PublicModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { EmailConfirmValidator, ValidatorCheckBox, ValidatorStartCellPhoneNumber } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { CommonMiddService } from 'src/app/shared/services/common-midd.service';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../../models/entities/user';\nimport { StatusCodeRegister } from '../../models/enums/status-code-register';\nimport { DataLifeAccountVerificationRequest } from '../../models/requests/data-life-account-verification';\nimport { DocumentValidationRequest } from '../../models/requests/document-validation-request';\nimport { PreRegisterRequest } from '../../models/requests/pre-register-request';\nimport { SecurityQuestionRequest } from '../../models/requests/security-question-request';\nimport { DocumentService } from '../../services/document.service';\nimport { RegisterService } from '../../services/register.service';\nimport { SecurityQuestionService } from '../../services/security-question.service';\nimport { DocumentType } from 'src/app/public/models/entities/document-type';\nimport { TermsPage } from '../terms/terms.page';\n\n@Component({\n  selector: 'app-account-create',\n  templateUrl: './account-create.page.html',\n  styleUrls: ['./account-create.page.scss'],\n})\nexport class AccountCreatePage implements OnInit {\n  \n  configurationButton = new ButtonConfiguration();\n  createForm: FormGroup;\n  environment: any;\n  docType: Array<DocumentType>;\n  continueText: string;\n  user = new User();\n  answerCorrectRequired = 3;\n  isLoading: boolean;\n\n  bsModalRef?: BsModalRef;\n  logoSource: string;\n  tagCode: string;\n  tagCodes: string;\n  @Input() parentForm: string;\n  imgRoute: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private documentService: DocumentService,\n    private translate: TranslateService,\n    private registerService: RegisterService,\n    private urlDataService: UrlDataService,\n    private router: Router,\n    public modalService: BsModalService,\n    private securityQuestionService: SecurityQuestionService,\n    private commonMiddService: CommonMiddService\n  ) {\n    this.isLoading = true;\n    this.environment = environment;\n    this.translate.get('PUBLIC.SHARED.continue').subscribe((resp) => {\n      this.continueText = resp;\n    });\n\n    this.configurationButton.buttonType = ButtonType.Primary;\n    this.configurationButton.text = this.continueText;\n    this.imgRoute = environment.imagesRoute;\n\n    this.createForm = this.fb.group({\n      documentType: ['', Validators.required],\n      document: [{ value: '', disabled: true }, Validators.required],\n      phone: ['', [Validators.required, ValidatorStartCellPhoneNumber]],\n      email: ['', [Validators.required, Validators.email]],\n      emailRepeat: ['', [Validators.required, EmailConfirmValidator('email')]],\n      terms: ['', ValidatorCheckBox],\n    });\n  }\n\n  ngOnInit() {\n    this.getDocumentType();\n  }\n\n  getDocumentType() {\n    this.documentService.getAll().subscribe((resp) => {\n      if (resp) {\n        this.docType = resp;\n      }\n    });\n    this.isLoading = false;\n  }\n\n  complete() {\n    this.isLoading = true;\n    this.setUser();\n    this.preRegister();\n  }\n\n  setUser() {\n    this.user.TypeDocument = this.createForm.controls.documentType.value;\n    this.user.IdDocument = this.createForm.controls.document.value;\n    this.user.Email = this.createForm.controls.email.value;\n    this.user.RepeatEmail = this.createForm.controls.emailRepeat.value;\n    this.user.TermsAndConditions = this.createForm.controls.terms.value;\n  }\n\n  preRegister() {\n    let preRegister = new PreRegisterRequest();\n    preRegister.DocumentType = this.user.TypeDocument;\n    preRegister.Document = this.user.IdDocument;\n    preRegister.Email = this.user.Email;\n    preRegister.ConfirmEmail = this.user.RepeatEmail;\n    preRegister.TermsAndConditions = this.user.TermsAndConditions;\n\n    this.registerService.preRegister(preRegister).subscribe((resp) => {\n      //Flujo es afiliado pero no coincide el correo.\n      if (resp.StatusCode === StatusCodeRegister.InvalidEmail) {\n        //14\n        let userCopy;\n        this.urlDataService.User = Object.assign(this.user, userCopy);\n        this.associateEmail(resp);\n\n        this.validateAccountVerification().subscribe((resp) => {\n          resp\n            ? this.goToAccountVerification(this.answerCorrectRequired)\n            : this.router.navigate(['/welcome/data-complete']);\n        });\n      } else if (resp.StatusCode === StatusCodeRegister.ExistingUser) {\n        //11\n        this.isLoading = false;\n        this.showErrorExistingUser(resp.Message);\n      } else if (resp.StatusCode === StatusCodeRegister.InactiveUser) {\n        //7\n        this.isLoading = false;\n        this.showErrorInactiveUser(resp.Message);\n      } else if (resp.StatusCode === StatusCodeRegister.SuccessfulLoad) {\n        //0\n        this.user.UpdateEmail = 'false';\n        this.user.Affiliate = resp.UserNames.Afiliate;\n        this.user.DataLoaded = resp.UserNames.DataLoaded;\n        this.user.FailedVenko = resp.UserNames.CanModifyNames;\n        //Encuentra datos PLS o Registraduria(col)\n        if (resp.UserNames.DataLoaded === true) {\n          this.user.NameOne = resp.UserNames.FirstName;\n          this.user.NameTwo = resp.UserNames.SecondName;\n          this.user.LastNameOne = resp.UserNames.FirstSurname;\n          this.user.LastNameTwo = resp.UserNames.SecondSurname;\n          this.user.CellPhone = this.createForm.controls.phone.value;\n          //this.router.navigate(['/completeRegisterCreate'], { queryParams: this.user, skipLocationChange: false });\n\n          let userCopy;\n          this.urlDataService.User = Object.assign(this.user, userCopy);\n          this.validateAccountVerification().subscribe((resp) => {\n            resp\n              ? this.goToAccountVerification(this.answerCorrectRequired)\n              : this.router.navigate(['/welcome/data-complete']);\n          });\n        } else {\n          this.user.CellPhone = this.createForm.controls.phone.value;\n\n          let userCopy;\n          this.urlDataService.User = Object.assign(this.user, userCopy);\n          this.validateAccountVerification().subscribe((resp) => {\n            resp\n              ? this.goToAccountVerification(this.answerCorrectRequired)\n              : this.router.navigate(['/welcome/data-complete']);\n          });\n        }\n      } else {\n        this.isLoading = false;\n        this.showErrorNotificationModal(resp.Message);\n      }\n    });\n  }\n\n  showErrorNotificationModal(msg: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Hubo un problema',\n        description: msg,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1,\n    };\n    this.bsModalRef = this.modalService.show(InformativeModalComponent,initialState);\n  }\n\n  showErrorExistingUser(msg: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Hubo un problema',\n        description: msg,\n        onlyButtonConfirm: true,\n        textButton: 'Recordar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1,\n    };\n    this.bsModalRef = this.modalService.show(\n      InformativeModalComponent,\n      initialState\n    );\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/welcome/remember-password']);\n    });\n  }\n\n  showErrorInactiveUser(msg: string) {\n    const customMessage =\n      'Hemos detectado que ese correo ya esta en uso para una cuenta inactiva. ' +\n      msg;\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Usuario Inactivo',\n        description: customMessage,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1,\n    };\n    this.bsModalRef = this.modalService.show(\n      InformativeModalComponent,\n      initialState\n    );\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/welcome/ini-sesion']);\n    });\n  }\n\n  associateEmail(resp: any) {\n    this.user.DataLoaded = resp.UserNames.DataLoaded;\n    this.user.Affiliate = resp.UserNames.Afiliate;\n    this.user.NameOne = resp.UserNames.FirstName;\n    this.user.NameTwo = resp.UserNames.SecondName;\n    this.user.LastNameOne = resp.UserNames.FirstSurname;\n    this.user.LastNameTwo = resp.UserNames.SecondSurname;\n    this.user.FailedVenko = resp.UserNames.CanModifyNames;\n\n    //Deberá redirigir a una pagina para asociar el correo. Envia sms para validación.\n    //this.router.navigate(['/registerCellPhoneCreate'], { queryParams: this.user, skipLocationChange: false });\n  }\n\n  validateAccountVerification(): Observable<boolean> {\n    let request = new DataLifeAccountVerificationRequest();\n    request.Document = this.user.IdDocument;\n    request.DocumentType = this.user.TypeDocument;\n    request.Email = this.user.Email;\n    request.PhoneNumber = this.createForm.controls.phone.value;\n\n    return new Observable((obj) => {\n      this.registerService.getAccountVerification(request).subscribe(\n        (resp) => {\n          obj.next(resp.RequiredAccountVerification);\n        },\n        (err) => obj.next(false)\n      );\n    });\n  }\n\n  goToAccountVerification(answerCorrectRequired: number) {\n    let respuestas = 0;\n    let request = new SecurityQuestionRequest();\n    request.DocumentType = this.user.TypeDocument;\n    request.Document = this.user.IdDocument;\n\n    this.securityQuestionService.getSecurityQuestion(request).subscribe(\n      (resp) => {\n        this.isLoading = false;\n        if (resp) {\n          resp.SQuestions.forEach((item) => {\n            if (item.Answer !== '') respuestas++;\n          });\n          if (respuestas >= answerCorrectRequired) {\n            //si requestAnswerQuestion == 0 dejo que avance, de lo contrario sale mensaje.\n            if (answerCorrectRequired === 0) {\n              this.navigateToDataComplete();\n            } else {\n              let squestion;\n              this.urlDataService.SecurityQuestions = Object.assign(\n                resp.SQuestions,\n                squestion\n              );\n              this.navigateToAccountVerification();\n            }\n          } else {\n            this.navigateToDataComplete();\n          }\n        }\n      },\n      (error) => {\n        this.isLoading = false;\n        if (error) {\n        }\n      }\n    );\n  }\n\n  navigateToAccountVerification() {\n    this.router.navigate(['/welcome/account-verification']);\n  }\n\n  navigateToDataComplete() {\n    this.router.navigate(['/welcome/data-complete']);\n  }\n\n  onlyNumber(event: any): boolean {\n    return this.onlyNumber(event);\n  }\n\n  clickTerms(tagCode: string) {\n    if (tagCode === 'terms') {\n      this.tagCodes = this.parentForm === 'specialists' ? 'TYCE' : 'TYCC';\n    } else {\n      let roleType = localStorage.getItem('roleType');\n      this.tagCodes = roleType != '2' ? 'PPC' : 'PPE';\n    }\n\n    const initialState: ModalOptions = {\n      initialState: {\n        document: this.tagCodes,\n      },\n      class: 'modal-dialog-centered modal-rounded-term',\n      id: 2,\n    };\n    this.bsModalRef = this.modalService.show(TermsPage, initialState);\n  }\n\n  validateDocument() {\n    if (this.createForm.controls.document.value != '') {\n      let request = new DocumentValidationRequest();\n      request.DocumentType = this.createForm.controls.documentType.value;\n      request.Document = this.createForm.controls.document.value;\n\n      this.commonMiddService.validateDocument(request).subscribe((resp) => {\n        if (resp.StatusCode != 0) {\n          this.showErrorNotificationModal(resp.Message);\n          this.createForm.controls.document.setValue('');\n        }\n      });\n    }\n  }\n\n  enabledInputDocument() {\n    this.createForm.controls['document'].enable();\n    this.createForm.controls.document.value != '' ? this.validateDocument() : '';\n  }\n\n}\nfunction TermsComponent(TermsComponent: any, initialState: ModalOptions<Record<string, unknown>>): BsModalRef<any> {\n  throw new Error('Function not implemented.');\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\nimport { SecurityQuestion } from 'src/app/public/models/entities/security-question';\nimport { SecurityQuestions } from 'src/app/public/models/entities/security-questions';\nimport { SecurityQuestionRequest } from 'src/app/public/models/requests/security-question-request';\nimport { SecurityQuestionService } from 'src/app/public/services/security-question.service';\n\n@Component({\n  selector: 'app-account-verification',\n  templateUrl: './account-verification.page.html',\n  styleUrls: ['./account-verification.page.scss'],\n})\nexport class AccountVerificationPage implements OnInit {\n\n  configurationButton = new ButtonConfiguration();\n  bsModalRef: BsModalRef;\n  securityQuestions: Array<SecurityQuestion>;\n  continueText: string;\n  currentElement = 0;\n  answerCorrectRequired = 3;\n  waitingAnswer = true;\n  imgRoute: string;\n\n  constructor(\n    private securityQuestionService: SecurityQuestionService,\n    private translate: TranslateService,\n    private bsModalService: BsModalService,\n    private urlDataService: UrlDataService,\n    private router: Router\n  ) {\n    this.imgRoute = environment.imagesRoute;\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n    this.configurationButton.buttonType = ButtonType.Primary;\n    this.configurationButton.text = this.continueText;\n   }\n\n  ngOnInit() {\n    this.loadQuestions();\n  }\n\n  loadQuestions() {\n    if (this.urlDataService.SecurityQuestions) {\n      this.urlDataService.SecurityQuestions.forEach((element: any) => {\n        element.Answer = element.Answer.toUpperCase();\n      });\n      this.securityQuestions = this.urlDataService.SecurityQuestions.filter((q: any) => q.Answer !== \"\");\n    }\n    else {\n      this.showMissingQuestionsError();\n    }\n  }\n\n  // loadQuestions() {\n  //   let request = new SecurityQuestionRequest();\n  //   request.Document = \"38944826\";\n  //   request.DocumentType = \"1\";\n  //   this.securityQuestionService.getSecurityQuestion(request)\n  //     .subscribe(data => {\n  //       if (data) {\n  //         data.SQuestions.forEach(element => {\n  //           element.Answer = element.Answer.toUpperCase();\n  //         });\n  //         this.securityQuestions = data;\n  //       }\n  //     });\n  // }\n\n  answerSelected(event: SecurityQuestion) {\n    this.securityQuestions\n      .filter((x: any) => x.Question === event.Question)\n      .map((y: any) => {\n        y.CorrectValidationAnswer = event.CorrectValidationAnswer;\n        y.FalseAnswers = event.FalseAnswers;\n        y.SelectedAnswer = event.SelectedAnswer;\n      });\n    this.waitingAnswer = false;\n  }\n\n  complete() {\n    this.currentElement++;\n    if (!this.securityQuestions[this.currentElement]?.SelectedAnswer || this.securityQuestions[this.currentElement]?.SelectedAnswer == \"\")\n      this.waitingAnswer = true;\n    if (this.currentElement == this.securityQuestions.length) {\n      this.showCorrectOrIncorrectAnswerModal(this.correctAnswer());\n    }\n  }\n\n  showCorrectOrIncorrectAnswerModal(correct: boolean) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: correct ? 'alert-check.svg' : 'alert-circle.svg',\n        subTitle: correct ? 'Respuestas correctas' : 'Respuestas incorrectas',\n        description: correct ? 'Puede continuar con el proceso de registro' : 'Por favor, póngase en contacto con un asistente de servicio al cliente para continuar con el registro',\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.bsModalService.show(InformativeModalComponent, initialState);\n    if (correct) {\n      this.bsModalRef.content.onClose.subscribe(() => {\n        this.router.navigate(['/welcome/data-complete']);\n      });\n    } else {\n      this.bsModalRef.content.onClose.subscribe(() => {\n        this.router.navigate(['/welcome/ini-sesion']);\n      });\n    }\n  }\n\n  showMissingQuestionsError() {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Hubo un problema',\n        description: 'Por favor, póngase en contacto con un asistente de servicio al cliente para continuar con el registro',\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.bsModalService.show(InformativeModalComponent, initialState);\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/welcome']);\n    });\n  }\n\n  correctAnswer() {\n    let i = 0;\n    this.securityQuestions.forEach((element: any) => {\n      if (element.SelectedAnswer === element.Answer)\n        i++;\n    });\n    if (i >= this.answerCorrectRequired)\n      return true;\n    else return false;\n  }\n\n  goToPreviousQuestion() {\n    this.waitingAnswer = false;\n    this.currentElement--;\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SecurityQuestion } from 'src/app/public/models/entities/security-question';\nimport { FakeAnswerService } from 'src/app/public/services/fake-answer.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-security-question',\n  templateUrl: './security-question.page.html',\n  styleUrls: ['./security-question.page.scss'],\n})\nexport class SecurityQuestionPage implements OnInit {\n\n  @Input() securityQuestion : SecurityQuestion;\n  @Output() onClick = new EventEmitter<SecurityQuestion>();\n  securityQuestions: Array<SecurityQuestion>;\n  imgRoute: string;\n  \n  constructor(\n    private fakeAnswerService: FakeAnswerService\n  ) {\n    this.imgRoute = environment.imagesRoute;\n   }\n\n  ngOnInit() {\n    this.generateAnswer();\n  }\n\n  private generateAnswer() {\n    this.securityQuestions = new Array<SecurityQuestion>();\n      if (this.securityQuestion.SelectedAnswer === \"\" || !this.securityQuestion.SelectedAnswer) {\n        this.securityQuestion.FalseAnswers = this.fakeAnswerService.GetAnswerById(4, this.securityQuestion.AnswerType, this.securityQuestion.Answer);\n        this.securityQuestion.SelectedAnswer = \"\";\n        this.securityQuestion.CorrectValidationAnswer = false;\n      }\n  }\n  \n  onClickAnswer() {\n    this.onClick.emit(this.securityQuestion);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { City } from 'src/app/public/models/entities/city';\nimport { Departament } from 'src/app/public/models/entities/departament';\nimport { Gender } from 'src/app/public/models/entities/gender';\nimport { User } from 'src/app/public/models/entities/user';\nimport { PersonService } from 'src/app/public/services/person.service';\nimport { PlaceService } from 'src/app/public/services/place.service';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ValidatorStartCellPhoneNumber, ValidatorStartPhoneNumber } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-data-complete',\n  templateUrl: './data-complete.page.html',\n  styleUrls: ['./data-complete.page.scss'],\n})\nexport class DataCompletePage implements OnInit {\n\n  configurationButton = new ButtonConfiguration();\n  form: FormGroup;\n  environment: any;\n  gender: Array<Gender>;\n  departament: Array<Departament>;\n  cities: Array<City>;\n  maxDate = new Date();\n  max: Date;\n  minDate = {\n    year: this.maxDate.getUTCFullYear() - environment.adultAge,\n    month: this.maxDate.getUTCMonth(),\n    day: this.maxDate.getUTCDate()\n  }\n  continueText: string;\n  user: User;\n  imgRoute: string;\n  \n  constructor(\n    private fb: FormBuilder,\n    private personService: PersonService,\n    private placeService: PlaceService,\n    private translate: TranslateService,\n    private urlDataService: UrlDataService,\n    private router: Router\n  ) { \n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });\n\n    this.environment = environment;\n    this.max = new Date(this.minDate.year, this.minDate.month, this.minDate.day);\n    this.configurationButton.buttonType = ButtonType.Primary;\n    this.configurationButton.text = this.continueText;\n    this.loadUser();\n\n    this.imgRoute = environment.imagesRoute;\n\n    this.form = this.fb.group({\n      firstName: [{ value: '', disabled: !this.user.FailedVenko }, [Validators.required, Validators.pattern('^[a-zA-Z \\-\\']+')]],\n      secondName: [{ value: '', disabled: !this.user.FailedVenko }, Validators.pattern('^[a-zA-Z \\-\\']+')],\n      firstLastName: [{ value: '', disabled: !this.user.FailedVenko }, [Validators.required, Validators.pattern('^[a-zA-Z \\-\\']+')]],\n      secondLastName: [{ value: '', disabled: !this.user.FailedVenko }, Validators.pattern('^[a-zA-Z \\-\\']+')],\n      departament: ['', Validators.required],\n      city: ['', Validators.required],\n      gender: ['', Validators.required],\n      date: ['', Validators.required],\n      cellPhone: ['', [Validators.required, ValidatorStartCellPhoneNumber]],\n      phone: ['', ValidatorStartPhoneNumber],\n    })\n  }\n\n  ngOnInit() {\n    this.getGender();\n    this.getDepartament();\n    this.loadUser();\n    this.setInitialFormUserValue();\n  }\n\n  onlyNumber(event: any): boolean {\n    return this.onlyNumber(event);\n  }\n\n  getGender() {\n    this.personService.getGender().subscribe(resp => {\n      if (resp) {\n        this.gender = resp;\n      }\n    })\n  }\n\n  getDepartament() {\n    this.placeService.getDepartaments().subscribe(resp => {\n      if (resp) {\n        this.departament = resp;\n      }\n    })\n  }\n\n  getCities(codeDepartment: string) {\n    this.placeService.getCities(codeDepartment).subscribe(resp => {\n      if (resp) {\n        this.cities = resp;\n      }\n    })\n  }\n\n  loadUser() {\n    this.user = this.urlDataService.User;\n    if (!this.user) this.router.navigate(['welcome'], { replaceUrl: true });\n  }\n\n  onChangeDepartment() {\n    this.getCities(this.form.controls.departament.value);\n  }\n\n  complete() {\n    this.setUserValue();\n    this.goToRegisterPassword();\n  }\n\n  setInitialFormUserValue() {\n    (this.user.NameOne) ? this.form.controls.firstName.setValue(this.user.NameOne) : '';\n    (this.user.NameTwo) ? this.form.controls.secondName.setValue(this.user.NameTwo) : '';\n    (this.user.LastNameOne) ? this.form.controls.firstLastName.setValue(this.user.LastNameOne) : '';\n    (this.user.LastNameTwo) ? this.form.controls.secondLastName.setValue(this.user.LastNameTwo) : '';\n    (this.user.Department) ? this.form.controls.departament.setValue(this.user.Department) : '';\n    (this.user.City) ? this.form.controls.city.setValue(this.user.City) : '';\n    (this.user.Gender) ? this.form.controls.gender.setValue(this.user.Gender) : '';\n    (this.user.CellPhone) ? this.form.controls.cellPhone.setValue(this.user.CellPhone) : '';\n    (this.user.PhoneNumber) ? this.form.controls.phone.setValue(this.user.PhoneNumber) : '';\n  }\n\n  setUserValue() {\n    this.user.NameOne = this.form.controls.firstName.value;\n    this.user.NameTwo = this.form.controls.secondName.value;\n    this.user.LastNameOne = this.form.controls.firstLastName.value;\n    this.user.LastNameTwo = this.form.controls.secondLastName.value;\n    this.user.Department = this.form.controls.departament.value;\n    this.user.City = this.form.controls.city.value;\n    this.user.Gender = this.form.controls.gender.value;\n    this.user.CellPhone = this.form.controls.cellPhone.value;\n    this.user.PhoneNumber = this.form.controls.phone.value;\n    this.user.Birthdate = this.form.controls.date.value;\n  }\n\n  goToRegisterPassword() {\n    this.urlDataService.User = this.user;\n    this.router.navigate(['/welcome/register-password']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/public/models/entities/user';\nimport { RegisterService } from 'src/app/public/services/register.service';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { Regex } from 'src/app/shared/helpers/regex';\nimport { EmailEqualsValidator } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-register-password',\n  templateUrl: './register-password.page.html',\n  styleUrls: ['./register-password.page.scss'],\n})\nexport class RegisterPasswordPage implements OnInit {\n\n  formPassword: FormGroup;\n  configurationButton = new ButtonConfiguration();\n  bsModalRef: BsModalRef;\n  continueText: string;\n  regex = Regex;\n  user: User;\n  hide = true;\n  hideC = true;\n  imgRoute: any;\n\n  constructor(\n    private bsModalService: BsModalService,\n    private fb: FormBuilder,\n    private translate: TranslateService,\n    private registerService: RegisterService,\n    private urlDataService: UrlDataService,\n    private router: Router\n  ) {\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n\n    this.configurationButton.buttonType = ButtonType.Primary;\n    this.configurationButton.text = this.continueText;\n\n    this.imgRoute = environment.imagesRoute;\n\n    this.formPassword = this.fb.group({\n      password: ['', [Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(this.regex.min1Number),\n        Validators.pattern(this.regex.specialCharacter),\n        Validators.pattern(this.regex.upperCaseCharacter)]],\n      passwordConfirm: ['', [Validators.required, EmailEqualsValidator('password')]]\n    })\n   }\n\n   ngOnInit(): void {\n    this.loadUser()\n  }\n\n  loadUser() {\n    this.user = this.urlDataService.User;\n    if (!this.user) this.router.navigate(['welcome'], { replaceUrl: true });\n  }\n\n  showErroResponse(msg: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Hubo un problema',\n        description: msg,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.bsModalService.show(InformativeModalComponent, initialState);\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/welcome/ini-sesion']);\n    });\n  }\n\n  showSuccessResponse(msg: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-check.svg',\n        subTitle: 'Registro exitoso',\n        description: msg,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.bsModalService.show(InformativeModalComponent, initialState);\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/welcome/ini-sesion']);\n    });\n  }\n\n  saveUser() {\n    this.user.Password = this.formPassword.controls.password.value;\n    this.user.ConfirmPassword = this.formPassword.controls.passwordConfirm.value;\n    this.registerService.saveUser(this.user).subscribe(resp => {\n      if (resp.StatusCore == 0) {\n        this.showSuccessResponse(resp.Message);\n      }\n      else {\n        this.showErroResponse(resp.Message);\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoginService } from 'src/app/public/services/login.service';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { environment } from 'src/environments/environment';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { SentryHandelError } from 'src/app/shared/services/sentry.handelerror';\nimport { AvailableResult, BiometryType, Credentials, NativeBiometric } from 'capacitor-native-biometric-auth';\n\n@Component({\n  selector: 'app-ini-sesion',\n  templateUrl: './ini-sesion.page.html',\n  styleUrls: ['./ini-sesion.page.scss'],\n})\n\nexport class IniSesionPage implements OnInit {\n\n  profileSnapshot: string | null;\n  ingresarButton = new ButtonConfiguration();\n  loginForm: FormGroup;\n  environment: any;\n  continueText: string;\n  bsModalRef: BsModalRef;\n  profile: string;\n  isLoading: boolean;\n  imgRoute: string;\n  email: string ;\n  password: string ;\n  passwordUser: string\n\n  constructor(\n    private bsModalService: BsModalService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private translate: TranslateService,\n    private sentry: SentryHandelError\n  ) {\n    this.environment = environment;\n    this.imgRoute = environment.imagesRoute;\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n    this.ingresarButton.buttonType = ButtonType.Primary;\n    this.ingresarButton.text = this.continueText;\n    this.ingresarButton.fontsSize = \"20px\";\n    this.ingresarButton.width = \"250px\";\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    })\n\n   }\n\n  ionViewWillEnter(){\n    this.getData();\n   }\n\n  ngOnInit(): void {\n    this.profileSnapshot = localStorage.getItem('profile');\n    this.loadParamsSetProfile();\n  }\n\n  getData(){\n    console.log(\"getData\")\n    NativeBiometric.getCredentials({\n      server: \"www.example.com\",\n    }).then(\n      (result: Credentials) => {\n        this.email = result.username\n        this.passwordUser = localStorage.getItem('passwordUser')\n        this.check()    \n      },\n        (result: Credentials) => {\n          this.email = result.username\n          this.password = result.password\n    })\n  }\n\n  check(){\n    NativeBiometric.isAvailable().then(\n      (result: AvailableResult) => {\n        const isAvailable = result.isAvailable;\n        console.log(\"isAvailable\", isAvailable)\n        const isFingerPrint = result.biometryType == BiometryType.FINGERPRINT;\n        console.log(\"isFingerPrint\", isFingerPrint)\n        const isFaceAuth = result.biometryType == BiometryType.FACE_AUTHENTICATION;\n        console.log(\"isFaceAuth\", isFaceAuth)\n        const isIrisAuth = result.biometryType == BiometryType.IRIS_AUTHENTICATION;\n        console.log(\"isIrisAuth\", isIrisAuth)\n        const isTouchId = result.biometryType == BiometryType.TOUCH_ID;\n        console.log(\"isTouchId\", isTouchId)\n        const isFaceId = result.biometryType == BiometryType.FACE_ID;\n        console.log(\"isFaceId\", isFaceId)\n        if (isAvailable) {\n          // Get user's credentials\n          NativeBiometric.getCredentials({\n            server: \"www.example.com\",\n          }).then((credentials: Credentials) => { \n            // Authenticate using biometrics before logging the user in\n            NativeBiometric.verifyIdentity({\n              reason: \"For easy log in\",\n              title: \"Iniciar Sesión\",\n              subtitle: \"Falck\",\n              description: \"\",\n              retries: 5,\n            }).then(\n              () => {\n                // Authentication successful\n                localStorage.setItem(\"passwordUser\", credentials.password);\n                this.passwordUser = credentials.password\n                this.clickLoginFingerPrint();\n              },\n              (error) => { console.log( 'error', error)\n                // Failed to authenticate\n              }\n            );\n          });\n        }\n      },\n      (error) => { console.log(\"ERROR\",error)\n        // Couldn't check availability\n      }\n    )\n  }\n\n  loadParamsSetProfile() {\n    if (this.route.snapshot.queryParams['profile']) {\n      (this.route.snapshot.queryParams['profile']) ? this.profile = this.route.snapshot.queryParams['profile'] : this.profile = \"customers\";\n      if (this.profile !== \"customers\" &&\n        this.profile !== \"specialists\" &&\n        this.profile !== \"administrator\") {\n        this.profile = \"customers\";\n      }\n      this.setLocalStorageProfile();\n    }\n  }\n\n  setLocalStorageProfile() {\n    localStorage.setItem('profile', this.profile);\n  }\n\n  navigatoToWelcome() {\n    this.router.navigate(['/onboarding']);\n  }\n\n  clickLoginFingerPrint(){\n    this.isLoading = true;\n    this.loginService.getLogin(this.email, this.passwordUser).subscribe(resp => {\n      this.CompleteLogin(resp);\n      this.isLoading = false;\n    },\n    error => {\n      this.sentry.handleError(error);\n      this.loginForm.reset();\n      this.isLoading = false;\n      this.showErrorNotificationModal(error.error.error_description);\n    });\n  };\n\n  clickLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }else{\n      this.isLoading = true;\n      localStorage.setItem(\"passwordUser\", this.loginForm.controls.password.value);\n      this.loginService.getLogin(this.loginForm.controls.email.value, this.loginForm.controls.password.value).subscribe(resp => {\n        this.CompleteLogin(resp);\n        this.isLoading = false;\n      },\n        error => {\n          this.sentry.handleError(error);\n          this.loginForm.reset();\n          this.isLoading = false;\n          this.showErrorNotificationModal(error.error.error_description);\n        });\n    }\n  }\n\n  showErrorNotificationModal(msg: string) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: 'Hubo un problema',\n        description: msg,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.bsModalService.show(InformativeModalComponent, initialState);\n    this.bsModalRef.content.onClose.subscribe(() => {\n      this.router.navigate(['/onboarding/ini-sesion']);\n    });\n  }\n\n  private CompleteLogin(response: any) {\n    if (response.UserMidd == \"True\" && response.ChangedPassword == \"False\") {\n    } else {\n      localStorage.setItem(\"token\", response.access_token);\n      localStorage.setItem(\"userName\", response.UserName);\n      localStorage.setItem(\"NameOne\", response.NameOne);\n      localStorage.setItem(\"NameTwo\", response.NameTwo);\n      localStorage.setItem(\"LastNameOne\", response.LastNameOne);\n      localStorage.setItem(\"LastNameTwo\", response.LastNameTwo);\n      localStorage.setItem(\"registerId\", response.IdReference);\n      localStorage.setItem(\"documentType\", response.DocumentType);\n      localStorage.setItem(\"documentTypeName\", response.DocumentTypeName);\n      localStorage.setItem(\"document\", response.Document);\n      localStorage.removeItem('affiliateType');\n      localStorage.setItem(\"affiliateType\", response.AffiliateType);\n      localStorage.setItem(\"roleType\", response.RoleType);\n      localStorage.setItem(\"CellPhone\", response.CellPhone);\n      localStorage.setItem(\"expires\", response[\".expires\"]);\n      localStorage.setItem(\"nameItemMenu\", \"Inicio\");\n      localStorage.setItem(\"urlItemMenu\", \"/admin/home\");\n      localStorage.setItem(\"iconItemMenu\", \"fa fa-home\");\n      this.loginForm.reset();\n      this.router.navigate(['portal/my-account/info-fingerprint']);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\n\n@Component({\n  selector: 'app-onboarding',\n  templateUrl: './onboarding.page.html',\n  styleUrls: ['./onboarding.page.scss'],\n})\nexport class OnboardingPage implements OnInit {\n\n  solicitarButton = new ButtonConfiguration();\n  serviciosButton = new ButtonConfiguration();\n  dataUser: any;\n  middleName: string;\n\n  constructor(\n\n  ) {\n    this.solicitarButton.buttonType = ButtonType.Secundary;\n    this.solicitarButton.text = \"Solicitar Servicio\";\n    this.solicitarButton.fontsSize = \"18px\";\n    this.solicitarButton.width = \"290px\";\n\n    this.serviciosButton.buttonType = ButtonType.Primary;\n    this.serviciosButton.text = \"Servicios en Centros Médicos\";\n    this.serviciosButton.fontsSize = \"18px\";\n    this.serviciosButton.width = \"290px\";\n\n    this.dataUser = {\n      Email: localStorage.getItem(\"userName\"),\n      middleName: localStorage.getItem(\"NameOne\"),\n      FullName: `${localStorage.getItem('NameOne') ?? ''} ${localStorage.getItem('NameTwo') ?? ''} ${localStorage.getItem('LastNameOne') ?? ''} ${localStorage.getItem('LastNameTwo') ?? ''}`\n    }\n    this.middleName = this.dataUser.middleName;\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-recover-password-mail-phone',\n  templateUrl: './recover-password-mail-phone.page.html',\n  styleUrls: ['./recover-password-mail-phone.page.scss'],\n})\nexport class RecoverPasswordMailPhonePage implements OnInit {\n\n  smsBtn = new ButtonConfiguration();\n  mailBtn = new ButtonConfiguration();\n  sendMail: string;\n  sendSms: string;\n  imgRoute: string;\n\n  constructor(\n    private translate: TranslateService\n  ) { \n    this.imgRoute = environment.imagesRoute;\n    this.translate.get('PUBLIC.PASSWORD.sendEmail').subscribe(resp => {\n      this.sendMail = resp;\n    });\n\n    this.translate.get('PUBLIC.PASSWORD.sendSms').subscribe(resp => {\n      this.sendSms = resp;\n    });\n  }\n\n  ngOnInit() {\n    this.smsBtn.buttonType = ButtonType.Tertiary\n    this.smsBtn.text = this.sendSms;\n    this.smsBtn.imageName = \"cel-icon.svg\";\n\n    this.mailBtn.buttonType = ButtonType.Tertiary;\n    this.mailBtn.text = this.sendMail;\n    this.mailBtn.imageName = \"mail-icon.svg\";\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { NewForgotPasswordService } from 'src/app/public/services/new-forgot-password.service';\nimport { ForgotPass } from 'src/app/public/models/entities/forgot-pass';\nimport { BsModalService, ModalOptions, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NewForgotPassword } from 'src/app/public/models/requests/new-forgot-password';\nimport { SentryHandelError } from 'src/app/shared/services/sentry.handelerror';\n\n@Component({\n  selector: 'app-recover-password-mail',\n  templateUrl: './recover-password-mail.page.html',\n  styleUrls: ['./recover-password-mail.page.scss'],\n})\nexport class RecoverPasswordMailPage implements OnInit {\n\n  continuarButton = new ButtonConfiguration();\n  emailForm: FormGroup;\n  environment: any;\n  continueText: string;\n  isLoading: boolean;\n  responsePassword: ForgotPass;\n  bsModalRef: BsModalRef;\n  imgRoute: string;\n  \n  constructor(\n    private fb: FormBuilder,\n    private translate: TranslateService,\n    private forgotPassServices: NewForgotPasswordService,\n    private router: Router,\n    private modalInfo: BsModalService,\n    private sentry: SentryHandelError,\n    private urlDataService: UrlDataService\n  ) {\n    this.environment = environment;\n    this.imgRoute = environment.imagesRoute;\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n    this.continuarButton.buttonType = ButtonType.Primary;\n    this.continuarButton.text = this.continueText;\n    \n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  forgotPassword() {\n    if (this.emailForm.invalid) {\n      return\n    }else{\n    let user = new NewForgotPassword();\n    this.isLoading = true;\n    user.User = this.emailForm.get('email')?.value;\n    this.forgotPassServices.sendCodeForgotPassword(user).subscribe(\n      resp => {\n        this.responsePassword = resp;\n        this.isLoading = false;\n        if (this.responsePassword.StatusCode == 0) {\n          this.urlDataService.NewForgotPasswor = user\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: this.responsePassword.Title,\n              description: this.responsePassword.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: any) => {\n              if (resp) {\n                this.router.navigate(['/onboarding/remember-password-code']);\n              }\n            }\n          )\n        } else {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: this.responsePassword.Title,\n              description: this.responsePassword.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.modalInfo.show(InformativeModalComponent, initialState);\n        }\n      },\n      error => {\n        this.sentry.handleError(error);\n      }\n    )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { ForgotPass } from 'src/app/public/models/entities/forgot-pass';\nimport { NewForgotPassword } from 'src/app/public/models/requests/new-forgot-password';\nimport { NewForgotPasswordService } from 'src/app/public/services/new-forgot-password.service';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { onlyNumber, ValidatorStartCellPhoneNumber } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { SentryHandelError } from 'src/app/shared/services/sentry.handelerror';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-recover-password-phone',\n  templateUrl: './recover-password-phone.page.html',\n  styleUrls: ['./recover-password-phone.page.scss']\n})\nexport class RecoverPasswordPhonePage implements OnInit {\n\n  phoneForm: FormGroup\n  continueText: string;\n  environment: any;\n  continuarButton = new ButtonConfiguration();\n  isLoading: boolean;\n  responsePassword: ForgotPass;\n  bsModalRef: BsModalRef;\n  imgRoute: string;\n\n  constructor(\n    private fb: FormBuilder, \n    private translate: TranslateService, \n    private forgotPassServices: NewForgotPasswordService,\n    private urlDataService: UrlDataService, \n    private router: Router, \n    private modalInfo: BsModalService, \n    private sentry: SentryHandelError\n    ) {\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n    this.environment = environment;\n    this.imgRoute = environment.imagesRoute;\n    this.continuarButton.buttonType = ButtonType.Primary;\n    this.continuarButton.text = this.continueText;\n\n    this.phoneForm = this.fb.group({\n      phone: ['', [Validators.required, ValidatorStartCellPhoneNumber]],\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onlyNumber(event: any): boolean {\n    return onlyNumber(event);\n  }\n\n  forgotPassword() {\n    if (this.phoneForm.invalid) {\n      return\n    }else{\n    let user = new NewForgotPassword();\n    this.isLoading = true;\n    user.User = this.phoneForm.get('phone')?.value;\n    this.forgotPassServices.sendCodeForgotPassword(user).subscribe(\n      resp => {\n        this.responsePassword = resp;\n        this.isLoading = false;\n\n        if (this.responsePassword.StatusCode == 0) {\n          this.urlDataService.NewForgotPasswor = user\n          this.urlDataService.NewForgotPasswor = user\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: this.responsePassword.Title,\n              description: this.responsePassword.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded'\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: any) => {\n              if (resp) {\n                this.router.navigate(['/onboarding/remember-password-code']);\n              }\n            }\n          )\n        } else {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: this.responsePassword.Title,\n              description: this.responsePassword.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded'\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n        }\n      }, error => {\n        this.sentry.handleError(error);\n      }\n    )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { VerifyCodeRequest } from 'src/app/public/models/requests/verify-code-request';\nimport { NewForgotPasswordService } from 'src/app/public/services/new-forgot-password.service';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { BaseResponse } from 'src/app/shared/models/response/base-response';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-remember-password-code',\n  templateUrl: './remember-password-code.page.html',\n  styleUrls: ['./remember-password-code.page.scss']\n})\nexport class RememberPasswordCodePage implements OnInit {\n\n  codeForm: FormGroup\n  continueText: string;\n  codeIncomplete: boolean;\n  continuarButton = new ButtonConfiguration();\n  user: string;\n  bsModalRef: BsModalRef;\n  isLoading: boolean;\n  code: string;\n  imgRoute: string;\n\n  constructor(\n    private fb: FormBuilder, \n    private translate: TranslateService, \n    private forgotServices: NewForgotPasswordService,\n    private urlDataService: UrlDataService, \n    private modalInfo: BsModalService, \n    private router: Router\n    ) {\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n\n    this.continuarButton.buttonType = ButtonType.Primary;\n    this.continuarButton.text = this.continueText;\n    this.imgRoute = environment.imagesRoute;\n    this.codeForm = this.fb.group({\n      code: ['', [Validators.required]],\n    })\n    this.codeIncomplete = true;\n  }\n\n  ngOnInit(): void {\n    this.user = this.urlDataService.NewForgotPasswor.User;\n    this.codeForm.reset();\n  }\n\n  onCodeChanged(code: string) {\n    this.code = code;\n    code.length == 4 ? (this.codeIncomplete = false, this.onCodeCompleted()) : (this.codeIncomplete = true)\n  }\n\n  onCodeCompleted() {\n    if (this.codeForm.invalid) {\n      return\n    }else{\n    let verifyCodeRequest = new VerifyCodeRequest();\n    verifyCodeRequest.Code = this.code;\n    verifyCodeRequest.user = this.user;\n    this.isLoading = true;\n    this.forgotServices.verifyCode(verifyCodeRequest).subscribe(\n      (resp: BaseResponse) => {\n        this.isLoading = false;\n        if (resp.StatusCode == 0) {\n          this.urlDataService.CodeValidator = verifyCodeRequest.Code\n          this.router.navigate(['/onboarding/remember-password']);\n        }\n        else if (resp.StatusCode == 9) {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: resp.Title,\n              description: 'El código ingresado es incorrecto',\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n        }\n        else {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: resp.Title,\n              description: resp.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: any) => {\n              if (resp) {\n                this.router.navigate(['/onboarding/ini-session']);\n              }\n            }\n          )\n        }\n      }\n    )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { SetPassword } from 'src/app/public/models/entities/setPassword';\nimport { SecurityQuestionRequest } from 'src/app/public/models/requests/security-question-request';\nimport { NewForgotPasswordService } from 'src/app/public/services/new-forgot-password.service';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { Regex } from 'src/app/shared/helpers/regex';\nimport { EmailEqualsValidator } from 'src/app/shared/helpers/validator';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { BaseResponse } from 'src/app/shared/models/response/base-response';\nimport { UrlDataService } from 'src/app/shared/services/url-data-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-remember-password',\n  templateUrl: './remember-password.page.html',\n  styleUrls: ['./remember-password.page.scss'],\n})\nexport class RememberPasswordPage implements OnInit {\n\n  isLoading: boolean;\n  passForm: FormGroup;\n  continuarButton = new ButtonConfiguration();\n  continueText: string;\n  regex = Regex;\n  bsModalRef: BsModalRef;\n  hide = true;\n  hideC = true;\n  setPassword: SetPassword;\n  imgRoute: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private translate: TranslateService,\n    private passwordService: NewForgotPasswordService,\n    private modalInfo: BsModalService,\n    private router: Router,\n    private urlDataService: UrlDataService\n  ) {\n    this.translate.get('PUBLIC.SHARED.continue').subscribe(resp => {\n      this.continueText = resp;\n    });;\n    this.continuarButton.buttonType = ButtonType.Primary;\n    this.continuarButton.text = this.continueText;\n    this.imgRoute = environment.imagesRoute;\n    this.passForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(this.regex.min1Number), Validators.pattern(this.regex.specialCharacter), Validators.pattern(this.regex.upperCaseCharacter)]],\n      passwordConfirm: ['', [Validators.required, EmailEqualsValidator('password')]]\n    })\n  }\n\n  ngOnInit() {\n    !this.urlDataService.NewForgotPasswor ? this.router.navigate(['/onboarding']) : this.setRequest();\n  }\n\n  setRequest() {\n    this.setPassword = new SetPassword()\n    this.setPassword.Email = this.urlDataService.NewForgotPasswor.User\n    this.setPassword.Code = this.urlDataService.CodeValidator\n  }\n\n  complete() {\n    if (this.passForm.invalid) {\n      return\n    }else{\n    this.setPassword.NewPassword = this.passForm.get('password')?.value;\n    this.setPassword.ConfirmPassword = this.passForm.get('passwordConfirm')?.value;\n    this.isLoading = true;\n    this.passwordService.setPassword(this.setPassword).subscribe(\n      (resp: BaseResponse) => {\n        this.isLoading = false;\n        if (resp.StatusCode == 24) {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: resp.Title,\n              description: resp.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: boolean) => {\n              if (resp) {\n                this.router.navigate(['/onboarding/ini-sesion']);\n              }\n            }\n          )\n        } else if (resp.StatusCode == 18 || resp.StatusCode == 46) {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: resp.Title,\n              description: resp.Message,\n              onlyButtonConfirm: false,\n              textButton: '',\n              textButton1: 'Cancelar',\n              textButton2: 'Enviar Correo',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: boolean) => {\n              if (resp) {\n                let profile = localStorage.getItem('profile') === \"customers\" ? '1' : localStorage.getItem('profile') === \"doctor\" ? '4' : '2';\n                this.passwordService.activationMail(this.setPassword.NewPassword, profile).subscribe(\n                  resp => {\n                    this.callModal(resp);\n                  }\n                )\n              }\n            }\n          )\n        }\n        else {\n          const initialState: ModalOptions = {\n            initialState: {\n              iconHeader: 'alert-circle.svg',\n              subTitle: resp.Title,\n              description: resp.Message,\n              onlyButtonConfirm: true,\n              textButton: 'Aceptar',\n              textButton1: '',\n              textButton2: '',\n              visibleButtonClose: false,\n            },\n            class: 'modal-dialog-centered modal-rounded',\n            backdrop: true,\n            ignoreBackdropClick: true\n          }\n          this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n          this.bsModalRef.content.onClose.subscribe(\n            (resp: boolean) => {\n              if (resp) {\n                this.router.navigate(['/onboarding']);\n              }\n            }\n          )\n        }\n      }\n    )\n    }\n  }\n\n  callModal(resp: BaseResponse) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: 'alert-circle.svg',\n        subTitle: resp.Title,\n        description: resp.Message,\n        onlyButtonConfirm: true,\n        textButton: 'Aceptar',\n        textButton1: '',\n        textButton2: '',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      backdrop: true,\n      ignoreBackdropClick: true\n    }\n    this.bsModalRef = this.modalInfo.show(InformativeModalComponent, initialState);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\nimport { environment } from 'src/environments/environment';\nimport { TermsService } from '../../services/terms.service';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.page.html',\n    styleUrls: ['./terms.page.scss']\n  })\n\n  export class TermsPage implements OnInit {\n    \n    imagesRoute: string;\n    environment: any;\n    imageSource: string;\n    tagCode: string;\n    tagCodes: string;\n    texto: string;\n    document: string;\n    @Input() parentForm: string;\n    isLoading: boolean;\n  \n    constructor(\n        private bsModalRef: BsModalRef, \n        private modalService: BsModalService,\n        private termsService: TermsService,\n        ) {\n          this.imagesRoute = environment.imagesRoute;\n      this.isLoading= true;\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.tagCode = this.parentForm === \"specialists\" ? \"TYCE\" : \"TYCC\";\n        let roleType = localStorage.getItem(\"roleType\");\n        this.tagCodes = roleType != \"2\" ? \"PPC\" : \"PPE\";\n        this.imageSource = `${environment.imagesRoute}logo-modal.png`\n        this.loadContent(this.document);\n    }\n\n    loadContent(tagCode: string){\n        this.termsService.getLegalContent(tagCode).subscribe(message => {\n          this.isLoading = false;\n            if(message.StatusCode === 0) {\n              this.texto = message.LegalContent.Content;\n            }\n        });\n    }\n  \n    closeModal() {\n      this.bsModalRef.hide();\n    }\n  \n  }\n  ","import { Component, OnInit } from '@angular/core';\nimport { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';\nimport { DescriptionPhones } from 'src/app/public/models/entities/descriptionPhones';\nimport { UsefulPhonesServices } from 'src/app/public/services/useful-phones.services';\nimport { environment } from 'src/environments/environment';\nimport { OptionCityComponent } from '../option-city/option-city.component';\n\n\n@Component({\n  selector: 'app-list-phones',\n  templateUrl: './list-phones.component.html',\n  styleUrls: ['./list-phones.component.scss']\n})\nexport class ListPhonesComponent implements OnInit {\n  listPhones: any;\n  imgRoute: string;\n  enviroment: any;\n  modalRef: BsModalRef;\n\n  list: any;\n  SacNumber: any;\n  LMED: any;\n  PBX: any;\n  descriptionPhones: DescriptionPhones[];\n\n  constructor(\n    private bsModalRef: BsModalRef,\n    private modalService: BsModalService,\n    private usefulPhoneServices: UsefulPhonesServices\n    ) {\n      this.enviroment = environment;\n      this.imgRoute = environment.imagesRoute;\n\n  }\n  ngOnInit(): void {\n    this.descriptionPhones = [\n      {\n        title: 'Servicio al Cliente',\n        img: `${environment.imagesRoute}icons/serviceclient.svg`,\n        numbers: this.SacNumber\n      },\n      {\n        title: 'Linea Médica',\n        img: `${environment.imagesRoute}icons/linemedicina.svg`,\n        numbers: this.LMED\n      },\n      {\n        title: 'Quiero Afiliarme',\n        img: `${environment.imagesRoute}icons/pbx.svg`,\n        numbers: this.PBX\n      }\n    ]\n\n  }\n\n  volver() {\n    const initialState: ModalOptions = {\n      initialState: {\n        list: [\n        ]\n      },\n      class: 'modal-dialog-centered modal-rounded'\n\n    }\n    this.modalRef = this.modalService.show(OptionCityComponent, initialState);\n\n  }\n\n  closeModal() {\n    this.bsModalRef.hide();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { ListPhoneModel } from 'src/app/public/models/entities/list-phone-model';\nimport { UserFulPhonesRequest } from 'src/app/public/models/requests/usefulphones-request';\nimport { UsefulPhonesServices } from 'src/app/public/services/useful-phones.services';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { environment } from 'src/environments/environment';\nimport { ListPhonesComponent } from '../list-phones/list-phones.component';\n\n@Component({\n  selector: 'app-option-city',\n  templateUrl: './option-city.component.html',\n  styleUrls: ['./option-city.component.scss']\n})\n\nexport class OptionCityComponent implements OnInit {\n\n  inputLocationButton = new ButtonConfiguration();\n  acceptText: string;\n  listPhones: ListPhoneModel;\n  form: FormGroup\n  location = new UserFulPhonesRequest();\n  imgRoute: string;\n  environment: any;\n  loading: boolean;\n  disableSelect = new FormControl(false);\n\n  constructor(\n    private modalService: BsModalService,\n    private bsModalRef: BsModalRef,\n    private translate: TranslateService,\n    private usefulPhoneServices: UsefulPhonesServices,\n    private fb: FormBuilder\n    ) {\n      this.environment = environment;\n      this.imgRoute = environment.imagesRoute;\n      this.translate.get('PUBLIC.SHARED.accept').subscribe(resp => {\n      this.acceptText = resp;\n      this.form = this.fb.group({\n        city: ['']\n      })\n    });\n  }\n\n  ngOnInit(): void {\n    this.inputLocationButton.buttonType = ButtonType.Primary;\n    this.inputLocationButton.width = \"130px\";\n    this.inputLocationButton.text = this.acceptText;\n    this.getPhones();\n  }\n\n  getPhones() {\n    let usefulphonesRequest = new UserFulPhonesRequest();\n    usefulphonesRequest = this.location;\n    this.loading = true;\n    this.usefulPhoneServices.getPhones(usefulphonesRequest).subscribe(\n      data => {\n        this.listPhones = data;\n        this.loading = false;\n        this.form.get('city')?.setValue(this.listPhones.UPhoneses[0].CityCode);\n      }\n    )\n  }\n\n  getNumbersPhones() {\n    const phones = this.listPhones.UPhoneses.filter((phones: any) => {\n      return phones.CityCode == this.form.value.city\n    });\n\n    const SacNumber = phones[0].Phones.filter(\n      (sac) => {\n        return sac.Id == \"SAC\"\n      }\n    );\n\n    const LMED = phones[0].Phones.filter(\n      (LMED) => {\n        return LMED.Id == \"LMED\"\n      }\n    );\n\n    const PBX = phones[0].Phones.filter(\n      (PBX) => {\n        return PBX.Id == \"PBX\"\n      }\n    );\n\n    const initialState: ModalOptions = {\n      initialState: {\n        list: phones[0],\n        SacNumber,\n        LMED,\n        PBX\n      },\n      class: 'modal-dialog-centered modal-rounded modal-lg',\n    }\n    this.bsModalRef = this.modalService.show(ListPhonesComponent, initialState)\n  }\n\n  closeModalAndOpen(openModal: boolean) {\n    this.bsModalRef.hide();\n    (openModal) ? this.getNumbersPhones() : '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { ButtonType } from 'src/app/shared/enums/enumerations';\nimport { ButtonConfiguration } from 'src/app/shared/models/button-configuration';\nimport { environment } from 'src/environments/environment';\nimport { OptionCityComponent } from '../useful-phones/option-city/option-city.component';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.page.html',\n  styleUrls: ['./welcome.page.scss'],\n})\nexport class WelcomePage implements OnInit {\n\n  bsModalRef?: BsModalRef;\n  imgRoute: string;\n  loginButton = new ButtonConfiguration();\n  usefulPhonesButton = new ButtonConfiguration();\n  enterWithUserNameText: string;\n  useFulPhonesText: string\n  environment: any;\n  country: string;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private translate: TranslateService, \n    public modalService: BsModalService\n    ) {\n      this.translate.get('PUBLIC.WELCOME.enterWithUserName').subscribe(resp => {\n      this.enterWithUserNameText = resp;\n    });\n      this.translate.get('PUBLIC.WELCOME.useFulPhones').subscribe(resp => {\n      this.useFulPhonesText = resp;\n    });\n    this.imgRoute = environment.imagesRoute;\n    this.country = environment.country;\n  }\n\n  ngOnInit() {\n    this.loginButton.buttonType = ButtonType.Primary;\n    this.loginButton.text = this.enterWithUserNameText;\n    this.loginButton.width = '300px'\n\n    this.usefulPhonesButton.buttonType = ButtonType.Secundary;\n    this.usefulPhonesButton.text = this.useFulPhonesText;\n    this.usefulPhonesButton.width = '300px';\n  }\n\n  clickUsefulPhones() {\n    const initialState: ModalOptions = {\n      initialState: {\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 1\n    }\n    this.bsModalRef = this.modalService.show(OptionCityComponent, initialState);\n  }\n\n  clickLogin() {\n    this.router.navigate(['/onboarding/ini-sesion']);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { Answer } from \"../models/entities/answer\";\nimport { AnswerType } from \"../models/enums/answer-type\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FakeAnswerService {\n\n    GetAnswerById(size: number, id: AnswerType, trueAnswer: string) {\n        switch (id) {\n            case (AnswerType.Date):\n                return this.GenerateDateRandom(size, trueAnswer);\n            case (AnswerType.Name):\n                return this.GenerateListRandom(size, this.returnNameList(environment.country), trueAnswer);\n            case (AnswerType.Address):\n                return this.GenerateListRandom(size, this.returnAdressList(environment.country), trueAnswer);\n            case (AnswerType.Email):\n                return this.GenerateEmailRandom(size, trueAnswer);\n            case (AnswerType.Phone):\n                return this.GeneratePhoneRandom(size, trueAnswer);\n        }\n    }\n\n    private GenerateDateRandom(size: Number, trueAnswer: string): Array<Answer> {\n        let response = new Array<Answer>();\n        for (var i = 0; i < size; i++) {\n            let fecha = this.ConverterStringToDate(trueAnswer);\n            let answer: Answer = new Answer();\n            if ((i % 2) == 0) {\n                if (i == 0)\n                    fecha.setDate(fecha.getDate() + 1 * 2);\n                else\n                    fecha.setDate(fecha.getDate() + i * 2);\n            }\n            else {\n                if (i == 0)\n                    fecha.setDate(fecha.getDate() - (1 * 2));\n                else\n                    fecha.setDate(fecha.getDate() - (i * 2));\n            }\n            answer.GroupName = null;\n            answer.Answer = this.ConverterDateToString(fecha);\n            response.push(answer);\n        }\n        //agregamos la Answer verdadera como parte del listado de Answers falsas\n        let _answer: Answer = new Answer();\n        _answer.Answer = trueAnswer;\n        _answer.GroupName = null;\n        const indexRand = this.Between(0, size);\n\n        response.splice(indexRand, 0, _answer);\n\n        //retornamos el listado completo\n        return response;\n    }\n\n    private GenerateListRandom(size: Number, lista: Array<Answer>, trueAnswer: string): Array<Answer> {\n        let response: Array<Answer> = new Array<Answer>();\n        for (var i = 0; i < size; i++) {\n            const ind = this.Between(0, lista.length - 1);\n            let answer = new Answer();\n            if (lista[ind].Answer !== trueAnswer) {\n                if (response.length > 0) {\n                    let a = response.find(x => x.Answer == lista[ind].Answer);\n                    if (!a) {\n                        answer.Answer = lista[ind].Answer;\n                        answer.GroupName = null;\n                        response.push(answer);\n                        var index = lista.findIndex(x => x.Answer == lista[ind].Answer);\n                        if (index > 1)\n                            lista.splice(index, 1);\n                    }\n                    else {\n                        i--;\n                    }\n                }\n                else {\n                    answer.Answer = lista[ind].Answer;\n                    answer.GroupName = null;\n                    response.push(answer);\n                    var index = lista.findIndex(x => x.Answer == lista[ind].Answer);\n                    if (index > 1)\n                        lista.splice(index, 1);\n                }\n\n            }\n            else\n                i--;\n        }\n\n        //agregamos la Answer verdadera como parte del listado de Answers falsas\n        let _answer: Answer = new Answer();\n        _answer.Answer = trueAnswer;\n        _answer.GroupName = null;\n        const indexRand = this.Between(0, size);\n\n        response.splice(indexRand, 0, _answer);\n\n        //retornamos el listado completo\n        return response;\n\n    }\n\n    private GenerateEmailRandom(size: Number, trueAnswer: string): Array<Answer> {\n        let response: Array<Answer> = new Array<Answer>();\n        let email = trueAnswer.split('@');\n        if (email.length > 0) {\n            for (var i = 0; i < size; i++) {\n                let emailAux: string;\n                let answer = new Answer();\n                if ((i % 2) == 0) {\n                    if (i == 0)\n                        emailAux = email[0] + (1 * 2).toString();\n                    else\n                        emailAux = email[0] + (i * 2).toString();\n                }\n                else {\n                    if (i == 0)\n                        emailAux = email[0] + \"0\" + (1 * 2).toString();\n                    else\n                        emailAux = email[0] + \"0\" + (i * 2).toString();\n                }\n                answer.Answer = emailAux + \"@\" + email[1];\n                response.push(answer);\n            }\n        }\n\n        //agregamos la Answer verdadera como parte del listado de Answers falsas\n        let _answer: Answer = new Answer();\n        _answer.Answer = trueAnswer;\n        _answer.GroupName = null;\n        const indexRand = this.Between(0, size);\n\n        response.splice(indexRand, 0, _answer);\n\n        //retornamos el listado completo\n        return response;\n    }\n\n    private GeneratePhoneRandom(size: Number, trueAnswer: string): Array<Answer> {\n        let response: Array<Answer> = new Array<Answer>();\n        let phoneNumber = Number(trueAnswer);\n        const firstCharacter = trueAnswer.charAt(0);\n\n        for (var i = 0; i < size; i++) {\n            let number: Number;\n            let answer = new Answer();\n            if ((i % 2) == 0) {\n                if (i == 0)\n                    number = phoneNumber + (1 * 2);\n                else\n                    number = phoneNumber + (i * 2);\n            }\n            else {\n                if (i == 0)\n                    number = phoneNumber - (1 * 2);\n                else\n                    number = phoneNumber - (i * 2);\n            }\n\n            answer.Answer = number.toString();\n            if (firstCharacter === \"0\") answer.Answer = firstCharacter + answer.Answer;\n            response.push(answer);\n        }\n\n        //agregamos la Answer verdadera como parte del listado de Answers falsas\n        let _answer: Answer = new Answer();\n        _answer.Answer = trueAnswer;\n        _answer.GroupName = null;\n        const indexRand = this.Between(0, size);\n\n        response.splice(indexRand, 0, _answer);\n\n        //retornamos el listado completo\n        return response;\n    }\n\n    private Between(min: any, max: any) {\n        return Math.floor(\n            Math.random() * (max - min + 1) + min\n        )\n    }\n\n    //convierte de 30/01/2020 a \"2020-01-30\"\n    private ConverterDateToFormat(stringFecha: string): string {\n        let dia = stringFecha.substr(0, 2);\n        let mes = stringFecha.substr(3, 2);\n        let año = stringFecha.substr(6, 4);\n        const date = año + \"-\" + mes + \"-\" + dia;\n        return date;\n    }\n\n    private ConverterStringToDate(stringFecha: string): Date {\n        stringFecha = this.ConverterDateToFormat(stringFecha);\n        let date = new Date(stringFecha);\n        date.setDate(date.getDate() + 1);\n        return date;\n    }\n\n    private ConverterDateToString(date: Date): string {\n        let response = (\"0\" + date.getDate()).slice(-2) + \"/\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"/\" + date.getFullYear();\n        return response;\n    }\n\n    private returnNameList(country: string) : Array<Answer> {\n       if (country === 'co') {return this.ReturnEmiNameList()} else {return this.ReturnUcmNameList();}  \n    }\n\n    private returnAdressList(country: string) : Array<Answer> {\n        if (country === 'co') {return this.ReturnEmiAddressList()} else {return this.ReturnUcmAddressList();}  \n    }\n\n    private ReturnEmiNameList(): Array<Answer> {\n        const list = new AnswerEmiNamesList();\n        return list.answerNameList;\n    }\n\n    private ReturnUcmNameList(): Array<Answer> {\n        const list = new AnswerUcmNamesList();\n        return list.answerNameList;\n    }\n\n    private ReturnEmiAddressList(): Array<Answer> {\n        const list = new AnswerEmiAddressList();\n        return list.answerAddressList\n    }\n\n    private ReturnUcmAddressList(): Array<Answer> {\n        const list = new AnswerUcmAddressList();\n        return list.answerAddressList\n    }\n}\n\nexport class EmiNamesList {\n    nameList: Array<string>;\n    constructor() {\n        this.nameList =\n            [\n                \"Juana Chafrat\",\n                \"Romina Sosa\",\n                \"Esteban Sosa\",\n                \"Pablo Ramirez\",\n                \"Carlos Ramirez\",\n                \"Guistavo Ramirez\",\n                \"Martin Sosa\",\n                \"Jorge Chafrat\",\n                \"Isabel Chafrat\",\n                \"Aruel Sosa\"\n            ]\n    }\n}\n\nexport class AnswerEmiNamesList {\n    nameList = new EmiNamesList();\n    answerNameList: Array<Answer> = new Array<Answer>();\n    constructor() {\n        this.nameList.nameList.forEach(element => {\n            element = element.toUpperCase();\n            this.answerNameList.push({\n                Answer: element,\n                GroupName: null,\n                IsSelected: false\n            });\n        });\n    }\n}\n\nexport class UcmNamesList {\n    nameList: Array<string>;\n    constructor() {\n        this.nameList =\n            [\n                \"Juana Chafrat\",\n                \"Romina Sosa\",\n                \"Esteban Sosa\",\n                \"Pablo Ramirez\",\n                \"Carlos Ramirez\",\n                \"Guistavo Ramirez\",\n                \"Martin Sosa\",\n                \"Jorge Chafrat\",\n                \"Isabel Chafrat\",\n                \"Aruel Sosa\"\n            ]\n    }\n}\n\nexport class AnswerUcmNamesList {\n    nameList = new UcmNamesList();\n    answerNameList: Array<Answer> = new Array<Answer>();\n    constructor() {\n        this.nameList.nameList.forEach(element => {\n            element = element.toUpperCase();\n            this.answerNameList.push({\n                Answer: element,\n                GroupName: null,\n                IsSelected: false\n            });\n        });\n    }\n}\n\nexport class EmiAddressList {\n    addressList: Array<string>;\n    constructor() {\n        this.addressList = [\n            \"Calle 27 d sur # 27 c 51\",\n            \"Diagonal 40 # 41 61\",\n            \"KR 23 # 35 - 48\",\n            \"CALLE 35 # 33-09\",\n            \"Carrera 53 # 70 - 86\",\n            \"AC 13 # 21 - 91\",\n            \"avenida carrera 19 # 127 d -55\",\n            \"Avenida el dorado # 68D - 35\",\n            \"TRANSVERSAL 78 I BIS # 41 A 16 SUR\",\n            \"AV 6 A # 20 NORTE - 20\",\n        ]\n    }\n}\n\nexport class AnswerEmiAddressList {\n    addressList = new EmiAddressList();\n    answerAddressList: Array<Answer> = new Array<Answer>();\n    constructor() {\n        this.addressList.addressList.forEach(element => {\n            element = element.toUpperCase();\n            this.answerAddressList.push({\n                Answer: element,\n                GroupName: null,\n                IsSelected: false\n            });\n        });\n    }\n}\n\nexport class UcmAddressList {\n    addressList: Array<string>;\n    constructor() {\n        this.addressList = [\n            \"Calle Libertad 2738, Montevideo\",\n            \"11600 Montevideo\",\n            \"Avda. Tomás Giribaldi 2290 Montevideo 11300\",\n            \"c/ Justino Muniz 772\",\n            \"c/ Santísima Trinidad, 59\",\n            \"Avda. 18 de Julio, 708\",\n            \"c/ Dr. Fosalba, 524.\",\n            \"c/ Leandro Gómez 1192\",\n            \"c/ Treinta y Tres 1317\",\n            \"c/ Francisco Araúcho 1186\",\n        ]\n    }\n}\n\nexport class AnswerUcmAddressList {\n    addressList = new UcmAddressList();\n    answerAddressList: Array<Answer> = new Array<Answer>();\n    constructor() {\n        this.addressList.addressList.forEach(element => {\n            element = element.toUpperCase();\n            this.answerAddressList.push({\n                Answer: element,\n                GroupName: null,\n                IsSelected: false\n            });\n        });\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n//import { SentryHandelError } from 'src/app/shared/services/sentry.handelerror';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  constructor(\n    private http: HttpClient,\n    //private sentry: SentryHandelError\n    ) { }\n\n  getLogin(email: string, password: string): Observable<any> {\n    let urlSearchParams = new URLSearchParams();\n        urlSearchParams.append('UserName', email);\n        urlSearchParams.append('Password', password);\n        urlSearchParams.append('grant_type', 'password');\n        let body = urlSearchParams.toString();\n\n        return this.http.post<any>(`${environment.API_URL}Login/Login`, body)\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseResponse } from 'src/app/shared/models/response/base-response';\nimport { environment } from 'src/environments/environment';\nimport { ForgotPass } from '../models/entities/forgot-pass';\nimport { SetPassword } from '../models/entities/setPassword';\nimport { NewForgotPassword } from '../models/requests/new-forgot-password';\nimport { VerifyCodeRequest } from '../models/requests/verify-code-request';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NewForgotPasswordService {\n\n  headers: HttpHeaders;\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  sendCodeForgotPassword (forgotPassword : NewForgotPassword): Observable<ForgotPass> {\n    return this.http.post<ForgotPass>(`${environment.API_URL}Login/NewForgotPassword`, forgotPassword);\n  }\n\n  verifyCode (codeUser : VerifyCodeRequest): Observable<any> {\n    return this.http.post<ForgotPass>(`${environment.API_URL}Login/VerifyCodeForgortPassword`, codeUser);\n  }\n\n  setPassword (password: SetPassword): Observable<any> {\n    return this.http.post<BaseResponse>(`${environment.API_URL}Login/SetPassword`, password);\n  }\n\n  activationMail (user: any, profile: string): Observable<any> {\n    this.headers = new HttpHeaders({\n      'Profile': profile\n  });\n\n  let params = {\n    User: user\n  }\n    return this.http.post<BaseResponse>(`${environment.API_URL}Registration/SendActivationEmail`, params, { headers: this.headers });\n  }\n\n\n\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PreRegisterResponse } from '../models/responses/pre-register-response';\nimport { DataLifeAccountVerificationRequest } from '../models/requests/data-life-account-verification';\nimport { PreRegisterRequest } from '../models/requests/pre-register-request';\nimport { User } from '../models/entities/user';\nimport { AccountVerificationResponse } from '../models/responses/account-verification-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n\n  preRegister(preRegisterRequest: PreRegisterRequest): Observable<PreRegisterResponse> {\n    return this.http.post<PreRegisterResponse>(`${environment.API_URL}Registration/PreRegister`, preRegisterRequest);\n  }\n\n  getAccountVerification(dataLifeAccountVerificationRequest: DataLifeAccountVerificationRequest): Observable<AccountVerificationResponse> {\n    return this.http.post<AccountVerificationResponse>(`${environment.API_URL}Affiliate/GetDataLifeAccountVerification`, dataLifeAccountVerificationRequest);\n  }\n\n  saveUser(user: User): Observable<any> {\n    return this.http.post<PreRegisterResponse>(`${environment.API_URL}Registration/Register`, user);\n  }\n\n  cancelRegister(user: User): Observable<any> {\n    return this.http.post<PreRegisterResponse>(`${environment.API_URL}Registration/CancelPreRegister`, user);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { SecurityQuestions } from '../models/entities/security-questions';\nimport { SecurityQuestionRequest } from '../models/requests/security-question-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  getSecurityQuestion (requesSecurityQuestion: SecurityQuestionRequest): Observable<SecurityQuestions> {\n    return this.http.post<SecurityQuestions>(`${environment.API_URL}Affiliate/GetSecurityQuestions`, requesSecurityQuestion);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ListPhoneModel } from '../models/entities/list-phone-model';\nimport { UserFulPhonesRequest } from '../models/requests/usefulphones-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsefulPhonesServices {\n\n  constructor(private http: HttpClient) { }\n\n  getPhones (usePhonesRequest : UserFulPhonesRequest): Observable<ListPhoneModel> {\n    return this.http.post<ListPhoneModel>(`${environment.API_URL}DataLists/GetUsefulPhones`, usePhonesRequest);\n  }\n}\n","import { __awaiter } from 'tslib';\nimport { InjectionToken, EventEmitter, Component, Optional, Inject, ViewChildren, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"input\"];\nfunction CodeInputComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\")(1, \"input\", 1, 2);\n    ɵngcc0.ɵɵlistener(\"click\", function CodeInputComponent_span_0_Template_input_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4.onClick($event)); })(\"paste\", function CodeInputComponent_span_0_Template_input_paste_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const i_r2 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r6.onPaste($event, i_r2)); })(\"input\", function CodeInputComponent_span_0_Template_input_input_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const i_r2 = restoredCtx.index; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r7.onInput($event, i_r2)); })(\"keydown\", function CodeInputComponent_span_0_Template_input_keydown_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const i_r2 = restoredCtx.index; const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r8.onKeydown($event, i_r2)); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"code-hidden\", ctx_r0.isCodeHidden);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"type\", ctx_r0.inputType)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵattribute(\"autocapitalize\", ctx_r0.autocapitalize);\n} }\nconst CodeInputComponentConfigToken = new InjectionToken('CodeInputComponentConfig');\r\nconst defaultComponentConfig = {\r\n    codeLength: 4,\r\n    inputType: 'tel',\r\n    initialFocusField: undefined,\r\n    isCharsCode: false,\r\n    isCodeHidden: false,\r\n    isPrevFocusableAfterClearing: true,\r\n    isFocusingOnLastByClickIfFilled: false,\r\n    code: undefined,\r\n    disabled: false,\r\n    autocapitalize: undefined\r\n};\n\nvar InputState;\r\n(function (InputState) {\r\n    InputState[InputState[\"ready\"] = 0] = \"ready\";\r\n    InputState[InputState[\"reset\"] = 1] = \"reset\";\r\n})(InputState || (InputState = {}));\r\nclass CodeInputComponent {\r\n    constructor(config) {\r\n        /** @deprecated Use isCharsCode prop instead. */\r\n        this.isNonDigitsCode = false;\r\n        this.codeChanged = new EventEmitter();\r\n        this.codeCompleted = new EventEmitter();\r\n        this.placeholders = [];\r\n        this.inputs = [];\r\n        this.inputsStates = [];\r\n        this.state = {\r\n            isFocusingAfterAppearingCompleted: false,\r\n            isInitialFocusFieldEnabled: false\r\n        };\r\n        Object.assign(this, defaultComponentConfig);\r\n        if (!config) {\r\n            return;\r\n        }\r\n        // filtering for only valid config props\r\n        for (const prop in config) {\r\n            if (!config.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n            if (!defaultComponentConfig.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n            // @ts-ignore\r\n            this[prop] = config[prop];\r\n        }\r\n    }\r\n    /**\r\n     * Life cycle\r\n     */\r\n    ngOnInit() {\r\n        // defining the state\r\n        this.state.isInitialFocusFieldEnabled = !this.isEmpty(this.initialFocusField);\r\n        // initiating the code\r\n        this.onCodeLengthChanges();\r\n    }\r\n    ngAfterViewInit() {\r\n        // initiation of the inputs\r\n        this.inputsListSubscription = this.inputsList.changes.subscribe(this.onInputsListChanges.bind(this));\r\n        this.onInputsListChanges(this.inputsList);\r\n    }\r\n    ngAfterViewChecked() {\r\n        this.focusOnInputAfterAppearing();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.code) {\r\n            this.onInputCodeChanges();\r\n        }\r\n        if (changes.codeLength) {\r\n            this.onCodeLengthChanges();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.inputsListSubscription) {\r\n            this.inputsListSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Methods\r\n     */\r\n    reset(isChangesEmitting = false) {\r\n        // resetting the code to its initial value or to an empty value\r\n        this.onInputCodeChanges();\r\n        if (this.state.isInitialFocusFieldEnabled) {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            this.focusOnField(this.initialFocusField);\r\n        }\r\n        if (isChangesEmitting) {\r\n            this.emitChanges();\r\n        }\r\n    }\r\n    focusOnField(index) {\r\n        if (index >= this._codeLength) {\r\n            throw new Error('The index of the focusing input box should be less than the codeLength.');\r\n        }\r\n        this.inputs[index].focus();\r\n    }\r\n    onClick(e) {\r\n        // handle click events only if the the prop is enabled\r\n        if (!this.isFocusingOnLastByClickIfFilled) {\r\n            return;\r\n        }\r\n        const target = e.target;\r\n        const last = this.inputs[this._codeLength - 1];\r\n        // already focused\r\n        if (target === last) {\r\n            return;\r\n        }\r\n        // check filling\r\n        const isFilled = this.getCurrentFilledCode().length >= this._codeLength;\r\n        if (!isFilled) {\r\n            return;\r\n        }\r\n        // focusing on the last input if is filled\r\n        setTimeout(() => last.focus());\r\n    }\r\n    onInput(e, i) {\r\n        const target = e.target;\r\n        const value = e.data || target.value;\r\n        if (this.isEmpty(value)) {\r\n            return;\r\n        }\r\n        // only digits are allowed if isCharsCode flag is absent/false\r\n        if (!this.canInputValue(value)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.setInputValue(target, null);\r\n            this.setStateForInput(target, InputState.reset);\r\n            return;\r\n        }\r\n        const values = value.toString().trim().split('');\r\n        for (let j = 0; j < values.length; j++) {\r\n            const index = j + i;\r\n            if (index > this._codeLength - 1) {\r\n                break;\r\n            }\r\n            this.setInputValue(this.inputs[index], values[j]);\r\n        }\r\n        this.emitChanges();\r\n        const next = i + values.length;\r\n        if (next > this._codeLength - 1) {\r\n            target.blur();\r\n            return;\r\n        }\r\n        this.inputs[next].focus();\r\n    }\r\n    onPaste(e, i) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const data = e.clipboardData ? e.clipboardData.getData('text').trim() : undefined;\r\n        if (this.isEmpty(data)) {\r\n            return;\r\n        }\r\n        // Convert paste text into iterable\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        const values = data.split('');\r\n        let valIndex = 0;\r\n        for (let j = i; j < this.inputs.length; j++) {\r\n            // The values end is reached. Loop exit\r\n            if (valIndex === values.length) {\r\n                break;\r\n            }\r\n            const input = this.inputs[j];\r\n            const val = values[valIndex];\r\n            // Cancel the loop when a value cannot be used\r\n            if (!this.canInputValue(val)) {\r\n                this.setInputValue(input, null);\r\n                this.setStateForInput(input, InputState.reset);\r\n                return;\r\n            }\r\n            this.setInputValue(input, val.toString());\r\n            valIndex++;\r\n        }\r\n        this.inputs[i].blur();\r\n        this.emitChanges();\r\n    }\r\n    onKeydown(e, i) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const target = e.target;\r\n            const isTargetEmpty = this.isEmpty(target.value);\r\n            const prev = i - 1;\r\n            // processing only the backspace and delete key events\r\n            const isBackspaceKey = yield this.isBackspaceKey(e);\r\n            const isDeleteKey = this.isDeleteKey(e);\r\n            if (!isBackspaceKey && !isDeleteKey) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            this.setInputValue(target, null);\r\n            if (!isTargetEmpty) {\r\n                this.emitChanges();\r\n            }\r\n            // preventing to focusing on the previous field if it does not exist or the delete key has been pressed\r\n            if (prev < 0 || isDeleteKey) {\r\n                return;\r\n            }\r\n            if (isTargetEmpty || this.isPrevFocusableAfterClearing) {\r\n                this.inputs[prev].focus();\r\n            }\r\n        });\r\n    }\r\n    onInputCodeChanges() {\r\n        if (!this.inputs.length) {\r\n            return;\r\n        }\r\n        if (this.isEmpty(this.code)) {\r\n            this.inputs.forEach((input) => {\r\n                this.setInputValue(input, null);\r\n            });\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        const chars = this.code.toString().trim().split('');\r\n        // checking if all the values are correct\r\n        let isAllCharsAreAllowed = true;\r\n        for (const char of chars) {\r\n            if (!this.canInputValue(char)) {\r\n                isAllCharsAreAllowed = false;\r\n                break;\r\n            }\r\n        }\r\n        this.inputs.forEach((input, index) => {\r\n            const value = isAllCharsAreAllowed ? chars[index] : null;\r\n            this.setInputValue(input, value);\r\n        });\r\n    }\r\n    onCodeLengthChanges() {\r\n        if (!this.codeLength) {\r\n            return;\r\n        }\r\n        this._codeLength = this.codeLength;\r\n        if (this._codeLength > this.placeholders.length) {\r\n            const numbers = Array(this._codeLength - this.placeholders.length).fill(1);\r\n            this.placeholders.splice(this.placeholders.length - 1, 0, ...numbers);\r\n        }\r\n        else if (this._codeLength < this.placeholders.length) {\r\n            this.placeholders.splice(this._codeLength);\r\n        }\r\n    }\r\n    onInputsListChanges(list) {\r\n        if (list.length > this.inputs.length) {\r\n            const inputsToAdd = list.filter((item, index) => index > this.inputs.length - 1);\r\n            this.inputs.splice(this.inputs.length, 0, ...inputsToAdd.map(item => item.nativeElement));\r\n            const states = Array(inputsToAdd.length).fill(InputState.ready);\r\n            this.inputsStates.splice(this.inputsStates.length, 0, ...states);\r\n        }\r\n        else if (list.length < this.inputs.length) {\r\n            this.inputs.splice(list.length);\r\n            this.inputsStates.splice(list.length);\r\n        }\r\n        // filling the inputs after changing of their count\r\n        this.onInputCodeChanges();\r\n    }\r\n    focusOnInputAfterAppearing() {\r\n        if (!this.state.isInitialFocusFieldEnabled) {\r\n            return;\r\n        }\r\n        if (this.state.isFocusingAfterAppearingCompleted) {\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        this.focusOnField(this.initialFocusField);\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        this.state.isFocusingAfterAppearingCompleted = document.activeElement === this.inputs[this.initialFocusField];\r\n    }\r\n    emitChanges() {\r\n        setTimeout(() => this.emitCode(), 50);\r\n    }\r\n    emitCode() {\r\n        const code = this.getCurrentFilledCode();\r\n        this.codeChanged.emit(code);\r\n        if (code.length >= this._codeLength) {\r\n            this.codeCompleted.emit(code);\r\n        }\r\n    }\r\n    getCurrentFilledCode() {\r\n        let code = '';\r\n        for (const input of this.inputs) {\r\n            if (!this.isEmpty(input.value)) {\r\n                code += input.value;\r\n            }\r\n        }\r\n        return code;\r\n    }\r\n    isBackspaceKey(e) {\r\n        const isBackspace = (e.key && e.key.toLowerCase() === 'backspace') || (e.keyCode && e.keyCode === 8);\r\n        if (isBackspace) {\r\n            return Promise.resolve(true);\r\n        }\r\n        // process only key with placeholder keycode on android devices\r\n        if (!e.keyCode || e.keyCode !== 229) {\r\n            return Promise.resolve(false);\r\n        }\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                const input = e.target;\r\n                const isReset = this.getStateForInput(input) === InputState.reset;\r\n                if (isReset) {\r\n                    this.setStateForInput(input, InputState.ready);\r\n                }\r\n                // if backspace key pressed the caret will have position 0 (for single value field)\r\n                resolve(input.selectionStart === 0 && !isReset);\r\n            });\r\n        });\r\n    }\r\n    isDeleteKey(e) {\r\n        return (e.key && e.key.toLowerCase() === 'delete') || (e.keyCode && e.keyCode === 46);\r\n    }\r\n    setInputValue(input, value) {\r\n        const isEmpty = this.isEmpty(value);\r\n        const valueClassCSS = 'has-value';\r\n        const emptyClassCSS = 'empty';\r\n        if (isEmpty) {\r\n            input.value = '';\r\n            input.classList.remove(valueClassCSS);\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            input.parentElement.classList.add(emptyClassCSS);\r\n        }\r\n        else {\r\n            input.value = value;\r\n            input.classList.add(valueClassCSS);\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            input.parentElement.classList.remove(emptyClassCSS);\r\n        }\r\n    }\r\n    canInputValue(value) {\r\n        if (this.isEmpty(value)) {\r\n            return false;\r\n        }\r\n        const isDigitsValue = /^[0-9]+$/.test(value.toString());\r\n        return isDigitsValue || (this.isCharsCode || this.isNonDigitsCode);\r\n    }\r\n    setStateForInput(input, state) {\r\n        const index = this.inputs.indexOf(input);\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        this.inputsStates[index] = state;\r\n    }\r\n    getStateForInput(input) {\r\n        const index = this.inputs.indexOf(input);\r\n        return this.inputsStates[index];\r\n    }\r\n    isEmpty(value) {\r\n        return value === null || value === undefined || !value.toString().length;\r\n    }\r\n}\nCodeInputComponent.ɵfac = function CodeInputComponent_Factory(t) { return new (t || CodeInputComponent)(ɵngcc0.ɵɵdirectiveInject(CodeInputComponentConfigToken, 8)); };\nCodeInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CodeInputComponent, selectors: [[\"code-input\"]], viewQuery: function CodeInputComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputsList = _t);\n    } }, inputs: { isNonDigitsCode: \"isNonDigitsCode\", codeLength: \"codeLength\", inputType: \"inputType\", initialFocusField: \"initialFocusField\", isCharsCode: \"isCharsCode\", isCodeHidden: \"isCodeHidden\", isPrevFocusableAfterClearing: \"isPrevFocusableAfterClearing\", isFocusingOnLastByClickIfFilled: \"isFocusingOnLastByClickIfFilled\", code: \"code\", disabled: \"disabled\", autocapitalize: \"autocapitalize\" }, outputs: { codeChanged: \"codeChanged\", codeCompleted: \"codeCompleted\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, \"code-hidden\", 4, \"ngFor\", \"ngForOf\"], [\"autocomplete\", \"one-time-code\", 3, \"type\", \"disabled\", \"click\", \"paste\", \"input\", \"keydown\"], [\"input\", \"\"]], template: function CodeInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CodeInputComponent_span_0_Template, 3, 5, \"span\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.placeholders);\n    } }, dependencies: [ɵngcc1.NgForOf], styles: [\"[_nghost-%COMP%]{--text-security-type:disc;--item-spacing:4px;--item-height:4.375em;--item-border:1px solid #ddd;--item-border-bottom:1px solid #ddd;--item-border-has-value:1px solid #ddd;--item-border-bottom-has-value:1px solid #ddd;--item-border-focused:1px solid #ddd;--item-border-bottom-focused:1px solid #ddd;--item-shadow-focused:0px 1px 5px #ddd;--item-border-radius:5px;--item-background:transparent;--color:#171516;display:flex;transform:translateZ(0);font-size:inherit;color:var(--color)}[_nghost-%COMP%]   span[_ngcontent-%COMP%]{display:block;flex:1;padding-right:var(--item-spacing)}[_nghost-%COMP%]   span[_ngcontent-%COMP%]:first-child{padding-left:var(--item-spacing)}[_nghost-%COMP%]   span.code-hidden[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{text-security:var(--text-security-type);-webkit-text-security:var(--text-security-type);-moz-text-security:var(--text-security-type)}[_nghost-%COMP%]   input[_ngcontent-%COMP%]{width:100%;height:var(--item-height);color:inherit;background:var(--item-background);text-align:center;font-size:inherit;border:var(--item-border);border-bottom:var(--item-border-bottom);border-radius:var(--item-border-radius);-webkit-appearance:none;transform:translateZ(0);-webkit-transform:translateZ(0);outline:none}[_nghost-%COMP%]   input.has-value[_ngcontent-%COMP%]{border:var(--item-border-has-value);border-bottom:var(--item-border-bottom-has-value)}[_nghost-%COMP%]   input[_ngcontent-%COMP%]:focus{border:var(--item-border-focused);border-bottom:var(--item-border-bottom-focused);box-shadow:var(--item-shadow-focused)}\"] });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nCodeInputComponent.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CodeInputComponentConfigToken,] }] }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nCodeInputComponent.propDecorators = {\r\n    inputsList: [{ type: ViewChildren, args: ['input',] }],\r\n    codeLength: [{ type: Input }],\r\n    inputType: [{ type: Input }],\r\n    initialFocusField: [{ type: Input }],\r\n    isNonDigitsCode: [{ type: Input }],\r\n    isCharsCode: [{ type: Input }],\r\n    isCodeHidden: [{ type: Input }],\r\n    isPrevFocusableAfterClearing: [{ type: Input }],\r\n    isFocusingOnLastByClickIfFilled: [{ type: Input }],\r\n    code: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    autocapitalize: [{ type: Input }],\r\n    codeChanged: [{ type: Output }],\r\n    codeCompleted: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CodeInputComponent, [{\n        type: Component,\n        args: [{ selector: 'code-input', template: \"<span *ngFor=\\\"let holder of placeholders; index as i\\\"\\n      [class.code-hidden]=\\\"isCodeHidden\\\">\\n  <input #input\\n         (click)=\\\"onClick($event)\\\"\\n         (paste)=\\\"onPaste($event, i)\\\"\\n         (input)=\\\"onInput($event, i)\\\"\\n         (keydown)=\\\"onKeydown($event, i)\\\"\\n         [type]=\\\"inputType\\\"\\n         [disabled]=\\\"disabled\\\"\\n         [attr.autocapitalize]=\\\"autocapitalize\\\"\\n         autocomplete=\\\"one-time-code\\\"/>\\n</span>\\n\", styles: [\":host{--text-security-type:disc;--item-spacing:4px;--item-height:4.375em;--item-border:1px solid #ddd;--item-border-bottom:1px solid #ddd;--item-border-has-value:1px solid #ddd;--item-border-bottom-has-value:1px solid #ddd;--item-border-focused:1px solid #ddd;--item-border-bottom-focused:1px solid #ddd;--item-shadow-focused:0px 1px 5px #ddd;--item-border-radius:5px;--item-background:transparent;--color:#171516;display:flex;transform:translateZ(0);font-size:inherit;color:var(--color)}:host span{display:block;flex:1;padding-right:var(--item-spacing)}:host span:first-child{padding-left:var(--item-spacing)}:host span.code-hidden input{text-security:var(--text-security-type);-webkit-text-security:var(--text-security-type);-moz-text-security:var(--text-security-type)}:host input{width:100%;height:var(--item-height);color:inherit;background:var(--item-background);text-align:center;font-size:inherit;border:var(--item-border);border-bottom:var(--item-border-bottom);border-radius:var(--item-border-radius);-webkit-appearance:none;transform:translateZ(0);-webkit-transform:translateZ(0);outline:none}:host input.has-value{border:var(--item-border-has-value);border-bottom:var(--item-border-bottom-has-value)}:host input:focus{border:var(--item-border-focused);border-bottom:var(--item-border-bottom-focused);box-shadow:var(--item-shadow-focused)}\"] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CodeInputComponentConfigToken]\n            }] }]; }, { isNonDigitsCode: [{\n            type: Input\n        }], codeChanged: [{\n            type: Output\n        }], codeCompleted: [{\n            type: Output\n        }], inputsList: [{\n            type: ViewChildren,\n            args: ['input']\n        }], codeLength: [{\n            type: Input\n        }], inputType: [{\n            type: Input\n        }], initialFocusField: [{\n            type: Input\n        }], isCharsCode: [{\n            type: Input\n        }], isCodeHidden: [{\n            type: Input\n        }], isPrevFocusableAfterClearing: [{\n            type: Input\n        }], isFocusingOnLastByClickIfFilled: [{\n            type: Input\n        }], code: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], autocapitalize: [{\n            type: Input\n        }] }); })();\n\nclass CodeInputModule {\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: CodeInputModule,\r\n            providers: [\r\n                { provide: CodeInputComponentConfigToken, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\nCodeInputModule.ɵfac = function CodeInputModule_Factory(t) { return new (t || CodeInputModule)(); };\nCodeInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CodeInputModule });\nCodeInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CodeInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    CodeInputComponent\n                ],\n                exports: [\n                    CodeInputComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CodeInputModule, { declarations: function () { return [CodeInputComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CodeInputComponent]; } }); })();\n\n/*\r\n * Public API Surface of code-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CodeInputComponent, CodeInputModule, CodeInputComponentConfigToken as ɵa };\n\n"],"names":["__awaiter","InjectionToken","EventEmitter","Component","Optional","Inject","ViewChildren","Input","Output","NgModule","CommonModule","ɵngcc0","ɵngcc1","_c0","CodeInputComponent_span_0_Template","rf","ctx","_r5","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","CodeInputComponent_span_0_Template_input_click_1_listener","$event","ɵɵrestoreView","ctx_r4","ɵɵnextContext","ɵɵresetView","onClick","CodeInputComponent_span_0_Template_input_paste_1_listener","restoredCtx","i_r2","index","ctx_r6","onPaste","CodeInputComponent_span_0_Template_input_input_1_listener","ctx_r7","onInput","CodeInputComponent_span_0_Template_input_keydown_1_listener","ctx_r8","onKeydown","ɵɵelementEnd","ctx_r0","ɵɵclassProp","isCodeHidden","ɵɵadvance","ɵɵproperty","inputType","disabled","ɵɵattribute","autocapitalize","CodeInputComponentConfigToken","defaultComponentConfig","codeLength","initialFocusField","undefined","isCharsCode","isPrevFocusableAfterClearing","isFocusingOnLastByClickIfFilled","code","InputState","CodeInputComponent","constructor","config","isNonDigitsCode","codeChanged","codeCompleted","placeholders","inputs","inputsStates","state","isFocusingAfterAppearingCompleted","isInitialFocusFieldEnabled","Object","assign","prop","hasOwnProperty","ngOnInit","isEmpty","onCodeLengthChanges","ngAfterViewInit","inputsListSubscription","inputsList","changes","subscribe","onInputsListChanges","bind","ngAfterViewChecked","focusOnInputAfterAppearing","ngOnChanges","onInputCodeChanges","ngOnDestroy","unsubscribe","reset","isChangesEmitting","focusOnField","emitChanges","_codeLength","Error","focus","e","target","last","isFilled","getCurrentFilledCode","length","setTimeout","i","value","data","canInputValue","preventDefault","stopPropagation","setInputValue","setStateForInput","values","toString","trim","split","j","next","blur","clipboardData","getData","valIndex","input","val","isTargetEmpty","prev","isBackspaceKey","isDeleteKey","forEach","chars","isAllCharsAreAllowed","char","numbers","Array","fill","splice","list","inputsToAdd","filter","item","map","nativeElement","states","ready","document","activeElement","emitCode","emit","isBackspace","key","toLowerCase","keyCode","Promise","resolve","isReset","getStateForInput","selectionStart","valueClassCSS","emptyClassCSS","classList","remove","parentElement","add","isDigitsValue","test","indexOf","ɵfac","CodeInputComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","CodeInputComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CodeInputComponent_Template","ɵɵtemplate","dependencies","NgForOf","styles","ctorParameters","decorators","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","CodeInputModule","forRoot","ngModule","providers","provide","useValue","CodeInputModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa"],"sourceRoot":"webpack:///","x_google_ignoreList":[36]}