{"version":3,"file":"src_app_portal_moduls_scheduled-services_scheduled-services_module_ts.js","mappings":"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","sources":["./src/app/portal/moduls/scheduled-services/models/cancelMedicalHome.ts","./src/app/portal/moduls/scheduled-services/models/scheduledServices.ts","./src/app/portal/moduls/scheduled-services/scheduled-services-routing.module.ts","./src/app/portal/moduls/scheduled-services/scheduled-services.module.ts","./src/app/portal/moduls/scheduled-services/scheduled-services.page.ts","./src/app/portal/moduls/scheduled-services/services/scheduled-services.service.ts"],"sourcesContent":["export class cancelMedicalHomeService {\n    IdService: string;\n  }","export class ScheduledServices {\n    Code: string | null;\n    ServiceType: string | null;\n    IdReference: string | null;\n    AgendaType: string | null;\n    RDACode: string | null;\n    ClinicCode: string | null;\n    SpecialityCode: string | null;\n    YearMonthDay: string | null;\n    Time: string | null;\n    Document: string | null;\n    DocumentTypeUser: string | null;\n    DocumentUser: string | null;\n    Canceled: boolean | null;\n    UserDocumentType: number | null;\n    UserDocumentTypeStr: string | null;\n    userDocument: number | null;\n    UserName: string | null;\n    ApplicantNameOne: string | null;\n    ApplicantNameTwo: string | null;\n    ApplicantLastNameOne: string | null;\n    ApplicantLastNameTwo: string | null;\n    ApplicantDocumentType: string | null;\n    ApplicantDocumentTypeName: string | null;\n    ApplicantDocument: string | null;\n    ApplicantCellPhone: string | null;\n    ApplicantMail: string | null;\n  }\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HaveBeLoggedInGuard } from 'src/app/core/guard/have-be-logged-in.guard';\nimport { ScheduledServicesPage } from './scheduled-services.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [HaveBeLoggedInGuard],\n    component: ScheduledServicesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScheduledServicesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ScheduledServicesPageRoutingModule } from './scheduled-services-routing.module';\nimport { ScheduledServicesPage } from './scheduled-services.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ScheduledServicesPageRoutingModule\n  ],\n  declarations: [ScheduledServicesPage]\n})\nexport class ScheduledServicesPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { InformativeModalComponent } from 'src/app/shared/components/informative-modal/informative-modal.component';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { environment } from 'src/environments/environment';\nimport { cancelButtonConfigExport } from './configs/cancelButtonConfig';\nimport { cancelMedicalHomeService } from './models/cancelMedicalHome';\nimport { ScheduledServices } from './models/scheduledServices';\nimport { ScheduledServicesService } from './services/scheduled-services.service';\n\n@Component({\n  selector: 'app-scheduled-services',\n  templateUrl: './scheduled-services.page.html',\n  styleUrls: ['./scheduled-services.page.scss'],\n})\n\nexport class ScheduledServicesPage implements OnInit {\n\n  isLoading: boolean;\n  translate: TranslateService;\n  country = environment.country;\n  userLogin = new UserLogin();\n  scheduledServices: any;\n  showPagination: boolean = false;\n  p: number = 1;\n  bsModalRef: BsModalRef;\n  cancelButtonConfig: any = cancelButtonConfigExport;\n  mockedScheduledServices: any = [\n    {\n      DescriptionState: \"Pendiente\",\n      UserName: \"Juan\",\n      UserDocumentTypeStr: \"DNI\",\n      userDocument: \"12345678\",\n      ServiceTypeDescription: \"Consulta\",\n      SpecialityName: \"Odontología\",\n      DoctorName: \"Dr. Juan\",\n      Date: \"10/10/2019\",\n      Address: \"Av. Las Flores 123\",\n      CityName: \"Lima\",\n      ServiceType: 9,\n      CodeState: 2,\n      ServiceNumber: \"12\",\n      Canceled: false\n    },\n    {\n      DescriptionState: \"Pendiente\",\n      UserName: \"Juan\",\n      UserDocumentTypeStr: \"DNI\",\n      userDocument: \"12345678\",\n      ServiceTypeDescription: \"Consulta\",\n      SpecialityName: \"Odontología\",\n      DoctorName: \"Dr. Juan\",\n      Date: \"10/10/2019\",\n      Address: \"Av. Las Flores 123\",\n      CityName: \"Lima\",\n      ServiceType: 7,\n      CodeState: 1,\n      ServiceNumber: \"12\"\n    },\n    {\n      DescriptionState: \"Pendiente\",\n      UserName: \"Juan\",\n      UserDocumentTypeStr: \"DNI\",\n      userDocument: \"12345678\",\n      ServiceTypeDescription: \"Consulta\",\n      SpecialityName: \"Odontología\",\n      DoctorName: \"Dr. Juan\",\n      Date: \"10/10/2019\",\n      Address: \"Av. Las Flores 123\",\n      CityName: \"Lima\",\n      ServiceType: 7,\n      CodeState: 1,\n      ServiceNumber: \"12\"\n    }\n  ]\n\n  constructor(\n    private scheduledServicesService: ScheduledServicesService,\n    translate: TranslateService,\n    private route: ActivatedRoute,\n    private bsModalService: BsModalService,\n    private router: Router\n  ) {\n    this.translate = translate;\n    translate.setDefaultLang(environment.country);\n  }\n\n  ngOnInit() {\n    this.cancelButtonConfig.text = this.translate.instant('PORTAL.SCHEDULED-SERVICES.TitleButtonCancel')\n    this.userLogin.documentType = localStorage.getItem(\"documentType\");\n    this.userLogin.document = localStorage.getItem(\"document\");\n    this.userLogin.idReference = localStorage.getItem(\"registerId\");\n    let lastNameOne = localStorage.getItem(\"LastNameOne\");\n    let lastNameTwo = localStorage.getItem(\"LastNameTwo\");\n    let nameTwo = localStorage.getItem(\"NameTwo\");\n    this.userLogin.nameUser = localStorage.getItem(\"NameOne\") + \" \" + nameTwo + \" \" + lastNameOne + \" \" + lastNameTwo;\n    this.loadScheduledServices();\n  }\n\n  ngAfterViewInit() {\n    let chatData = this.route.snapshot.data;\n    // let scriptChatLoaded = localStorage.getItem(\"scriptChatLoaded\");\n    // if(scriptChatLoaded === \"true\"){\n    //if (zopimComponent) {\n    //  zopimComponent.settings(null, chatData['chatVisible'], chatData['chatWidget'], chatData['chatDepartment'], '', '');\n    //}\n  }\n\n  loadScheduledServices() {\n    this.isLoading = true;\n    this.scheduledServicesService\n      .getSheduledServices(this.userLogin)\n      .subscribe(\n        (result: any) => {\n          this.isLoading = false;\n          if (result.StatusCode === 0) {\n            if (result.ServiceHistory.length > 0) {\n              this.showPagination = true;\n              this.scheduledServices = result.ServiceHistory;\n            } else {/* Mock\n              this.showPagination = true;\n              this.scheduledServices = this.mockedScheduledServices;\n              */\n              this.showPagination = false;\n              this.bsModalRef = this.generateInformativeModal('Servicios programados', 'No se encontraron servicios programados.', true, false);\n              this.bsModalRef.content.onClose.subscribe((accept: any) => {\n                this.router.navigate(['/portal/home'], { replaceUrl: true });\n              })\n            }\n          } else {\n            this.bsModalRef = this.generateInformativeModal(result.Title, result.Message, true, false);\n            this.bsModalRef.content.onClose.subscribe((accept: any) => {\n              this.router.navigate(['/portal/home'], { replaceUrl: true });\n            })\n          }\n        },\n        error => this.ErrorRegister(error));\n  }\n\n  cancelService(object: any) {\n    this.bsModalRef = this.generateInformativeModal('Cancelar servicio', '¿Estás seguro que deseas cancelar el servicio?', false, true);\n    this.bsModalRef.content.onClose.subscribe((accept: any) => {\n      if (accept) {\n        this.isLoading = true;\n        let scheduledServices = new ScheduledServices();\n        scheduledServices.Code = object.Code;\n        scheduledServices.Canceled = object.Canceled\n        scheduledServices.ServiceType = object.ServiceType;\n        let coordination = object.Coordination;\n        scheduledServices.IdReference = coordination.IdReference;\n        scheduledServices.AgendaType = coordination.AgendaType;\n        scheduledServices.RDACode = coordination.RDACode;\n        scheduledServices.ClinicCode = coordination.MedicalCenter ? coordination.MedicalCenter.ClinicCode : \"\";\n        scheduledServices.SpecialityCode = coordination.SpecialityCode;\n        scheduledServices.YearMonthDay = coordination.YearMonthDay;\n        scheduledServices.Time = coordination.Time;\n        scheduledServices.Document = coordination.Document;\n        scheduledServices.DocumentTypeUser = this.userLogin.documentType;\n        scheduledServices.DocumentUser = this.userLogin.document;\n        scheduledServices.ApplicantNameOne = localStorage.getItem(\"NameOne\");\n        scheduledServices.ApplicantNameTwo = localStorage.getItem(\"NameTwo\");\n        scheduledServices.ApplicantLastNameOne = localStorage.getItem(\"LastNameOne\");\n        scheduledServices.ApplicantLastNameTwo = localStorage.getItem(\"LastNameTwo\");\n        scheduledServices.ApplicantDocumentType = localStorage.getItem(\"documentType\");\n        scheduledServices.ApplicantDocumentTypeName = localStorage.getItem(\"documentTypeName\");\n        scheduledServices.ApplicantDocument = localStorage.getItem(\"document\");\n        scheduledServices.ApplicantCellPhone = localStorage.getItem(\"CellPhone\");\n        scheduledServices.ApplicantMail = localStorage.getItem(\"userName\");\n\n        this.scheduledServicesService\n          .cancelService(scheduledServices).subscribe(\n            (result: any) => {\n              if (result.StatusCode === 0) {\n                this.isLoading = false;\n                this.bsModalRef = this.generateInformativeModal(result.Message, result.Title, false, false);\n                this.bsModalRef.content.onClose.subscribe((accept: any) => {\n                  window.location.reload()\n                })\n              } else {\n                this.isLoading = false;\n                this.bsModalRef = this.generateInformativeModal(result.Message, result.Title, true, false);\n              }\n            }\n          )\n      }\n    }, ((error: any) => this.ErrorRegister(error)))\n  }\n\n  cancelMedicalHomeService(object: any) {\n    if (object.UserName == null || object.UserName == '') {\n      object.UserName = this.userLogin.nameUser\n    }\n    this.bsModalRef = this.generateInformativeModal('Cancelar servicio', '¿Estás seguro que deseas cancelar el servicio?', false, true);\n    this.bsModalRef.content.onClose.subscribe((accept: any) => {\n      if (accept) {\n        this.isLoading = true;\n        let cancelMedicalService = new cancelMedicalHomeService();\n        cancelMedicalService.IdService = object.IdService;\n        this.scheduledServicesService.cancelMedicalHomeService(cancelMedicalService).subscribe(\n          (result: any) => {\n            this.isLoading = false;\n            if (result.StatusCode === 0) {\n              this.bsModalRef = this.generateInformativeModal(result.Title, result.Message, false, false);\n            } else {\n              this.bsModalRef = this.generateInformativeModal(result.Title, result.Message, true, false);\n            }\n          })\n      }\n    }, ((error: any) => this.ErrorRegister(error)))\n  }\n\n  pageChanged(event: any) {\n    this.p = event;\n    //Mover scroll\n    //$(window).scrollTop(0);\n  }\n\n  private ErrorRegister(error: any) {\n    this.isLoading = false;\n    this.bsModalRef = this.generateInformativeModal('Inconvenientes con el portal', 'En este momento no podemos procesar tu solicitud. Por favor inténtalo mas tarde.', true, false);\n    /*\n    this.dialogService.removeAll();\n    this.dialogService.addDialog(ModalComponent, {\n      title: 'Inconvenientes con el portal',\n      message: 'En este momento no podemos procesar tu solicitud. Por favor inténtalo mas tarde.',\n      imageUrl: this.config.info.alertImage,\n      buttonConfirmText: \"ACEPTAR\"\n    }, { closeByClickingOutside: true }); */\n  }\n\n  generateInformativeModal(subTitle: string, description: string, isError: boolean, twoButtons: boolean) {\n    const initialState: ModalOptions = {\n      initialState: {\n        iconHeader: isError ? 'alert-circle.svg' : 'alert-check.svg',\n        subTitle: subTitle,\n        description: description,\n        onlyButtonConfirm: !twoButtons,\n        textButton: 'Aceptar',\n        textButton1: 'Cancelar',\n        textButton2: 'Aceptar',\n        visibleButtonClose: false,\n      },\n      class: 'modal-dialog-centered modal-rounded',\n      id: 'modal-error-no-services',\n      backdrop: true,\n      ignoreBackdropClick: true\n    };\n    return this.bsModalService.show(InformativeModalComponent, initialState);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserLogin } from 'src/app/shared/models/user-login';\nimport { environment } from 'src/environments/environment';\nimport { cancelMedicalHomeService } from '../models/cancelMedicalHome';\nimport { ScheduledServices } from '../models/scheduledServices';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduledServicesService {\n\n  constructor(private http: HttpClient) { }\n\n  getSheduledServices(userLogin: UserLogin) {\n    let url = environment.API_URL + 'Services/GetSheduledServices';\n    let params = {\n      DocumentType: userLogin.documentType,\n      Document: userLogin.document,\n      IdReference: userLogin.idReference\n    }\n    return this.http.post(url, params)\n  }\n\n  cancelService(scheduledServices: ScheduledServices) {\n    let url = environment.API_URL + 'Services/CancelService';\n    //let url = \"http://localhost:52401/api/Services/CancelService\";\n    let params = {\n      Code: scheduledServices.Code,\n      ServiceType: scheduledServices.ServiceType,\n      DocumentType: scheduledServices.DocumentTypeUser,\n      Document: scheduledServices.DocumentUser,\n      CancelCoordinationRequest: {\n        IdReference: scheduledServices.IdReference,\n        AgendaType: scheduledServices.AgendaType,\n        RDACode: scheduledServices.RDACode,\n        ClinicCode: scheduledServices.ClinicCode,\n        SpecialityCode: scheduledServices.SpecialityCode,\n        YearMonthDay: scheduledServices.YearMonthDay,\n        Time: scheduledServices.Time,\n        Document: scheduledServices.Document\n      },\n      Applicant: {\n        ApplicantNameOne: scheduledServices.ApplicantNameOne,\n        ApplicantNameTwo: scheduledServices.ApplicantNameTwo,\n        ApplicantLastNameOne: scheduledServices.ApplicantLastNameOne,\n        ApplicantLastNameTwo: scheduledServices.ApplicantLastNameTwo,\n        ApplicantDocumentType: scheduledServices.ApplicantDocumentType,\n        ApplicantDocumentTypeName: scheduledServices.ApplicantDocumentTypeName,\n        ApplicantDocument: scheduledServices.ApplicantDocument,\n        ApplicantCellPhone: scheduledServices.ApplicantCellPhone,\n        ApplicantMail: scheduledServices.ApplicantMail\n      }\n    }\n    return this.http.post(url, params)\n  }\n\n  cancelMedicalHomeService(cancelMedicalHomeService: cancelMedicalHomeService) {\n    let url = environment.API_URL + 'Services/GetCancelMedicalHomeService';\n    let params = {\n      IdService: cancelMedicalHomeService.IdService\n    }\n    return this.http.post(url, params)\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}